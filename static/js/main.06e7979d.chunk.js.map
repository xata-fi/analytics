{"version":3,"sources":["assets/xata-logo.png","assets/eth.png","assets/coinLogos sync nonrecursive //.(png|jpe?g|svg)$","assets/coinLogos/ata.png","contexts/LocalStorage.js","Theme/index.js","chainConfig.ts","apollo/client.js","constants/index.js","apollo/queries.js","contexts/Application.js","utils/index.js","utils/data.ts","contexts/PairData.js","contexts/GlobalData.js","contexts/TokenData.js","utils/returns.ts","contexts/User.js","components/Row/index.js","components/Column/index.js","components/LocalLoader/index.js","components/Link/index.js","components/index.js","components/TokenLogo/index.js","components/DoubleLogo/index.js","hooks/index.ts","components/Popover/index.tsx","components/QuestionHelper/index.tsx","components/FormattedName/index.js","components/PairList/index.js","components/TokenList/index.js","components/DropdownSelect/index.js","components/TxnList/index.js","components/TradingviewChart/index.js","components/GlobalChart/index.js","components/Search/index.js","components/CustomSelect/index.js","components/Panel/index.js","components/Checkbox/index.js","pages/GlobalPage.js","components/ButtonStyled/index.js","components/CandleChart/index.js","components/TokenChart/index.js","components/Copy/index.js","components/Warning/index.js","components/HoverText/index.tsx","pages/TokenPage.js","components/PairChart/index.js","pages/PairPage.js","components/UserChart/index.js","components/PairReturnsChart/index.js","components/PositionList/index.js","pages/AccountPage.js","pages/AllTokensPage.js","pages/AllPairsPage.js","components/AccountSearch/index.js","components/PinnedData/index.js","assets/xata-brand.svg","components/Title/index.js","components/Toggle/index.tsx","components/SideNav/index.js","components/LPList/index.js","pages/AccountLookup.js","components/analytics/GoogleAnalyticsReporter.jsx","App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","UPDATABLE_KEYS","LocalStorageContext","createContext","useLocalStorageContext","useContext","reducer","state","type","payload","key","value","some","k","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","useReducer","undefined","dispatch","updateKey","useCallback","useMemo","Updater","useEffect","setItem","stringify","Math","floor","Date","now","useDarkModeManager","isDarkMode","toggleDarkMode","usePathDismissed","path","newPaths","useSavedAccounts","savedAccounts","addAccount","account","removeAccount","index","indexOf","slice","length","useSavedPairs","address","token0Address","token1Address","token0Symbol","token1Symbol","newList","useSavedTokens","symbol","ThemeProvider","darkMode","theme","color","customColor","textColor","panelColor","backgroundColor","xataOrange","concreteGray","inputBackground","shadowColor","mercuryGray","text1","text2","text3","text4","text5","white","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","onlyLight","divider","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","shadow1","red1","green1","yellow1","yellow2","link","blue","background","TextWrapper","styled","Text","TYPE","props","fontWeight","fontSize","ThemedBackground","div","a","attrs","target","rel","GlobalStyle","createGlobalStyle","chainConfig","BINANCE_SMART_CHAIN","blockchainName","scannerName","scannerUrl","trustwalletChain","tokenStandard","conveyorSubgraph","mevSubgraph","blocksSubgraph","POLYGON","getClient","network","client","ApolloClient","HttpLink","uri","cache","InMemoryCache","shouldBatch","mevClient","healthClient","stakingClient","blockClient","timeframeOptions","WEEK","MONTH","HALF_YEAR","ALL_TIME","TOKEN_WHITELIST","TOKEN_BLACKLIST","PAIR_BLACKLIST","BLOCKED_WARNINGS","FEE_WARNING_TOKENS","UNTRACKED_COPY","TRACKED_OVERRIDES","ADDRESS_TO_LOGO","getHealthQuery","isMEV","subgraphName","gql","GET_BLOCK","GET_BLOCKS","timestamps","queryString","timestamp","PRICES_BY_BLOCK","tokenAddress","blocks","block","number","TOP_LPS_PER_PAIRS","HOURLY_PAIR_RATES","pairAddress","SHARE_VALUE","ETH_PRICE","USER_MINTS_BUNRS_PER_PAIR","USER_HISTORY","USER_POSITIONS","USER_TRANSACTIONS","PAIR_CHART","PAIR_DAY_DATA_BULK","pairs","startTimestamp","pairsString","pair","GLOBAL_CHART","GLOBAL_DATA","currentDate","startDateToFetch","round","setDate","getDate","MEV_CHART","GLOBAL_TXNS","ALL_TOKENS","TOKEN_SEARCH","PAIR_SEARCH","ALL_PAIRS","PairFields","PAIRS_CURRENT","PAIR_DATA","PAIRS_BULK","PAIRS_HISTORICAL_BULK","TOKEN_CHART","TokenFields","TOKEN_TOP_DAY_DATAS","TOKENS_HISTORICAL_BULK","tokens","tokenString","token","TOKEN_DATA","FILTERED_TRANSACTIONS","dayjs","extend","utc","ApplicationContext","useApplicationContext","currency","newTimeFrame","supportedTokens","INITIAL_STATE","CURRENCY","TIME_KEY","NETWORK","update","updateTimeframe","updateSessionStart","updateSupportedTokens","updateLatestBlock","updateHeadBlock","updateNetwork","useLatestBlocks","useNetwork","prevNetwork","usePrevious","latestBlock","headBlock","useState","headMEVBlock","setHeadMEVBlock","latestMEVBlock","setLatestMEVBlock","query","then","res","syncedBlock","data","indexingStatusForCurrentVersion","chains","chainHeadBlock","catch","console","log","fetch","fetchMEVLatest","useTimeframe","useListedTokens","fetchList","toFormat","_Decimal","getTimeframe","timeWindow","utcStartTime","utcEndTime","subtract","endOf","unix","startOf","getPoolLink","remove","BigNumber","set","EXPONENTIAL_AT","toNiceDate","date","format","shortenAddress","chars","isAddress","substring","getTimestampsForChanges","utcCurrentTime","splitQuery","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","sliced","fetchPolicy","result","getBlockFromTimestamp","variables","timestampFrom","timestampTo","getBlocksFromTimestamps","t","push","split","getShareValueOverTime","utcSevenDaysBack","getTimestampRange","row","values","sharePriceUsd","parseFloat","reserveUSD","totalSupply","reserve0","reserve1","token0DerivedETH","token0","derivedETH","token1DerivedETH","token1","roiUsd","ethPrice","token0PriceUSD","token1PriceUSD","brow","timestamp_from","period_length","periods","i","toNiceDateYear","ethers","utils","getAddress","toLowerCase","toK","num","Numeral","getUrls","showTransaction","tx","showAddress","showToken","showBlock","formatDollarAmount","digits","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formattedNum","usd","isNaN","toFixed","Number","toLocaleString","toString","formattedPercent","percent","fixedPercent","get2DayPercentChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isFinite","getPercentChange","TOKEN_OVERRIDES","name","updateNameData","includes","safeAccess","object","reduce","accumulator","currentValue","PairDataContext","usePairDataContext","topPairs","added","transactions","txns","chartData","hourlyData","updateTopPairs","updatePairTxns","updateChartData","updateHourlyData","getBulkPairData","pairList","t1","t2","tWeek","b1","b2","bWeek","allPairs","current","Promise","all","oneDayResult","twoDayResult","oneWeekResult","oneDayData","obj","cur","twoDayData","oneWeekData","oneDayHistory","newData","twoDayHistory","oneWeekHistory","parseData","pairData","oneDayBlock","volumeUSD","oneDayVolumeUSD","volumeChangeUSD","untrackedVolumeUSD","oneDayVolumeUntracked","volumeChangeUntracked","oneWeekVolumeUSD","oneWeekVolumeUntracked","trackedReserveUSD","trackedReserveETH","liquidityChangeUSD","createdAtBlockNumber","getPairTransactions","mints","burns","swaps","getPairChartData","startTime","concat","pairDayDatas","dayIndexSet","Set","dayIndexArray","forEach","dayData","add","dailyVolumeUSD","latestLiquidityUSD","currentDayIndex","nextDay","has","dayString","sort","b","parseInt","getHourlyRateData","time","filter","rate0","token0Price","rate1","token1Price","formattedHistoryRate0","formattedHistoryRate1","open","close","useEthPrice","formattedPairs","getData","usePairData","fetchData","useAllPairData","offsetVolumes","weekOfYear","GlobalDataContext","useGlobalDataContext","globalData","daily","weekly","MEVChartData","oneDayPrice","ethPriceChange","allTokens","topLps","updateTransactions","updateChart","updateMEVChart","updateEthPrice","updateAllPairsInXata","updateAllTokensInXata","updateTopLps","getGlobalData","oldEthPrice","utcOneDayBack","utcTwoDaysBack","utcOneWeekBack","utcTwoWeeksBack","twoDayBlock","oneWeekBlock","twoWeekBlock","conveyorV2Factories","twoWeekResult","twoWeekData","totalVolumeUSD","oneWeekVolume","weeklyVolumeChange","txCount","oneDayTxns","txnChange","totalLiquidityUSD","totalLiquidityETH","checked","getChartData","oldestDateToFetch","offsetData","weeklyData","xatadayDatas","latestDayDats","mostLiquidTokens","startIndexWeekly","currentWeek","entry","week","weeklyVolumeUSD","getMEVChartData","xatadayMEVDatas","dataPoint","quickFixUnusedSlippageUSD","totalUnusedSlippageUSD","getGlobalTransactions","transaction","mint","burn","swap","getEthPrice","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","getAllPairsOnXata","getAllTokensOnXata","useGlobalData","useGlobalChartData","oldestDateFetch","setOldestDateFetched","activeWindow","chartDataDaily","chartDataWeekly","combinedData","tokenAddresses","useTokenDataContext","datas","acc","isMissingData","val","formattedByDate","dayDatas","getTokenChartData","fetchDatas","useTokenChartDataCombined","newChartData","newWeeklyData","useMEVChartData","mevDataDaily","ethPriceOld","newPrice","priceChange","checkForEthPrice","TokenDataContext","topTokens","combinedVol","interval","updateTopTokens","updateCombinedVolume","updateTokenTxns","updateAllPairs","updatePriceData","getTopTokens","tokenids","ids","tokenDayDatas","accum","tradeVolumeUSD","currentLiquidityUSD","totalLiquidity","oldLiquidityUSD","priceChangeUSD","priceUSD","oneDayVolumeETH","tradeVolume","bulkResults","getTokenData","oneDayVolumeUT","volumeChangeUT","getTokenTransactions","allPairsFormatted","getTokenPairs","getIntervalTokenData","formattedHistory","tokenAddr","latestPriceUSD","latestPairDatas","mostLiquidPairs","useTokenData","tokenData","useTokenPriceData","currentTime","windowSize","useAllTokenData","priceOverrides","formatPricesForEarlyTimestamps","position","getPrincipalForUserPerPair","user","amount0","amount1","results","mintToken0","mintToken1","amountUSD","burnToken0","burnToken1","getMetricsForPositionWindow","positionT0","positionT1","t0Ownership","liquidityTokenBalance","liquidityTokenTotalSupply","t1Ownership","token0_amount_t0","token1_amount_t0","token0_amount_t1","token1_amount_t1","sqrK_t0","sqrt","priceRatioT1","token0_amount_no_fees","token1_amount_no_fees","no_fees_usd","difference_fees_token1","difference_fees_usd","assetValueT0","assetValueT1","imp_loss_usd","xata_return","netValueT0","hodleReturn","netReturn","xataReturn","impLoss","fees","getHistoricalPairReturns","startDateTimestamp","currentPairData","pairSnapshots","currentETHPrice","createdAtTimestamp","dayIndex","sortedPositions","dayTimestamps","shareValues","shareValuesFormatted","share","netFees","dayTimestamp","timestampCeiling","dailyChanges","snapshot","localReturns","currentLiquidityValue","localFees","usdValue","getLPReturnsOnPair","snapshots","principal","currentPosition","net","return","xata","sum","UserContext","useUserContext","positions","miningPositions","historyData","updatePositions","updateMiningPositions","updateUserSnapshots","updateUserPairReturns","useUserSnapshots","allResults","found","liquidityPositionSnapshots","useUserPositionChart","setStartDateTimestamp","useStartTimestamp","currentSnapshot","Row","Box","align","padding","border","borderRadius","justify","RowBetween","AutoRow","wrap","gap","RowFixed","Column","AutoColumn","pulse","keyframes","Wrapper","fill","height","css","AnimatedImg","LocalLoader","src","xata_logo","alt","Link","external","rest","CustomLink","RouterLink","lighten","darken","BasicLink","Divider","BlockedWrapper","BlockedMessageWrapper","IconWrapper","Hover","fade","StyledIcon","EmptyCard","PageWrapper","span","ul","li","isActive","ContentWrapper","ContentWrapperLarge","FullWrapper","Inline","Image","img","size","StyledEthereumLogo","TokenLogo","header","error","setError","images","requireContext","item","replace","importAllImages","require","EthereumLogo","boxShadow","onError","event","preventDefault","DoubleTokenLogo","a0","a1","margin","TokenWrapper","sizeraw","HigherLogo","CoveredLogo","useColor","setColor","Vibrant","from","getPalette","err","palette","detectedHex","hex","AAscore","shade","PopoverContainer","show","transparentize","ReferenceElement","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","usePopper","strategy","modifiers","options","offset","element","styles","attributes","callback","delay","savedCallback","useRef","tick","setInterval","clearInterval","useInterval","ref","popper","QuestionWrapper","TooltipContainer","Tooltip","text","QuestionHelper","disabled","setShow","marginLeft","onClick","onMouseEnter","onMouseLeave","adjustSize","FormattedName","maxCharacters","showHover","setShowHover","PageButtons","Arrow","faded","List","DashGrid","ListWrapper","ClickableText","DataText","Flex","SORT_FIELD","FIELD_TO_VALUE","field","useTracked","formatDataText","trackedValue","supressWarning","showUntracked","opacity","textAlign","withRouter","disbaleLinks","maxItems","below600","useMedia","below740","below1080","page","setPage","maxPage","setMaxPage","ITEMS_PER_PAGE","sortDirection","setSortDirection","sortedColumn","setSortedColumn","extraPages","ListItem","liquidity","volume","apy","weekVolume","focus","area","marginRight","width","whiteSpace","to","addressA","addressB","pairA","pairB","center","alignItems","justifyContent","p","itemMax","below680","formattedTokens","filteredList","Dropdown","ArrowStyled","DropdownSelect","active","setActive","showDropdown","toggleDropdown","option","SortText","button","TXN_TYPE","ALL","SWAP","ADD","REMOVE","TxnList","symbol0Override","symbol1Override","filteredItems","setFilteredItems","txFilter","setTxFilter","toggleCurrency","useCurrentCurrency","newTxns","newTxn","hash","token0Amount","token1Amount","sender","netToken0","amount0In","amount0Out","netToken1","amount1In","amount1Out","abs","filtered","below780","urls","href","symbol0","symbol1","formattedS0","formattedS1","getTransactionType","valueETH","inSeconds","diff","inMinutes","inHours","inDays","formatTime","pl","CHART_TYPES","TradingViewChart","baseIsEqual","base","baseChange","title","useWeekly","chartCreated","setChartCreated","formattedData","topScale","previousTheme","tooltip","document","getElementById","removeChild","resize","setLastBarText","toolTip","innerHTML","formattedPercentChange","chart","createChart","layout","rightPriceScale","scaleMargins","top","bottom","borderVisible","timeScale","grid","horzLines","visible","vertLines","crosshair","horzLine","labelVisible","vertLine","localization","priceFormatter","series","addHistogramSeries","priceFormat","lineColor","lineWidth","addAreaSeries","topColor","bottomColor","setData","createElement","setAttribute","className","appendChild","display","left","percentChange","subscribeCrosshairMove","param","point","x","y","dateStr","year","month","day","price","seriesPrices","get","fitContent","scrollToPosition","CHART_VIEW","VOLUME","LIQUIDITY","MEV","VOLUME_WINDOW","GlobalChart","chartView","setChartView","volumeWindow","dailyData","dailyMEVData","latestTotalMEV","previousTotalMEV","latestMEVChange","chartDataFiltered","currentData","below800","isClient","container","clientWidth","setWidth","handleResize","addEventListener","removeEventListener","aspect","Container","small","Input","input","large","SearchIconLarge","SearchIcon","CloseIcon","X","Menu","hide","MenuItem","Heading","Gray","Blue","Search","useAllTokensInXata","allTokenData","useAllPairsInXata","allPairData","showMenu","toggleMenu","setValue","toggleShadow","toggleBottomShadow","below700","below470","below410","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","escapeRegExp","string","toUpperCase","asSymbol","as0","as1","asAddress","foundTokens","asName","searchedToken","included","uniqueTokens","searchedPair","uniquePairs","pairsFound","filteredTokenList","tokenA","tokenB","tokenEntryKey","match","RegExp","m","filteredPairList","tokensShown","setTokensShown","pairsShown","setPairsShown","onDismiss","wrapperRef","menuRef","handleClick","contains","shadow","placeholder","onChange","onFocus","SelectContainer","Select","SelectText","OptionsWrapper","isShow","Option","CustomSelect","persistedValue","labels","label","setLabel","setIsShow","handler","listener","useOnClickOutside","panelPseudo","Panel","RebassBox","hover","grouped","rounded","last","StyleCheckbox","ButtonText","CheckBox","setChecked","ml","ListOptions","GridRow","useGlobalTransactions","querySelector","scrollTo","behavior","setUseTracked","paddingBottom","mb","lineHeight","minHeight","marginTop","marginBottom","Base","RebassButton","ButtonLight","ButtonDropdown","ButtonFaded","ope","ButtonDark","OptionButton","CandleStickChart","valueFormatter","low","high","min","max","dataPrev","mode","CrosshairMode","Normal","borderColor","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","ChartWrapper","PriceOption","PRICE","LINE_PRICE","DATA_FREQUENCY","TokenChart","chartFilter","setChartFilter","frequency","setFrequency","addressPrev","checkForChartData","useTokenChartData","setTimeWindow","prevWindow","hourlyWeek","hourlyMonth","hourlyAll","dailyWeek","dailyMonth","dailyAll","priceData","domain","dataMin","right","barCategoryGap","x1","y1","x2","y2","stopColor","stopOpacity","tickLine","axisLine","tickMargin","minTickGap","tickFormatter","dataKey","orientation","yAxisId","cursor","formatter","labelFormatter","labelStyle","paddingTop","contentStyle","wrapperStyle","stackId","strokeWidth","dot","stroke","CopyIcon","TransactionStatusText","flexRowNoWrap","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","didCopy","copy","setTimeout","clearTimeout","useCopyClipboard","setCopied","WarningWrapper","StyledWarningIcon","AlertTriangle","Warning","textContent","mt","minWidth","HoverText","DashboardWrapper","PanelWrapper","TokenDetailsLayout","WarningIcon","AlertCircle","WarningGrouping","history","fetchedPairsList","stale","setStale","fetched","setFetched","newFetched","unfetched","newPairData","fetchNewPairData","useDataForList","tokenPairs","useTokenPairs","tokenTxns","TOKEN_PAIRS_KEY","checkForTxns","useTokenTransactions","usingUtVolume","volumeChange","liquidityChange","txnChangeFormatted","below500","LENGTH","formattedSymbol","location","pathname","dismissed","markAsDismissed","savedTokens","addToken","listedTokens","flexWrap","alingItems","alignSelf","mr","gridColumn","gridRow","Checkbox","OptionsRow","RATE0","RATE1","PairChart","base0","base1","clientHeight","setHeight","usePairChartData","useHourlyRateData","hourlyRate0","hourlyRate1","formattedSymbol0","formattedSymbol1","below1600","FixedPanel","HoverSpan","pairTxns","usePairTransactions","formattedLiquidity","usingUntrackedLiquidity","showUSDWaning","token0USD","token1USD","token0Rate","token1Rate","below900","savedPairs","addPair","flexDirection","UserChart","setFormattedHistory","ownershipPerPair","relevantPositions","lpTokenBalance","dailyUSD","dayDatasForThisPair","mostRecent","totalUSD","valueUSD","useUserLiquidityChart","PairReturnsChart","strokeDasharray","VALUE","XATA_RETURN","poolOwnership","positionsSorted","p0","p1","PRINCIPAL","HODL","hodl","AccountWrapper","Header","DropdownWrapper","Flyout","MenuRow","AccountPage","useUserTransactions","liquidityPositions","positionData","returnData","formattedPositions","useUserPositions","transactionCount","totalSwappedUSD","total","showWarning","setShowWarning","hideLPContent","setShowDropdown","activePosition","setActivePosition","dynamicPositions","aggregateFees","positionValue","isBookmarked","handleBookmarkClick","AllTokensPage","AllPairsPage","AccountLink","accountValue","setAccountValue","stopPropagation","RightColumn","SavedButton","ScrollableDiv","_path","_path2","_path3","_path4","setSavedOpen","removePair","removeToken","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","viewBox","d","ForwardRef","forwardRef","TitleWrapper","UniIcon","activeText","Title","useHistory","Logo","StyledToggle","Toggle","toggle","isMobile","DesktopWrapper","MobileWrapper","Polling","PollingDot","below1180","seconds","sessionStart","setSeconds","useSessionStart","isDark","lps","lp","pairName","lpList","topLpLists","sorted","shorter","splice","useTopLps","GoogleAnalyticsReporter","search","ReactGA","pageview","AppWrapper","Right","Center","WarningBanner","LayoutWrapper","savedOpen","App","globalChartData","isNonMEVChartSynced","isMEVChartSynced","component","exacts","strict","render","params","accountAddress","ContextProviders","Updaters","ReactDOM"],"mappings":"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","file":"static/js/main.06e7979d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/xata-logo.0286e04c.png\";","module.exports = __webpack_public_path__ + \"static/media/eth.5fc0c9bd.png\";","var map = {\n\t\"./ata.png\": 274\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 273;","module.exports = __webpack_public_path__ + \"static/media/ata.b0a5d75c.png\";","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nconst XATA = 'XATA'\n\nconst VERSION = 'VERSION'\nconst CURRENT_VERSION = 0\nconst LAST_SAVED = 'LAST_SAVED'\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\nconst SAVED_TOKENS = 'SAVED_TOKENS'\nconst SAVED_PAIRS = 'SAVED_PAIRS'\n\nconst DARK_MODE = 'DARK_MODE'\n\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\n\nconst UPDATE_KEY = 'UPDATE_KEY'\n\nconst LocalStorageContext = createContext()\n\nfunction useLocalStorageContext() {\n  return useContext(LocalStorageContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_KEY: {\n      const { key, value } = payload\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\n      } else {\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\n    }\n  }\n}\n\nfunction init() {\n  const defaultLocalStorage = {\n    [VERSION]: CURRENT_VERSION,\n    [DARK_MODE]: true,\n    [DISMISSED_PATHS]: {},\n    [SAVED_ACCOUNTS]: [],\n    [SAVED_TOKENS]: {},\n    [SAVED_PAIRS]: {},\n  }\n\n  try {\n    const parsed = JSON.parse(window.localStorage.getItem(XATA))\n    if (parsed[VERSION] !== CURRENT_VERSION) {\n      // this is where we could run migration logic\n      return defaultLocalStorage\n    } else {\n      return { ...defaultLocalStorage, ...parsed }\n    }\n  } catch {\n    return defaultLocalStorage\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, undefined, init)\n\n  const updateKey = useCallback((key, value) => {\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\n  }, [])\n\n  return (\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\n      {children}\n    </LocalStorageContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const [state] = useLocalStorageContext()\n\n  useEffect(() => {\n    window.localStorage.setItem(XATA, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\n  })\n\n  return null\n}\n\nexport function useDarkModeManager() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  let isDarkMode = state[DARK_MODE]\n  const toggleDarkMode = useCallback(\n    (value) => {\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\n    },\n    [updateKey, isDarkMode]\n  )\n  return [isDarkMode, toggleDarkMode]\n}\n\nexport function usePathDismissed(path) {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\n  function dismiss() {\n    let newPaths = state?.[DISMISSED_PATHS]\n    newPaths[path] = true\n    updateKey(DISMISSED_PATHS, newPaths)\n  }\n\n  return [pathDismissed, dismiss]\n}\n\nexport function useSavedAccounts() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\n\n  const addAccount = useCallback(\n    (account) => {\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\n    },\n    [savedAccounts, updateKey]\n  )\n\n  const removeAccount = useCallback(\n    (account) => {\n      let index = savedAccounts?.indexOf(account) ?? -1\n      if (index > -1) {\n        updateKey(SAVED_ACCOUNTS, [\n          ...savedAccounts.slice(0, index),\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\n        ])\n      }\n    },\n    [savedAccounts, updateKey]\n  )\n\n  return [savedAccounts, addAccount, removeAccount]\n}\n\nexport function useSavedPairs() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedPairs = state?.[SAVED_PAIRS]\n\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = {\n      address,\n      token0Address,\n      token1Address,\n      token0Symbol,\n      token1Symbol,\n    }\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  function removePair(address) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = null\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  return [savedPairs, addPair, removePair]\n}\n\nexport function useSavedTokens() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedTokens = state?.[SAVED_TOKENS]\n\n  function addToken(address, symbol) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = {\n      symbol,\n    }\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  function removeToken(address) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = null\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  return [savedTokens, addToken, removeToken]\n}\n","import React from 'react'\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle } from 'styled-components'\nimport { useDarkModeManager } from '../contexts/LocalStorage'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\n\nexport default function ThemeProvider({ children }) {\n  const [darkMode] = useDarkModeManager()\n\n  return <StyledComponentsThemeProvider theme={theme(darkMode)}>{children}</StyledComponentsThemeProvider>\n}\n\nconst theme = (darkMode, color) => ({\n  customColor: color,\n  textColor: darkMode ? color : 'black',\n\n  panelColor: darkMode ? 'rgba(255, 255, 255, 0)' : 'rgba(255, 255, 255, 0)',\n  backgroundColor: darkMode ? '#212429' : '#F7F8FA',\n\n  xataOrange: darkMode ? '#f88f01' : 'black',\n\n  concreteGray: darkMode ? '#40444F' : '#FAFAFA',\n  inputBackground: darkMode ? '#1F1F1F' : '#FAFAFA',\n  shadowColor: darkMode ? '#000' : '#2F80ED',\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n\n  text1: darkMode ? '#FAFAFA' : '#1F1F1F',\n  text2: darkMode ? '#C3C5CB' : '#565A69',\n  text3: darkMode ? '#6C7284' : '#888D9B',\n  text4: darkMode ? '#565A69' : '#C3C5CB',\n  text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n  // special case text types\n  white: '#FFFFFF',\n\n  // backgrounds / greys\n  bg1: darkMode ? '#212429' : '#FAFAFA',\n  bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n  bg3: darkMode ? '#40444F' : '#EDEEF2',\n  bg4: darkMode ? '#565A69' : '#CED0D9',\n  bg5: darkMode ? '#565A69' : '#888D9B',\n  bg6: darkMode ? '#000' : '#FFFFFF',\n\n  //specialty colors\n  modalBG: darkMode ? 'rgba(0,0,0,0.85)' : 'rgba(0,0,0,0.6)',\n  advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.4)',\n  onlyLight: darkMode ? '#22242a' : 'transparent',\n  divider: darkMode ? 'rgba(43, 43, 43, 0.435)' : 'rgba(43, 43, 43, 0.035)',\n\n  //primary colors\n  primary1: darkMode ? '#2172E5' : '#f88f01',\n  primary2: darkMode ? '#3680E7' : '#FF8CC3',\n  primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n  primary4: darkMode ? '#376bad70' : '#F6DDE8',\n  primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n\n  // color text\n  primaryText1: darkMode ? '#6da8ff' : '#f88f01',\n\n  // secondary colors\n  secondary1: darkMode ? '#2172E5' : '#f88f01',\n  secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n  secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n  shadow1: darkMode ? '#000' : '#2F80ED',\n\n  // other\n  red1: '#FF6871',\n  green1: '#27AE60',\n  yellow1: '#FFE270',\n  yellow2: '#F3841E',\n  link: '#2172E5',\n  blue: '2f80ed',\n\n  background: darkMode ? 'black' : `radial-gradient(50% 50% at 50% 50%, #f88f01 0%, #fff 0%)`,\n})\n\nconst TextWrapper = styled(Text)`\n  color: ${({ color, theme }) => theme[color]};\n`\n\nexport const TYPE = {\n  main(props) {\n    return <TextWrapper fontWeight={500} fontSize={14} color={'text1'} {...props} />\n  },\n\n  body(props) {\n    return <TextWrapper fontWeight={400} fontSize={14} color={'text1'} {...props} />\n  },\n\n  small(props) {\n    return <TextWrapper fontWeight={500} fontSize={11} color={'text1'} {...props} />\n  },\n\n  header(props) {\n    return <TextWrapper fontWeight={600} color={'text1'} {...props} />\n  },\n\n  largeHeader(props) {\n    return <TextWrapper fontWeight={500} color={'text1'} fontSize={24} {...props} />\n  },\n\n  light(props) {\n    return <TextWrapper fontWeight={400} color={'text3'} fontSize={14} {...props} />\n  },\n\n  pink(props) {\n    return <TextWrapper fontWeight={props.faded ? 400 : 600} color={props.faded ? 'text1' : 'text1'} {...props} />\n  },\n}\n\nexport const Hover = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Link = styled.a.attrs({\n  target: '_blank',\n  rel: 'noopener noreferrer',\n})`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  :hover {\n    text-decoration: underline;\n  }\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport const ThemedBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  /* z-index: ; */\n\n  transform: translateY(-110vh);\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 14px;    \n    background-color: ${({ theme }) => theme.bg6};\n  }\n\n  a {\n    text-decoration: none;\n\n    :hover {\n      text-decoration: none\n    }\n  }\n\n  \n.three-line-legend {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: #20262E;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n.three-line-legend-dark {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: white;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n@media screen and (max-width: 800px) {\n  .three-line-legend {\n    display: none !important;\n  }\n}\n\n.tv-lightweight-charts{\n  width: 100% !important;\n  \n\n  & > * {\n    width: 100% !important;\n  }\n}\n\n\n  html {\n    font-size: 1rem;\n    font-variant: none;\n    color: 'black';\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    height: 100%;\n  }\n`\n","interface ChainConfig {\n  blockchainName: string\n  scannerName: string\n  scannerUrl: string\n  trustwalletChain: string\n  tokenStandard: string\n  conveyorSubgraph: string\n  mevSubgraph: string\n  blocksSubgraph: string\n}\n\ninterface Blockchain {\n  BINANCE_SMART_CHAIN: ChainConfig\n  POLYGON: ChainConfig\n}\n\nexport const chainConfig: Blockchain = {\n  BINANCE_SMART_CHAIN: {\n    blockchainName: 'Binance Smart Chain',\n    scannerName: 'BscScan',\n    scannerUrl: 'bscscan.com',\n    trustwalletChain: 'smartchain',\n    tokenStandard: 'BEP20',\n    conveyorSubgraph: 'https://api.thegraph.com/subgraphs/name/r2d2-rmbl/xata-bsc',\n    mevSubgraph: 'https://api.thegraph.com/subgraphs/name/r2d2-rmbl/xata-bsc-conveyor',\n    blocksSubgraph: 'https://api.thegraph.com/subgraphs/name/astroswap/bsc-blocks',\n  },\n  POLYGON: {\n    blockchainName: 'Polygon',\n    scannerName: 'PolygonScan',\n    scannerUrl: 'polygonscan.com',\n    trustwalletChain: 'polygon',\n    tokenStandard: 'ERC20',\n    conveyorSubgraph: 'https://api.thegraph.com/subgraphs/name/r2d2-rmbl/xata-polygon',\n    mevSubgraph: 'https://api.thegraph.com/subgraphs/name/r2d2-rmbl/xata-polygon-conveyor',\n    blocksSubgraph: 'https://api.thegraph.com/subgraphs/name/matthewlilley/polygon-blocks',\n  },\n}\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { chainConfig } from '../chainConfig'\n\nexport const getClient = (network) => {\n  const client = new ApolloClient({\n    link: new HttpLink({\n      uri: chainConfig[network]?.conveyorSubgraph,\n    }),\n    cache: new InMemoryCache(),\n    shouldBatch: true,\n  })\n\n  const mevClient = new ApolloClient({\n    link: new HttpLink({\n      uri: chainConfig[network]?.mevSubgraph,\n    }),\n    cache: new InMemoryCache(),\n  })\n\n  const healthClient = new ApolloClient({\n    link: new HttpLink({\n      uri: 'https://api.thegraph.com/index-node/graphql',\n    }),\n    cache: new InMemoryCache(),\n    shouldBatch: true,\n  })\n\n  const stakingClient = new ApolloClient({\n    link: new HttpLink({\n      uri: 'https://api.thegraph.com/subgraphs/name/way2rach/talisman',\n    }),\n    cache: new InMemoryCache(),\n    shouldBatch: true,\n  })\n\n  const blockClient = new ApolloClient({\n    link: new HttpLink({\n      uri: chainConfig[network]?.blocksSubgraph,\n    }),\n    cache: new InMemoryCache(),\n  })\n\n  return { client, mevClient, healthClient, stakingClient, blockClient }\n}\n","export const FACTORY_ADDRESS = '0x5f8017621825BC10D63d15C3e863f893946781F7'\n\nexport const BUNDLE_ID = '1'\n\nexport const timeframeOptions = {\n  WEEK: '1 week',\n  MONTH: '1 month',\n  // THREE_MONTHS: '3 months',\n  // YEAR: '1 year',\n  HALF_YEAR: '6 months',\n  ALL_TIME: 'All time',\n}\n\n// whitelist token list to disable warnings\nexport const TOKEN_WHITELIST = [\n  //BSC Tokens\n  '0x5409acfaaa1e60da8ffb9fe2822a23e327616d76', //BUSD\n  '0x55d398326f99059ff775485246999027b3197955', // USDT\n  '0x2170ed0880ac9a755fd29b2688956bd959f933f8', // ETH\n  '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC\n  '0xcc42724c6683b7e57334c4e856f4c9965ed682bd', // MATIC\n  '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', // WBNB\n  '0x4338665cbb7b2485a8855a139b75d5e34ab0db94', // LTC\n  '0xa2120b9e674d3fc3875f415a7df52e382f141225', // ATA\n  '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47', // ADA\n  '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd', // LINK\n  '0x1ce0c2827e2ef14d5c4f29a091d735a204794041', // AVAX\n  '0x7083609fce4d1d8dc0c979aab8c869ea2c873402', //DOT\n  '0xba2ae424d960c26247dd6c32edc70b295c744c43', //DOGE\n  '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', //DAI\n  '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf', //BCH\n  '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153', // FIL\n  '0xbf5140a22578168fd562dccf235e5d43a02ce9b1', // UNI\n  '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce8ß2', // CAKE\n  '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4', // SUSHI\n  '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c', // BTCB\n  //Polygon Tokens\n  '0xc2132d05d31c914a87c6611c10748aeb04b58e8f', //USDT\n  '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063', //DAI\n  '0x2791bca1f2de4661ed88a30c99a7a9449aa84174', //USDC\n  '0x0df0f72ee0e5c9b7ca761ecec42754992b2da5bf', //ATA\n  '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270', //WMATIC\n  '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619', //WETH\n]\n\n// hide from overview list\nexport const TOKEN_BLACKLIST = [\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xf4eda77f0b455a12f3eb44f8653835f377e36b76',\n  '0x93b2fff814fcaeffb01406e80b4ecd89ca6a021b',\n\n  // rebass tokens\n  '0x9ea3b5b4ec044b70375236a281986106457b20ef',\n  '0x05934eba98486693aaec2d00b0e9ce918e37dc3f',\n  '0x3d7e683fc9c86b4d653c9e47ca12517440fad14e',\n  '0xfae9c647ad7d89e738aba720acf09af93dc535f7',\n  '0x7296368fe9bcb25d3ecc19af13655b907818cc09',\n]\n\n// pair blacklist\nexport const PAIR_BLACKLIST = [\n  '0xb6a741f37d6e455ebcc9f17e2c16d0586c3f57a5',\n  '0x97cb8cbe91227ba87fc21aaf52c4212d245da3f8',\n  '0x1acba73121d5f63d8ea40bdc64edb594bd88ed09',\n  '0x7d7e813082ef6c143277c71786e5be626ec77b20',\n]\n\n// warnings to display if page contains info about blocked token\nexport const BLOCKED_WARNINGS = {\n  '0xf4eda77f0b455a12f3eb44f8653835f377e36b76':\n    'TikTok Inc. has asserted this token is violating its trademarks and therefore is not available.',\n}\n\n/**\n * For tokens that cause erros on fee calculations\n */\nexport const FEE_WARNING_TOKENS = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161']\n\nexport const UNTRACKED_COPY = 'Derived USD values may be inaccurate without liquid stablecoin or ETH pairings.'\n\n// tokens that should be tracked but arent due to lag in subgraph\nexport const TRACKED_OVERRIDES = [\n  '0x9928e4046d7c6513326ccea028cd3e7a91c7590a',\n  '0x87da823b6fc8eb8575a235a824690fda94674c88',\n  '0xcd7989894bc033581532d2cd88da5db0a4b12859',\n  '0xe1573b9d29e2183b1af0e743dc2754979a40d237',\n  '0x45804880de22913dafe09f4980848ece6ecbaf78',\n  '0x709f7b10f22eb62b05913b59b92ddd372d4e2152',\n]\n\nexport const ADDRESS_TO_LOGO = {\n  '0x0df0f72ee0e5c9b7ca761ecec42754992b2da5bf': 'ata.png',\n}\n","import gql from 'graphql-tag'\nimport { FACTORY_ADDRESS, BUNDLE_ID } from '../constants'\n\nexport const getHealthQuery = (network, isMEV) => {\n  let subgraphName = ''\n  if (isMEV) {\n    switch (network) {\n      case 'BINANCE_SMART_CHAIN':\n        subgraphName = 'r2d2-rmbl/xata-bsc-conveyor'\n        break\n      case 'POLYGON':\n        subgraphName = 'r2d2-rmbl/xata-polygon-conveyor'\n        break\n      default:\n        break\n    }\n  } else {\n    switch (network) {\n      case 'BINANCE_SMART_CHAIN':\n        subgraphName = 'r2d2-rmbl/xata-bsc'\n        break\n      case 'POLYGON':\n        subgraphName = 'r2d2-rmbl/xata-polygon'\n        break\n      default:\n        break\n    }\n  }\n  return gql`\n    query health {\n      indexingStatusForCurrentVersion(subgraphName: \"${subgraphName}\") {\n        synced\n        health\n        chains {\n          chainHeadBlock {\n            number\n          }\n          latestBlock {\n            number\n          }\n        }\n      }\n    }\n  `\n}\n\nexport const GET_BLOCK = gql`\n  query blocks($timestampFrom: Int!, $timestampTo: Int!) {\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }\n`\n\nexport const GET_BLOCKS = (timestamps) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const POSITIONS_BY_BLOCK = (account, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:liquidityPositions(where: {user: \"${account}\"}, block: { number: ${block.number} }) { \n        liquidityTokenBalance\n        pair  {\n          id\n          totalSupply\n          reserveUSD\n        }\n      }\n    `\n  )\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const PRICES_BY_BLOCK = (tokenAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedETH\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const TOP_LPS_PER_PAIRS = gql`\n  query lps($pair: Bytes!) {\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const HOURLY_PAIR_RATES = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}: pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        token0Price\n        token1Price\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const SHARE_VALUE = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        reserve0\n        reserve1\n        reserveUSD\n        totalSupply \n        token0{\n          derivedETH\n        }\n        token1{\n          derivedETH\n        }\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const ETH_PRICE = (block) => {\n  const queryString = block\n    ? `\n    query bundles {\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\n        id\n        ethPrice\n      }\n    }\n  `\n    : ` query bundles {\n      bundles(where: { id: ${BUNDLE_ID} }) {\n        id\n        ethPrice\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const USER = (block, account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\", block: {number: ${block}}) {\n        liquidityPositions\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const USER_MINTS_BUNRS_PER_PAIR = gql`\n  query events($user: Bytes!, $pair: Bytes!) {\n    mints(where: { to: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n    burns(where: { sender: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const FIRST_SNAPSHOT = gql`\n  query snapshots($user: Bytes!) {\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\n      timestamp\n    }\n  }\n`\n\nexport const USER_HISTORY = gql`\n  query snapshots($user: Bytes!, $skip: Int!) {\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const USER_POSITIONS = gql`\n  query liquidityPositions($user: Bytes!) {\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const USER_TRANSACTIONS = gql`\n  query transactions($user: Bytes!) {\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n\nexport const PAIR_CHART = gql`\n  query pairDayDatas($pairAddress: Bytes!, $skip: Int!) {\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA = gql`\n  query pairDayDatas($pairAddress: Bytes!, $date: Int!) {\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA_BULK = (pairs, startTimestamp) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  const queryString = `\n    query days {\n      pairDayDatas(first: 1000, orderBy: date, orderDirection: asc, where: { pairAddress_in: ${pairsString}, date_gt: ${startTimestamp} }) {\n        id\n        pairAddress\n        date\n        dailyVolumeToken0\n        dailyVolumeToken1\n        dailyVolumeUSD\n        totalSupply\n        reserveUSD\n      }\n    } \n`\n  return gql(queryString)\n}\n\nexport const GLOBAL_CHART = gql`\n  query xatadayDatas($startTime: Int!, $skip: Int!) {\n    xatadayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }\n`\n\nexport const GLOBAL_DATA = (block) => {\n  const queryString = ` query conveyorV2Factories {\n      conveyorV2Factories(\n       ${block ? `block: { number: ${block}}` : ``} \n       where: { id: \"${FACTORY_ADDRESS}\" }) {\n        id\n        totalVolumeUSD\n        totalVolumeETH\n        untrackedVolumeUSD\n        totalLiquidityUSD\n        totalLiquidityETH\n        txCount\n        pairCount\n      }\n    }`\n  return gql(queryString)\n}\n\nconst currentDate = new Date()\nconst startDateToFetch = Math.round(currentDate.setDate(currentDate.getDate() - 120) / 1000)\nexport const MEV_CHART = gql`\n  query xatadayMEVDatas {\n    xatadayMEVDatas(where:{date_gt: ${startDateToFetch}}, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalUnusedSlippageUSD\n    }\n  }\n`\n\nexport const GLOBAL_TXNS = gql`\n  query transactions {\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }\n`\n\nexport const ALL_TOKENS = gql`\n  query tokens($skip: Int!) {\n    tokens(first: 500, skip: $skip) {\n      id\n      name\n      symbol\n      totalLiquidity\n    }\n  }\n`\n\nexport const TOKEN_SEARCH = gql`\n  query tokens($value: String, $id: String) {\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }\n`\n\nexport const PAIR_SEARCH = gql`\n  query pairs($tokens: [Bytes]!, $id: String) {\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nexport const ALL_PAIRS = gql`\n  query pairs($skip: Int!) {\n    pairs(first: 500, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nconst PairFields = `\n  fragment PairFields on Pair {\n    id\n    txCount\n    token0 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    token1 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    reserve0\n    reserve1\n    reserveUSD\n    totalSupply\n    trackedReserveETH\n    reserveETH\n    volumeUSD\n    untrackedVolumeUSD\n    token0Price\n    token1Price\n    createdAtTimestamp\n  }\n`\n\nexport const PAIRS_CURRENT = gql`\n  query pairs {\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\nexport const PAIR_DATA = (pairAddress, block) => {\n  const queryString = `\n    ${PairFields}\n    query pairs {\n      pairs(${block ? `block: {number: ${block}}` : ``} where: { id: \"${pairAddress}\"} ) {\n        ...PairFields\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const MINING_POSITIONS = (account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\") {\n        miningPosition {\n          id\n          user {\n            id\n          }\n          miningPool {\n              pair {\n                id\n                token0\n                token1\n              }\n          }\n          balance\n        }\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const PAIRS_BULK = gql`\n  ${PairFields}\n  query pairs($allPairs: [Bytes]!) {\n    pairs(first: 500, where: { id_in: $allPairs }, orderBy: trackedReserveETH, orderDirection: desc) {\n      ...PairFields\n    }\n  }\n`\n\nexport const PAIRS_HISTORICAL_BULK = (block, pairs) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  let queryString = `\n  query pairs {\n    pairs(first: 200, where: {id_in: ${pairsString}}, block: {number: ${block}}, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      reserveUSD\n      trackedReserveETH\n      volumeUSD\n      untrackedVolumeUSD\n    }\n  }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_CHART = gql`\n  query tokenDayDatas($tokenAddr: String!, $skip: Int!) {\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }\n`\n\nconst TokenFields = `\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    derivedETH\n    tradeVolume\n    tradeVolumeUSD\n    untrackedVolumeUSD\n    totalLiquidity\n    txCount\n  }\n`\n\n// used for getting top tokens by daily volume\nexport const TOKEN_TOP_DAY_DATAS = gql`\n  query tokenDayDatas($date: Int) {\n    tokenDayDatas(first: 50, orderBy: totalLiquidityUSD, orderDirection: desc, where: { date_gt: $date }) {\n      id\n      date\n    }\n  }\n`\n\nexport const TOKENS_BULK = gql`\n  ${TokenFields}\n  query tokens($tokenAddresses: [Bytes]!) {\n    pairs(where: { id_in: $tokenAddresses }) {\n      ...TokenFields\n    }\n  }\n`\nexport const TOKENS_HISTORICAL_BULK = (tokens, block) => {\n  let tokenString = `[`\n  tokens.map((token) => {\n    return (tokenString += `\"${token}\",`)\n  })\n  tokenString += ']'\n  let queryString = `\n  query tokens {\n    tokens(first: 50, where: {id_in: ${tokenString}}, ${block ? 'block: {number: ' + block + '}' : ''}  ) {\n      id\n      name\n      symbol\n      derivedETH\n      tradeVolume\n      tradeVolumeUSD\n      untrackedVolumeUSD\n      totalLiquidity\n      txCount\n    }\n  }\n  `\n  return gql(queryString)\n}\n\nexport const TOKENS_CURRENT = gql`\n  ${TokenFields}\n  query tokens {\n    tokens(first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      ...TokenFields\n    }\n  }\n`\n\nexport const TOKENS_DYNAMIC = (block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(block: {number: ${block}} first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n        ...TokenFields\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_DATA = (tokenAddress, block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(${block ? `block : {number: ${block}}` : ``} where: {id:\"${tokenAddress}\"}) {\n        ...TokenFields\n      }\n      pairs0: pairs(where: {token0: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n      pairs1: pairs(where: {token1: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const FILTERED_TRANSACTIONS = gql`\n  query ($allPairs: [Bytes]!) {\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      id\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useState, useEffect } from 'react'\nimport { usePrevious } from 'react-use'\nimport { timeframeOptions, TOKEN_WHITELIST } from '../constants'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { getClient } from '../apollo/client'\nimport { getHealthQuery } from '../apollo/queries'\ndayjs.extend(utc)\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TIMEFRAME = 'UPDATE_TIMEFRAME'\nconst UPDATE_SESSION_START = 'UPDATE_SESSION_START'\nconst UPDATED_SUPPORTED_TOKENS = 'UPDATED_SUPPORTED_TOKENS'\nconst UPDATE_LATEST_BLOCK = 'UPDATE_LATEST_BLOCK'\nconst UPDATE_HEAD_BLOCK = 'UPDATE_HEAD_BLOCK'\nconst UPDATE_NETWORK = 'UPDATE_NETWORK'\n\nconst SUPPORTED_TOKENS = 'SUPPORTED_TOKENS'\nconst TIME_KEY = 'TIME_KEY'\nconst CURRENCY = 'CURRENCY'\nconst SESSION_START = 'SESSION_START'\nconst LATEST_BLOCK = 'LATEST_BLOCK'\nconst HEAD_BLOCK = 'HEAD_BLOCK'\nconst NETWORK = 'NETWORK'\n\nconst ApplicationContext = createContext()\n\nfunction useApplicationContext() {\n  return useContext(ApplicationContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { currency } = payload\n      return {\n        ...state,\n        [CURRENCY]: currency,\n      }\n    }\n    case UPDATE_TIMEFRAME: {\n      const { newTimeFrame } = payload\n      return {\n        ...state,\n        [TIME_KEY]: newTimeFrame,\n      }\n    }\n    case UPDATE_SESSION_START: {\n      const { timestamp } = payload\n      return {\n        ...state,\n        [SESSION_START]: timestamp,\n      }\n    }\n\n    case UPDATE_LATEST_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [LATEST_BLOCK]: block,\n      }\n    }\n\n    case UPDATE_HEAD_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [HEAD_BLOCK]: block,\n      }\n    }\n\n    case UPDATE_NETWORK: {\n      const { network } = payload\n      return {\n        ...state,\n        [NETWORK]: network,\n      }\n    }\n\n    case UPDATED_SUPPORTED_TOKENS: {\n      const { supportedTokens } = payload\n      return {\n        ...state,\n        [SUPPORTED_TOKENS]: supportedTokens,\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {\n  CURRENCY: 'USD',\n  TIME_KEY: timeframeOptions.ALL_TIME,\n  NETWORK: 'BINANCE_SMART_CHAIN',\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n  const update = useCallback((currency) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        currency,\n      },\n    })\n  }, [])\n\n  // global time window for charts - see timeframe options in constants\n  const updateTimeframe = useCallback((newTimeFrame) => {\n    dispatch({\n      type: UPDATE_TIMEFRAME,\n      payload: {\n        newTimeFrame,\n      },\n    })\n  }, [])\n\n  // used for refresh button\n  const updateSessionStart = useCallback((timestamp) => {\n    dispatch({\n      type: UPDATE_SESSION_START,\n      payload: {\n        timestamp,\n      },\n    })\n  }, [])\n\n  const updateSupportedTokens = useCallback((supportedTokens) => {\n    dispatch({\n      type: UPDATED_SUPPORTED_TOKENS,\n      payload: {\n        supportedTokens,\n      },\n    })\n  }, [])\n\n  const updateLatestBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_LATEST_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  const updateHeadBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_HEAD_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  const updateNetwork = useCallback((network) => {\n    dispatch({\n      type: UPDATE_NETWORK,\n      payload: {\n        network,\n      },\n    })\n  }, [])\n\n  return (\n    <ApplicationContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateSessionStart,\n            updateTimeframe,\n            updateSupportedTokens,\n            updateLatestBlock,\n            updateHeadBlock,\n            updateNetwork,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTimeframe,\n          updateSessionStart,\n          updateSupportedTokens,\n          updateLatestBlock,\n          updateHeadBlock,\n          updateNetwork,\n        ]\n      )}\n    >\n      {children}\n    </ApplicationContext.Provider>\n  )\n}\n\nexport function useLatestBlocks() {\n  const [network] = useNetwork()\n  const [state, { updateLatestBlock, updateHeadBlock }] = useApplicationContext()\n\n  const prevNetwork = usePrevious(network)\n  const latestBlock = state?.[LATEST_BLOCK]\n  const headBlock = state?.[HEAD_BLOCK]\n  const [headMEVBlock, setHeadMEVBlock] = useState()\n  const [latestMEVBlock, setLatestMEVBlock] = useState()\n\n  useEffect(() => {\n    const { healthClient } = getClient(network)\n    async function fetch() {\n      healthClient\n        .query({\n          query: getHealthQuery(network, false),\n        })\n        .then((res) => {\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\n          if (syncedBlock && headBlock) {\n            updateLatestBlock(syncedBlock)\n            updateHeadBlock(headBlock)\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n    }\n    if (!latestBlock || prevNetwork !== network) {\n      fetch()\n    }\n  }, [network, prevNetwork, latestBlock, updateHeadBlock, updateLatestBlock])\n\n  useEffect(() => {\n    const { healthClient } = getClient(network)\n    async function fetchMEVLatest() {\n      healthClient\n        .query({\n          query: getHealthQuery(network, true),\n        })\n        .then((res) => {\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\n          if (syncedBlock && headBlock) {\n            setLatestMEVBlock(syncedBlock)\n            setHeadMEVBlock(headBlock)\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n    }\n    if (!latestMEVBlock || prevNetwork !== network) {\n      fetchMEVLatest()\n    }\n  }, [network, prevNetwork, latestMEVBlock, headMEVBlock])\n\n  return [latestBlock, headBlock, latestMEVBlock, headMEVBlock]\n}\n\nexport function useCurrentCurrency() {\n  const [state, { update }] = useApplicationContext()\n  const toggleCurrency = useCallback(() => {\n    if (state.currency === 'ETH') {\n      update('USD')\n    } else {\n      update('ETH')\n    }\n  }, [state, update])\n  return [state[CURRENCY], toggleCurrency]\n}\n\nexport function useTimeframe() {\n  const [state, { updateTimeframe }] = useApplicationContext()\n  const activeTimeframe = state?.[`TIME_KEY`]\n  return [activeTimeframe, updateTimeframe]\n}\n\nexport function useStartTimestamp() {\n  const [activeWindow] = useTimeframe()\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    let startTime =\n      dayjs\n        .utc()\n        .subtract(\n          1,\n          activeWindow === timeframeOptions.week ? 'week' : activeWindow === timeframeOptions.ALL_TIME ? 'year' : 'year'\n        )\n        .startOf('day')\n        .unix() - 1\n    // if we find a new start time less than the current startrtime - update oldest pooint to fetch\n    setStartDateTimestamp(startTime)\n  }, [activeWindow, startDateTimestamp])\n\n  return startDateTimestamp\n}\n\n// keep track of session length for refresh ticker\nexport function useSessionStart() {\n  const [state, { updateSessionStart }] = useApplicationContext()\n  const sessionStart = state?.[SESSION_START]\n\n  useEffect(() => {\n    if (!sessionStart) {\n      updateSessionStart(Date.now())\n    }\n  })\n\n  const [seconds, setSeconds] = useState(0)\n\n  useEffect(() => {\n    let interval = null\n    interval = setInterval(() => {\n      setSeconds(Date.now() - sessionStart ?? Date.now())\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [seconds, sessionStart])\n\n  return parseInt(seconds / 1000)\n}\n\nexport function useListedTokens() {\n  const [state, { updateSupportedTokens }] = useApplicationContext()\n  const supportedTokens = state?.[SUPPORTED_TOKENS]\n\n  useEffect(() => {\n    async function fetchList() {\n      let formatted = TOKEN_WHITELIST\n      updateSupportedTokens(formatted)\n    }\n    if (!supportedTokens) {\n      fetchList()\n    }\n  }, [updateSupportedTokens, supportedTokens])\n\n  return supportedTokens\n}\n\nexport function useNetwork() {\n  const [state, { updateNetwork }] = useApplicationContext()\n  const network = state?.['NETWORK']\n  return [network, updateNetwork]\n}\n","import React from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport dayjs from 'dayjs'\nimport { ethers } from 'ethers'\nimport utc from 'dayjs/plugin/utc'\nimport { getClient } from '../apollo/client'\nimport { GET_BLOCK, GET_BLOCKS, SHARE_VALUE } from '../apollo/queries'\nimport { Text } from 'rebass'\nimport _Decimal from 'decimal.js-light'\nimport toFormat from 'toformat'\nimport { timeframeOptions } from '../constants'\nimport Numeral from 'numeral'\nimport { chainConfig } from '../chainConfig'\n\n// format libraries\nconst Decimal = toFormat(_Decimal)\nBigNumber.set({ EXPONENTIAL_AT: 50 })\ndayjs.extend(utc)\n\nexport function getTimeframe(timeWindow) {\n  const utcEndTime = dayjs.utc()\n  // based on window, get starttime\n  let utcStartTime\n  switch (timeWindow) {\n    case timeframeOptions.WEEK:\n      utcStartTime = utcEndTime.subtract(1, 'week').endOf('day').unix() - 1\n      break\n    case timeframeOptions.MONTH:\n      utcStartTime = utcEndTime.subtract(1, 'month').endOf('day').unix() - 1\n      break\n    case timeframeOptions.ALL_TIME:\n      utcStartTime = utcEndTime.subtract(1, 'year').endOf('day').unix() - 1\n      break\n    default:\n      utcStartTime = utcEndTime.subtract(1, 'year').startOf('year').unix() - 1\n      break\n  }\n  return utcStartTime\n}\n\nexport function getPoolLink(remove = false) {\n  return `https://app.xata.fi/#/` + (remove ? `remove` : `add`)\n}\n\nexport function getSwapLink() {\n  return 'https://app.xata.fi/#/swap'\n}\n\nexport function localNumber(val) {\n  return Numeral(val).format('0,0')\n}\n\nexport const toNiceDate = (date) => {\n  let x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\n  return x\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address, chars = 4) {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\nexport const toWeeklyDate = (date) => {\n  const formatted = dayjs.utc(dayjs.unix(date))\n  date = new Date(formatted)\n  const day = new Date(formatted).getDay()\n  var lessDays = day === 6 ? 0 : day + 1\n  var wkStart = new Date(new Date(date).setDate(date.getDate() - lessDays))\n  var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6))\n  return dayjs.utc(wkStart).format('MMM DD') + ' - ' + dayjs.utc(wkEnd).format('MMM DD')\n}\n\nexport function getTimestampsForChanges() {\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n  return [t1, t2, tWeek]\n}\n\nexport async function splitQuery(query, localClient, vars, list, skipCount = 100) {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n\n  while (!allFound) {\n    let end = list.length\n    if (skip + skipCount < list.length) {\n      end = skip + skipCount\n    }\n    let sliced = list.slice(skip, end)\n    let result = await localClient.query({\n      query: query(...vars, sliced),\n      fetchPolicy: 'cache-first',\n    })\n    fetchedData = {\n      ...fetchedData,\n      ...result.data,\n    }\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\n      allFound = true\n    } else {\n      skip += skipCount\n    }\n  }\n  return fetchedData\n}\n\n/**\n * @notice Fetches first block after a given timestamp\n * @dev Query speed is optimized by limiting to a 600-second period\n * @param {Int} timestamp in seconds\n */\nexport async function getBlockFromTimestamp(network, timestamp) {\n  const { blockClient } = getClient(network)\n  let result = await blockClient.query({\n    query: GET_BLOCK,\n    variables: {\n      timestampFrom: timestamp,\n      timestampTo: timestamp + 600,\n    },\n    fetchPolicy: 'cache-first',\n  })\n  return result?.data?.blocks?.[0]?.number\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\nexport async function getBlocksFromTimestamps(network, timestamps, skipCount = 500) {\n  if (timestamps?.length === 0) {\n    return []\n  }\n  const { blockClient } = getClient(network)\n  let fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\n\n  let blocks = []\n  if (fetchedData) {\n    for (var t in fetchedData) {\n      if (fetchedData[t].length > 0) {\n        blocks.push({\n          timestamp: t.split('t')[1],\n          number: fetchedData[t][0]['number'],\n        })\n      }\n    }\n  }\n  return blocks\n}\n\n// export async function getLiquidityTokenBalanceOvertime(account, timestamps) {\n//   // get blocks based on timestamps\n//   const blocks = await getBlocksFromTimestamps(timestamps)\n\n//   // get historical share values with time travel queries\n//   let result = await client.query({\n//     query: SHARE_VALUE(account, blocks),\n//     fetchPolicy: 'cache-first',\n//   })\n\n//   let values = []\n//   for (var row in result?.data) {\n//     let timestamp = row.split('t')[1]\n//     if (timestamp) {\n//       values.push({\n//         timestamp,\n//         balance: 0,\n//       })\n//     }\n//   }\n// }\n\n/**\n * @notice Example query using time travel queries\n * @dev TODO - handle scenario where blocks are not available for a timestamps (e.g. current time)\n * @param {String} pairAddress\n * @param {Array} timestamps\n */\nexport async function getShareValueOverTime(network, pairAddress, timestamps) {\n  if (!timestamps) {\n    const utcCurrentTime = dayjs()\n    const utcSevenDaysBack = utcCurrentTime.subtract(8, 'day').unix()\n    timestamps = getTimestampRange(utcSevenDaysBack, 86400, 7)\n  }\n\n  // get blocks based on timestamps\n  const blocks = await getBlocksFromTimestamps(network, timestamps)\n\n  const { client } = getClient(network)\n  // get historical share values with time travel queries\n  let result = await client.query({\n    query: SHARE_VALUE(pairAddress, blocks),\n    fetchPolicy: 'cache-first',\n  })\n\n  let values = []\n  for (var row in result?.data) {\n    let timestamp = row.split('t')[1]\n    let sharePriceUsd = parseFloat(result.data[row]?.reserveUSD) / parseFloat(result.data[row]?.totalSupply)\n    if (timestamp) {\n      values.push({\n        timestamp,\n        sharePriceUsd,\n        totalSupply: result.data[row].totalSupply,\n        reserve0: result.data[row].reserve0,\n        reserve1: result.data[row].reserve1,\n        reserveUSD: result.data[row].reserveUSD,\n        token0DerivedETH: result.data[row].token0.derivedETH,\n        token1DerivedETH: result.data[row].token1.derivedETH,\n        roiUsd: values && values[0] ? sharePriceUsd / values[0]['sharePriceUsd'] : 1,\n        ethPrice: 0,\n        token0PriceUSD: 0,\n        token1PriceUSD: 0,\n      })\n    }\n  }\n\n  // add eth prices\n  let index = 0\n  for (var brow in result?.data) {\n    let timestamp = brow.split('b')[1]\n    if (timestamp) {\n      values[index].ethPrice = result.data[brow].ethPrice\n      values[index].token0PriceUSD = result.data[brow].ethPrice * values[index].token0DerivedETH\n      values[index].token1PriceUSD = result.data[brow].ethPrice * values[index].token1DerivedETH\n      index += 1\n    }\n  }\n\n  return values\n}\n\n/**\n * @notice Creates an evenly-spaced array of timestamps\n * @dev Periods include a start and end timestamp. For example, n periods are defined by n+1 timestamps.\n * @param {Int} timestamp_from in seconds\n * @param {Int} period_length in seconds\n * @param {Int} periods\n */\nexport function getTimestampRange(timestamp_from, period_length, periods) {\n  let timestamps = []\n  for (let i = 0; i <= periods; i++) {\n    timestamps.push(timestamp_from + i * period_length)\n  }\n  return timestamps\n}\n\nexport const toNiceDateYear = (date) => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\n\nexport const isAddress = (value) => {\n  try {\n    return ethers.utils.getAddress(value.toLowerCase())\n  } catch {\n    return false\n  }\n}\n\nexport const toK = (num) => {\n  return Numeral(num).format('0.[00]a')\n}\n\nexport const setThemeColor = (theme) => document.documentElement.style.setProperty('--c-token', theme || '#333333')\n\nexport const Big = (number) => new BigNumber(number)\n\nexport const getUrls = (network) => {\n  const { scannerUrl } = chainConfig[network]\n  return {\n    showTransaction: (tx) => `https://${scannerUrl}/tx/${tx}/`,\n    showAddress: (address) => `https://www.${scannerUrl}/address/${address}/`,\n    showToken: (address) => `https://www.${scannerUrl}/token/${address}/`,\n    showBlock: (block) => `https://${scannerUrl}/block/${block}/`,\n  }\n}\n\nexport const formatTime = (unix) => {\n  const now = dayjs()\n  const timestamp = dayjs.unix(unix)\n\n  const inSeconds = now.diff(timestamp, 'second')\n  const inMinutes = now.diff(timestamp, 'minute')\n  const inHours = now.diff(timestamp, 'hour')\n  const inDays = now.diff(timestamp, 'day')\n\n  if (inHours >= 24) {\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\n  } else if (inMinutes >= 60) {\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\n  } else if (inSeconds >= 60) {\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\n  } else {\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\n  }\n}\n\nexport const formatNumber = (num) => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num, digits) => {\n  const formatter = new Intl.NumberFormat([], {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits,\n  })\n  return formatter.format(num)\n}\n\nexport const toSignificant = (number, significantDigits) => {\n  Decimal.set({ precision: significantDigits + 1, rounding: Decimal.ROUND_UP })\n  const updated = new Decimal(number).toSignificantDigits(significantDigits)\n  return updated.toFormat(updated.decimalPlaces(), { groupSeparator: '' })\n}\n\nexport const formattedNum = (number, usd = false, acceptNegatives = false) => {\n  if (isNaN(number) || number === '' || number === undefined) {\n    return usd ? '$0' : 0\n  }\n  let num = parseFloat(number)\n\n  if (num > 500000000) {\n    return (usd ? '$' : '') + toK(num.toFixed(0), true)\n  }\n\n  if (num === 0) {\n    if (usd) {\n      return '$0'\n    }\n    return 0\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001'\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarAmount(num, 0) : Number(parseFloat(num).toFixed(0)).toLocaleString()\n  }\n\n  if (usd) {\n    if (num < 0.1) {\n      return formatDollarAmount(num, 4)\n    } else {\n      return formatDollarAmount(num, 2)\n    }\n  }\n\n  return Number(parseFloat(num).toFixed(4)).toString()\n}\n\nexport function rawPercent(percentRaw) {\n  let percent = parseFloat(percentRaw * 100)\n  if (!percent || percent === 0) {\n    return '0%'\n  }\n  if (percent < 1 && percent > 0) {\n    return '< 1%'\n  }\n  return percent.toFixed(0) + '%'\n}\n\nexport function formattedPercent(percent, useBrackets = false) {\n  percent = parseFloat(percent)\n  if (!percent || percent === 0) {\n    return <Text fontWeight={500}>0%</Text>\n  }\n\n  if (percent < 0.0001 && percent > 0) {\n    return (\n      <Text fontWeight={500} color=\"green\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  if (percent < 0 && percent > -0.0001) {\n    return (\n      <Text fontWeight={500} color=\"red\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  let fixedPercent = percent.toFixed(2)\n  if (fixedPercent === '0.00') {\n    return '0%'\n  }\n  if (fixedPercent > 0) {\n    if (fixedPercent > 100) {\n      return <Text fontWeight={500} color=\"green\">{`+${percent?.toFixed(0).toLocaleString()}%`}</Text>\n    } else {\n      return <Text fontWeight={500} color=\"green\">{`+${fixedPercent}%`}</Text>\n    }\n  } else {\n    return <Text fontWeight={500} color=\"red\">{`${fixedPercent}%`}</Text>\n  }\n}\n\n/**\n * gets the amoutn difference plus the % change in change itself (second order change)\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n * @param {*} value48HoursAgo\n */\nexport const get2DayPercentChange = (valueNow, value24HoursAgo, value48HoursAgo) => {\n  // get volume info for both 24 hour periods\n  let currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n  let previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\n\n  const adjustedPercentChange = (parseFloat(currentChange - previousChange) / parseFloat(previousChange)) * 100\n\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return [currentChange, 0]\n  }\n  return [currentChange, adjustedPercentChange]\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\n  const adjustedPercentChange =\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return 0\n  }\n  return adjustedPercentChange\n}\n\nexport function isEquivalent(a, b) {\n  var aProps = Object.getOwnPropertyNames(a)\n  var bProps = Object.getOwnPropertyNames(b)\n  if (aProps.length !== bProps.length) {\n    return false\n  }\n  for (var i = 0; i < aProps.length; i++) {\n    var propName = aProps[i]\n    if (a[propName] !== b[propName]) {\n      return false\n    }\n  }\n  return true\n}\n","interface BasicData {\n  token0?: {\n    id: string\n    name: string\n    symbol: string\n  }\n  token1?: {\n    id: string\n    name: string\n    symbol: string\n  }\n}\n\n// Override data return from graph - usually because proxy token has changed\n// names since entitiy was created in subgraph\n// keys are lowercase token addresses <--------\nconst TOKEN_OVERRIDES: { [address: string]: { name: string; symbol: string } } = {\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': {\n    name: 'Ether (Wrapped)',\n    symbol: 'ETH',\n  },\n  '0x1416946162b1c2c871a73b07e932d2fb6c932069': {\n    name: 'Energi',\n    symbol: 'NRGE',\n  },\n}\n\n// override tokens with incorrect symbol or names\nexport function updateNameData(data: BasicData): BasicData | undefined {\n  if (data?.token0?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token0.id)) {\n    data.token0.name = TOKEN_OVERRIDES[data.token0.id].name\n    data.token0.symbol = TOKEN_OVERRIDES[data.token0.id].symbol\n  }\n\n  if (data?.token1?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token1.id)) {\n    data.token1.name = TOKEN_OVERRIDES[data.token1.id].name\n    data.token1.symbol = TOKEN_OVERRIDES[data.token1.id].symbol\n  }\n\n  return data\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\n\nimport { getClient } from '../apollo/client'\nimport {\n  PAIR_DATA,\n  PAIR_CHART,\n  FILTERED_TRANSACTIONS,\n  PAIRS_CURRENT,\n  PAIRS_BULK,\n  PAIRS_HISTORICAL_BULK,\n  HOURLY_PAIR_RATES,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  getPercentChange,\n  get2DayPercentChange,\n  isAddress,\n  getBlocksFromTimestamps,\n  getTimestampsForChanges,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions, TRACKED_OVERRIDES } from '../constants'\nimport { useLatestBlocks, useNetwork } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_PAIR_TXNS = 'UPDATE_PAIR_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_TOP_PAIRS = 'UPDATE_TOP_PAIRS'\nconst UPDATE_HOURLY_DATA = 'UPDATE_HOURLY_DATA'\n\ndayjs.extend(utc)\n\nexport function safeAccess(object, path) {\n  return object\n    ? path.reduce(\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\n        object\n      )\n    : null\n}\n\nconst PairDataContext = createContext()\n\nfunction usePairDataContext() {\n  return useContext(PairDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { pairAddress, data } = payload\n      return {\n        ...state,\n        [pairAddress]: {\n          ...state?.[pairAddress],\n          ...data,\n        },\n      }\n    }\n\n    case UPDATE_TOP_PAIRS: {\n      const { topPairs } = payload\n      let added = {}\n      topPairs.map((pair) => {\n        return (added[pair.id] = pair)\n      })\n      return {\n        ...added,\n      }\n    }\n\n    case UPDATE_PAIR_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_HOURLY_DATA: {\n      const { address, hourlyData, timeWindow } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          hourlyData: {\n            ...state?.[address]?.hourlyData,\n            [timeWindow]: hourlyData,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  // update pair specific data\n  const update = useCallback((pairAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopPairs = useCallback((topPairs) => {\n    dispatch({\n      type: UPDATE_TOP_PAIRS,\n      payload: {\n        topPairs,\n      },\n    })\n  }, [])\n\n  const updatePairTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_PAIR_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateHourlyData = useCallback((address, hourlyData, timeWindow) => {\n    dispatch({\n      type: UPDATE_HOURLY_DATA,\n      payload: { address, hourlyData, timeWindow },\n    })\n  }, [])\n\n  return (\n    <PairDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updatePairTxns,\n            updateChartData,\n            updateTopPairs,\n            updateHourlyData,\n          },\n        ],\n        [state, update, updatePairTxns, updateChartData, updateTopPairs, updateHourlyData]\n      )}\n    >\n      {children}\n    </PairDataContext.Provider>\n  )\n}\n\nasync function getBulkPairData(network, pairList, ethPrice) {\n  const [t1, t2, tWeek] = getTimestampsForChanges()\n  let [{ number: b1 }, { number: b2 }, { number: bWeek }] = await getBlocksFromTimestamps(network, [t1, t2, tWeek])\n\n  const { client } = getClient(network)\n\n  try {\n    let current = await client.query({\n      query: PAIRS_BULK,\n      variables: {\n        allPairs: pairList,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    let [oneDayResult, twoDayResult, oneWeekResult] = await Promise.all(\n      [b1, b2, bWeek].map(async (block) => {\n        let result = client.query({\n          query: PAIRS_HISTORICAL_BULK(block, pairList),\n          fetchPolicy: 'cache-first',\n        })\n        return result\n      })\n    )\n\n    let oneDayData = oneDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let oneWeekData = oneWeekResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let pairData = await Promise.all(\n      current &&\n        current.data.pairs.map(async (pair) => {\n          let data = pair\n          let oneDayHistory = oneDayData?.[pair.id]\n          if (!oneDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b1),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = newData.data.pairs[0]\n          }\n          let twoDayHistory = twoDayData?.[pair.id]\n          if (!twoDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b2),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = newData.data.pairs[0]\n          }\n          let oneWeekHistory = oneWeekData?.[pair.id]\n          if (!oneWeekHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, bWeek),\n              fetchPolicy: 'cache-first',\n            })\n            oneWeekHistory = newData.data.pairs[0]\n          }\n          data = parseData(data, oneDayHistory, twoDayHistory, oneWeekHistory, ethPrice, b1)\n          return data\n        })\n    )\n    return pairData\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nfunction parseData(data, oneDayData, twoDayData, oneWeekData, ethPrice, oneDayBlock) {\n  const pairAddress = data.id\n\n  // get volume changes\n  const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n    data?.volumeUSD,\n    oneDayData?.volumeUSD ? oneDayData.volumeUSD : 0,\n    twoDayData?.volumeUSD ? twoDayData.volumeUSD : 0\n  )\n  const [oneDayVolumeUntracked, volumeChangeUntracked] = get2DayPercentChange(\n    data?.untrackedVolumeUSD,\n    oneDayData?.untrackedVolumeUSD ? parseFloat(oneDayData?.untrackedVolumeUSD) : 0,\n    twoDayData?.untrackedVolumeUSD ? twoDayData?.untrackedVolumeUSD : 0\n  )\n\n  const oneWeekVolumeUSD = parseFloat(oneWeekData ? data?.volumeUSD - oneWeekData?.volumeUSD : data.volumeUSD)\n\n  const oneWeekVolumeUntracked = parseFloat(\n    oneWeekData ? data?.untrackedVolumeUSD - oneWeekData?.untrackedVolumeUSD : data.untrackedVolumeUSD\n  )\n\n  // set volume properties\n  data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n  data.oneWeekVolumeUSD = oneWeekVolumeUSD\n  data.volumeChangeUSD = volumeChangeUSD\n  data.oneDayVolumeUntracked = oneDayVolumeUntracked\n  data.oneWeekVolumeUntracked = oneWeekVolumeUntracked\n  data.volumeChangeUntracked = volumeChangeUntracked\n\n  // set liquidity properties\n  data.trackedReserveUSD = data.trackedReserveETH * ethPrice\n  data.liquidityChangeUSD = getPercentChange(data.reserveUSD, oneDayData?.reserveUSD)\n\n  // format if pair hasnt existed for a day or a week\n  if (!oneDayData && data && data.createdAtBlockNumber > oneDayBlock) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneDayData && data) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneWeekData && data) {\n    data.oneWeekVolumeUSD = parseFloat(data.volumeUSD)\n  }\n\n  if (TRACKED_OVERRIDES.includes(pairAddress)) {\n    data.oneDayVolumeUSD = oneDayVolumeUntracked\n    data.oneWeekVolumeUSD = oneWeekVolumeUntracked\n    data.volumeChangeUSD = volumeChangeUntracked\n    data.trackedReserveUSD = data.reserveUSD\n  }\n\n  // format incorrect names\n  updateNameData(data)\n\n  return data\n}\n\nconst getPairTransactions = async (network, pairAddress) => {\n  const transactions = {}\n\n  const { client } = getClient(network)\n\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: [pairAddress],\n      },\n      fetchPolicy: 'no-cache',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\nconst getPairChartData = async (network, pairAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year').startOf('minute')\n  let startTime = utcStartTime.unix() - 1\n\n  const { client } = getClient(network)\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: PAIR_CHART,\n        variables: {\n          pairAddress: pairAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.pairDayDatas)\n      if (result.data.pairDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      dayData.reserveUSD = parseFloat(dayData.reserveUSD)\n    })\n\n    if (data[0]) {\n      // fill in empty days\n      let timestamp = data[0].date ? data[0].date : startTime\n      let latestLiquidityUSD = data[0].reserveUSD\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dayString: nextDay,\n            dailyVolumeUSD: 0,\n            reserveUSD: latestLiquidityUSD,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].reserveUSD\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\nconst getHourlyRateData = async (network, pairAddress, startTime, latestBlock) => {\n  const { client } = getClient(network)\n  try {\n    const utcEndTime = dayjs.utc()\n    let time = startTime\n\n    // create an array of hour start times until we reach current hour\n    const timestamps = []\n    while (time <= utcEndTime.unix() - 3600) {\n      timestamps.push(time)\n      time += 3600\n    }\n\n    // backout if invalid timestamp format\n    if (timestamps.length === 0) {\n      return []\n    }\n\n    // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n    let blocks\n\n    blocks = await getBlocksFromTimestamps(network, timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks?.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    const result = await splitQuery(HOURLY_PAIR_RATES, client, [pairAddress], blocks, 100)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      if (timestamp) {\n        values.push({\n          timestamp,\n          rate0: parseFloat(result[row]?.token0Price),\n          rate1: parseFloat(result[row]?.token1Price),\n        })\n      }\n    }\n\n    let formattedHistoryRate0 = []\n    let formattedHistoryRate1 = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistoryRate0.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate0),\n        close: parseFloat(values[i + 1].rate0),\n      })\n      formattedHistoryRate1.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate1),\n        close: parseFloat(values[i + 1].rate1),\n      })\n    }\n\n    return [formattedHistoryRate0, formattedHistoryRate1]\n  } catch (e) {\n    console.log(e)\n    return [[], []]\n  }\n}\n\nexport function Updater() {\n  const [network] = useNetwork()\n  const [, { updateTopPairs }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n\n  useEffect(() => {\n    const { client } = getClient(network)\n    async function getData() {\n      //remove pairs before fetching data\n      updateTopPairs([])\n      // get top pairs by reserves\n      let {\n        data: { pairs },\n      } = await client.query({\n        query: PAIRS_CURRENT,\n        fetchPolicy: 'cache-first',\n      })\n\n      // format as array of addresses\n      const formattedPairs = pairs.map((pair) => {\n        return pair.id\n      })\n\n      // get data for every pair in list\n      let topPairs = await getBulkPairData(network, formattedPairs, ethPrice)\n      topPairs && updateTopPairs(topPairs)\n    }\n    ethPrice && getData()\n  }, [network, ethPrice, updateTopPairs])\n  return null\n}\n\nexport function useHourlyRateData(pairAddress, timeWindow) {\n  const [network] = useNetwork()\n  const [state, { updateHourlyData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.hourlyData?.[timeWindow]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getHourlyRateData(network, pairAddress, startTime, latestBlock)\n      updateHourlyData(pairAddress, data, timeWindow)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [network, chartData, timeWindow, pairAddress, updateHourlyData, latestBlock])\n\n  return chartData\n}\n\n/**\n * @todo\n * store these updates to reduce future redundant calls\n */\nexport function useDataForList(pairList) {\n  const [network] = useNetwork()\n  const [state] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n\n  const [stale, setStale] = useState(false)\n  const [fetched, setFetched] = useState([])\n\n  // reset\n  useEffect(() => {\n    if (pairList) {\n      setStale(false)\n      setFetched()\n    }\n  }, [pairList])\n\n  useEffect(() => {\n    async function fetchNewPairData() {\n      let newFetched = []\n      let unfetched = []\n\n      pairList.map(async (pair) => {\n        let currentData = state?.[pair.id]\n        if (!currentData) {\n          unfetched.push(pair.id)\n        } else {\n          newFetched.push(currentData)\n        }\n      })\n\n      let newPairData = await getBulkPairData(\n        network,\n        unfetched.map((pair) => {\n          return pair\n        }),\n        ethPrice\n      )\n      setFetched(newFetched.concat(newPairData))\n    }\n    if (ethPrice && pairList && pairList.length > 0 && !fetched && !stale) {\n      setStale(true)\n      fetchNewPairData()\n    }\n  }, [network, ethPrice, state, pairList, stale, fetched])\n\n  let formattedFetch =\n    fetched &&\n    fetched.reduce((obj, cur) => {\n      return { ...obj, [cur?.id]: cur }\n    }, {})\n\n  return formattedFetch\n}\n\n/**\n * Get all the current and 24hr changes for a pair\n */\nexport function usePairData(pairAddress) {\n  const [network] = useNetwork()\n  const [state, { update }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n  const pairData = state?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!pairData && pairAddress) {\n        let data = await getBulkPairData(network, [pairAddress], ethPrice)\n        data && update(pairAddress, data[0])\n      }\n    }\n    if (!pairData && pairAddress && ethPrice && isAddress(pairAddress)) {\n      fetchData()\n    }\n  }, [network, pairAddress, pairData, update, ethPrice])\n\n  return pairData || {}\n}\n\n/**\n * Get most recent txns for a pair\n */\nexport function usePairTransactions(pairAddress) {\n  const [network] = useNetwork()\n  const [state, { updatePairTxns }] = usePairDataContext()\n  const pairTxns = state?.[pairAddress]?.txns\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!pairTxns) {\n        let transactions = await getPairTransactions(network, pairAddress)\n        updatePairTxns(pairAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [network, pairTxns, pairAddress, updatePairTxns])\n  return pairTxns\n}\n\nexport function usePairChartData(pairAddress) {\n  const [network] = useNetwork()\n  const [state, { updateChartData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.chartData\n\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getPairChartData(network, pairAddress)\n        updateChartData(pairAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [network, chartData, pairAddress, updateChartData])\n  return chartData\n}\n\n/**\n * Get list of all pairs in Xata\n */\nexport function useAllPairData() {\n  const [state] = usePairDataContext()\n  return state || {}\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { getClient } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useTimeframe, useNetwork } from './Application'\nimport {\n  getPercentChange,\n  getBlockFromTimestamp,\n  getBlocksFromTimestamps,\n  get2DayPercentChange,\n  getTimeframe,\n} from '../utils'\nimport {\n  GLOBAL_DATA,\n  MEV_CHART,\n  GLOBAL_TXNS,\n  GLOBAL_CHART,\n  ETH_PRICE,\n  ALL_PAIRS,\n  ALL_TOKENS,\n  TOP_LPS_PER_PAIRS,\n} from '../apollo/queries'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport { useAllPairData } from './PairData'\nimport { useTokenChartDataCombined } from './TokenData'\nimport { usePrevious } from 'react-use'\nconst UPDATE = 'UPDATE'\nconst UPDATE_TXNS = 'UPDATE_TXNS'\nconst UPDATE_CHART = 'UPDATE_CHART'\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\nconst UPDATE_ALL_PAIRS_IN_XATA = 'UPDATE_ALL_PAIRS_IN_XATA'\nconst UPDATE_ALL_TOKENS_IN_XATA = 'UPDATE_ALL_TOKENS_IN_XATA'\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\nconst UPDATE_MEV_CHART = 'UPDATE_MEV_CHART'\n\nconst offsetVolumes = [\n  '0x9ea3b5b4ec044b70375236a281986106457b20ef',\n  '0x05934eba98486693aaec2d00b0e9ce918e37dc3f',\n  '0x3d7e683fc9c86b4d653c9e47ca12517440fad14e',\n  '0xfae9c647ad7d89e738aba720acf09af93dc535f7',\n  '0x7296368fe9bcb25d3ecc19af13655b907818cc09',\n]\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\n\nconst GlobalDataContext = createContext()\n\nfunction useGlobalDataContext() {\n  return useContext(GlobalDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { data } = payload\n      return {\n        ...state,\n        globalData: data,\n      }\n    }\n    case UPDATE_TXNS: {\n      const { transactions } = payload\n      return {\n        ...state,\n        transactions,\n      }\n    }\n    case UPDATE_CHART: {\n      const { daily, weekly } = payload\n      return {\n        ...state,\n        chartData: {\n          daily,\n          weekly,\n        },\n      }\n    }\n    case UPDATE_MEV_CHART: {\n      const { daily } = payload\n      return {\n        ...state,\n        MEVChartData: {\n          daily,\n        },\n      }\n    }\n    case UPDATE_ETH_PRICE: {\n      const { ethPrice, oneDayPrice, ethPriceChange } = payload\n      return {\n        [ETH_PRICE_KEY]: ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      }\n    }\n\n    case UPDATE_ALL_PAIRS_IN_XATA: {\n      const { allPairs } = payload\n      return {\n        ...state,\n        allPairs,\n      }\n    }\n\n    case UPDATE_ALL_TOKENS_IN_XATA: {\n      const { allTokens } = payload\n      return {\n        ...state,\n        allTokens,\n      }\n    }\n\n    case UPDATE_TOP_LPS: {\n      const { topLps } = payload\n      return {\n        ...state,\n        topLps,\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        data,\n      },\n    })\n  }, [])\n\n  const updateTransactions = useCallback((transactions) => {\n    dispatch({\n      type: UPDATE_TXNS,\n      payload: {\n        transactions,\n      },\n    })\n  }, [])\n\n  const updateChart = useCallback((daily, weekly) => {\n    dispatch({\n      type: UPDATE_CHART,\n      payload: {\n        daily,\n        weekly,\n      },\n    })\n  }, [])\n  const updateMEVChart = useCallback((daily) => {\n    dispatch({\n      type: UPDATE_MEV_CHART,\n      payload: {\n        daily,\n      },\n    })\n  }, [])\n\n  const updateEthPrice = useCallback((ethPrice, oneDayPrice, ethPriceChange) => {\n    dispatch({\n      type: UPDATE_ETH_PRICE,\n      payload: {\n        ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      },\n    })\n  }, [])\n\n  const updateAllPairsInXata = useCallback((allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS_IN_XATA,\n      payload: {\n        allPairs,\n      },\n    })\n  }, [])\n\n  const updateAllTokensInXata = useCallback((allTokens) => {\n    dispatch({\n      type: UPDATE_ALL_TOKENS_IN_XATA,\n      payload: {\n        allTokens,\n      },\n    })\n  }, [])\n\n  const updateTopLps = useCallback((topLps) => {\n    dispatch({\n      type: UPDATE_TOP_LPS,\n      payload: {\n        topLps,\n      },\n    })\n  }, [])\n  return (\n    <GlobalDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTransactions,\n            updateChart,\n            updateMEVChart,\n            updateEthPrice,\n            updateTopLps,\n            updateAllPairsInXata,\n            updateAllTokensInXata,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTransactions,\n          updateTopLps,\n          updateChart,\n          updateMEVChart,\n          updateEthPrice,\n          updateAllPairsInXata,\n          updateAllTokensInXata,\n        ]\n      )}\n    >\n      {children}\n    </GlobalDataContext.Provider>\n  )\n}\n\n/**\n * Gets all the global data for the overview page.\n * Needs current eth price and the old eth price to get\n * 24 hour USD changes.\n * @param {*} ethPrice\n * @param {*} oldEthPrice\n */\n\nasync function getGlobalData(network, ethPrice, oldEthPrice) {\n  // data for each day , historic data used for % changes\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // get timestamps for the days\n    const utcCurrentTime = dayjs()\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\n\n    // get the blocks needed for time travel queries\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps(network, [\n      utcOneDayBack,\n      utcTwoDaysBack,\n      utcOneWeekBack,\n      utcTwoWeeksBack,\n    ])\n\n    const { client } = getClient(network)\n\n    // fetch the global data\n    let result = await client.query({\n      query: GLOBAL_DATA(),\n      fetchPolicy: 'cache-first',\n    })\n    data = result.data.conveyorV2Factories[0]\n\n    // fetch the historical data\n    let oneDayResult = await client.query({\n      query: GLOBAL_DATA(oneDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.conveyorV2Factories[0]\n\n    let twoDayResult = await client.query({\n      query: GLOBAL_DATA(twoDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.conveyorV2Factories[0]\n\n    let oneWeekResult = await client.query({\n      query: GLOBAL_DATA(oneWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const oneWeekData = oneWeekResult.data.conveyorV2Factories[0]\n\n    let twoWeekResult = await client.query({\n      query: GLOBAL_DATA(twoWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const twoWeekData = twoWeekResult.data.conveyorV2Factories[0]\n\n    if (data && oneDayData && twoDayData && twoWeekData) {\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneDayData.totalVolumeUSD,\n        twoDayData.totalVolumeUSD\n      )\n\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneWeekData.totalVolumeUSD,\n        twoWeekData.totalVolumeUSD\n      )\n\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\n        data.txCount,\n        oneDayData.txCount ? oneDayData.txCount : 0,\n        twoDayData.txCount ? twoDayData.txCount : 0\n      )\n\n      // format the total liquidity in USD\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\n      const liquidityChangeUSD = getPercentChange(\n        data.totalLiquidityETH * ethPrice,\n        oneDayData.totalLiquidityETH * oldEthPrice\n      )\n\n      // add relevant fields with the calculated amounts\n      data.oneDayVolumeUSD = oneDayVolumeUSD\n      data.oneWeekVolume = oneWeekVolume\n      data.weeklyVolumeChange = weeklyVolumeChange\n      data.volumeChangeUSD = volumeChangeUSD\n      data.liquidityChangeUSD = liquidityChangeUSD\n      data.oneDayTxns = oneDayTxns\n      data.txnChange = txnChange\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\n/**\n * Get historical data for volume and liquidity used in global charts\n * on main page\n * @param {*} oldestDateToFetch // start of window to fetch from\n */\n\nlet checked = false\n\nconst getChartData = async (network, oldestDateToFetch, offsetData) => {\n  let data = []\n  let weeklyData = []\n  const utcEndTime = dayjs.utc()\n  let skip = 0\n  let allFound = false\n\n  const { client } = getClient(network)\n\n  try {\n    while (!allFound) {\n      let result = await client.query({\n        query: GLOBAL_CHART,\n        variables: {\n          startTime: oldestDateToFetch,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.xatadayDatas)\n      if (result.data.xatadayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    if (data) {\n      let dayIndexSet = new Set()\n      let dayIndexArray = []\n      const oneDay = 24 * 60 * 60\n\n      // for each day, parse the daily volume and format for chart array\n      data.forEach((dayData, i) => {\n        // add the day index to the set of days\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n        dayIndexArray.push(data[i])\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      })\n\n      // fill in empty days ( there will be no day datas if no trades made that day )\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\n      let latestDayDats = data[0].mostLiquidTokens\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dailyVolumeUSD: 0,\n            totalLiquidityUSD: latestLiquidityUSD,\n            mostLiquidTokens: latestDayDats,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    // format weekly data for weekly sized chunks\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n    let startIndexWeekly = -1\n    let currentWeek = -1\n\n    data.forEach((entry, i) => {\n      const date = data[i].date\n\n      // hardcoded fix for offset volume\n      offsetData &&\n        !checked &&\n        offsetData.map((dayData) => {\n          if (dayData[date]) {\n            data[i].dailyVolumeUSD = parseFloat(data[i].dailyVolumeUSD) - parseFloat(dayData[date].dailyVolumeUSD)\n          }\n          return true\n        })\n\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\n      if (week !== currentWeek) {\n        currentWeek = week\n        startIndexWeekly++\n      }\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\n      weeklyData[startIndexWeekly].date = data[i].date\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\n    })\n\n    if (!checked) {\n      checked = true\n    }\n  } catch (e) {\n    console.log(e)\n  }\n  return [data, weeklyData]\n}\n\nexport const getMEVChartData = async (network) => {\n  let data = []\n  let allFound = false\n\n  const { mevClient } = getClient(network)\n\n  try {\n    while (!allFound) {\n      let result = await mevClient.query({\n        query: MEV_CHART,\n        fetchPolicy: 'cache-first',\n      })\n      if (network === 'POLYGON') {\n        result.data.xatadayMEVDatas.forEach((dataPoint) => {\n          const quickFixUnusedSlippageUSD = (parseFloat(dataPoint.totalUnusedSlippageUSD) / 10 ** 12).toString()\n          dataPoint.totalUnusedSlippageUSD = quickFixUnusedSlippageUSD\n        })\n        data = data.concat(result.data.xatadayMEVDatas)\n      } else {\n        data = data.concat(result.data.xatadayMEVDatas)\n      }\n      if (result.data.xatadayMEVDatas.length < 1000) {\n        allFound = true\n      }\n    }\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\n/**\n * Get and format transactions for global page\n */\nconst getGlobalTransactions = async (network) => {\n  const { client } = getClient(network)\n  let transactions = {}\n\n  try {\n    let result = await client.query({\n      query: GLOBAL_TXNS,\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = []\n    transactions.burns = []\n    transactions.swaps = []\n    result?.data?.transactions &&\n      result.data.transactions.map((transaction) => {\n        if (transaction.mints.length > 0) {\n          transaction.mints.map((mint) => {\n            return transactions.mints.push(mint)\n          })\n        }\n        if (transaction.burns.length > 0) {\n          transaction.burns.map((burn) => {\n            return transactions.burns.push(burn)\n          })\n        }\n        if (transaction.swaps.length > 0) {\n          transaction.swaps.map((swap) => {\n            return transactions.swaps.push(swap)\n          })\n        }\n        return true\n      })\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\n/**\n * Gets the current price  of ETH, 24 hour price, and % change between them\n */\nconst getEthPrice = async (network) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n\n  let ethPrice = 0\n  let ethPriceOneDay = 0\n  let priceChangeETH = 0\n\n  const { client } = getClient(network)\n\n  try {\n    let oneDayBlock = await getBlockFromTimestamp(network, utcOneDayBack)\n    let result = await client.query({\n      query: ETH_PRICE(),\n      fetchPolicy: 'cache-first',\n    })\n    let resultOneDay = await client.query({\n      query: ETH_PRICE(oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\n    ethPrice = currentPrice\n    ethPriceOneDay = oneDayBackPrice\n  } catch (e) {\n    console.log(e)\n  }\n\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\n}\n\nconst PAIRS_TO_FETCH = 500\nconst TOKENS_TO_FETCH = 500\n\n/**\n * Loop through every pair on xata, used for search\n */\nasync function getAllPairsOnXata(network) {\n  const { client } = getClient(network)\n  try {\n    let allFound = false\n    let pairs = []\n    let skipCount = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_PAIRS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skipCount = skipCount + PAIRS_TO_FETCH\n      pairs = pairs.concat(result?.data?.pairs)\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\n        allFound = true\n      }\n    }\n    return pairs\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Loop through every token on xata, used for search\n */\nasync function getAllTokensOnXata(network) {\n  const { client } = getClient(network)\n  try {\n    let allFound = false\n    let skipCount = 0\n    let tokens = []\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_TOKENS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      tokens = tokens.concat(result?.data?.tokens)\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\n        allFound = true\n      }\n      skipCount = skipCount += TOKENS_TO_FETCH\n    }\n    return tokens\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Hook that fetches overview data, plus all tokens and pairs for search\n */\nexport function useGlobalData() {\n  const [state, { update, updateAllPairsInXata, updateAllTokensInXata }] = useGlobalDataContext()\n  const [ethPrice, oldEthPrice] = useEthPrice()\n  const [network] = useNetwork()\n  const data = state?.globalData\n  const prevNetwork = usePrevious(network)\n\n  // const combinedVolume = useTokenDataCombined(offsetVolumes)\n\n  useEffect(() => {\n    async function fetchData() {\n      let globalData = await getGlobalData(network, ethPrice, oldEthPrice)\n      globalData && update(globalData)\n\n      let allPairs = await getAllPairsOnXata(network)\n      updateAllPairsInXata(allPairs)\n\n      let allTokens = await getAllTokensOnXata(network)\n      updateAllTokensInXata(allTokens)\n    }\n    if ((!data && ethPrice && oldEthPrice) || network !== prevNetwork) {\n      fetchData()\n    }\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInXata, updateAllTokensInXata, network, prevNetwork])\n  return data || {}\n}\n\nexport function useGlobalChartData() {\n  const [state, { updateChart }] = useGlobalDataContext()\n  const [oldestDateFetch, setOldestDateFetched] = useState()\n  const [activeWindow] = useTimeframe()\n\n  const chartDataDaily = state?.chartData?.daily\n  const chartDataWeekly = state?.chartData?.weekly\n\n  /**\n   * Keep track of oldest date fetched. Used to\n   * limit data fetched until its actually needed.\n   * (dont fetch year long stuff unless year option selected)\n   */\n  useEffect(() => {\n    // based on window, get starttime\n    let startTime = getTimeframe(activeWindow)\n\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\n      setOldestDateFetched(startTime)\n    }\n  }, [activeWindow, oldestDateFetch])\n\n  // fix for rebass tokens\n\n  const combinedData = useTokenChartDataCombined(offsetVolumes)\n  const [network] = useNetwork()\n  /**\n   * Fetch data if none fetched or older data is needed\n   */\n  useEffect(() => {\n    async function fetchData() {\n      // historical stuff for chart\n      let [newChartData, newWeeklyData] = await getChartData(network, oldestDateFetch, combinedData)\n      updateChart(newChartData, newWeeklyData)\n    }\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly) && combinedData) {\n      fetchData()\n    }\n  }, [chartDataDaily, chartDataWeekly, combinedData, oldestDateFetch, updateChart, network])\n\n  return [chartDataDaily, chartDataWeekly, updateChart]\n}\n\nexport function useMEVChartData() {\n  const [state, { updateMEVChart }] = useGlobalDataContext()\n  const [oldestDateFetch, setOldestDateFetched] = useState()\n  const [activeWindow] = useTimeframe()\n  const [network] = useNetwork()\n  const mevDataDaily = state?.MEVChartData?.daily\n\n  /**\n   * Keep track of oldest date fetched. Used to\n   * limit data fetched until its actually needed.\n   * (dont fetch year long stuff unless year option selected)\n   */\n  useEffect(() => {\n    let startTime = getTimeframe(activeWindow)\n\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\n      setOldestDateFetched(startTime)\n    }\n  }, [activeWindow, oldestDateFetch])\n\n  useEffect(() => {\n    async function fetchData() {\n      //historical stuff for chart\n      let newChartData = await getMEVChartData(network)\n      updateMEVChart(newChartData)\n    }\n    // if (oldestDateFetch && !mevDataDaily) {\n    fetchData()\n    // }\n  }, [oldestDateFetch, updateMEVChart, network])\n  return [mevDataDaily, updateMEVChart]\n}\n\nexport function useGlobalTransactions() {\n  const [state, { updateTransactions }] = useGlobalDataContext()\n  const transactions = state?.transactions\n  const [network] = useNetwork()\n  const prevNetwork = usePrevious(network)\n  useEffect(() => {\n    async function fetchData() {\n      if (!transactions || network !== prevNetwork) {\n        let txns = await getGlobalTransactions(network)\n        updateTransactions(txns)\n      }\n    }\n    fetchData()\n  }, [updateTransactions, transactions, network, prevNetwork])\n  return transactions\n}\n\nexport function useEthPrice() {\n  const [network] = useNetwork()\n  const [state, { updateEthPrice }] = useGlobalDataContext()\n  const ethPrice = state?.[ETH_PRICE_KEY]\n  const ethPriceOld = state?.['oneDayPrice']\n  useEffect(() => {\n    async function checkForEthPrice() {\n      if (!ethPrice) {\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice(network)\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\n      }\n    }\n    checkForEthPrice()\n  }, [network, ethPrice, updateEthPrice])\n\n  return [ethPrice, ethPriceOld]\n}\n\nexport function useAllPairsInXata() {\n  const [state] = useGlobalDataContext()\n  let allPairs = state?.allPairs\n\n  return allPairs || []\n}\n\nexport function useAllTokensInXata() {\n  const [state] = useGlobalDataContext()\n  let allTokens = state?.allTokens\n\n  return allTokens || []\n}\n\n/**\n * Get the top liquidity positions based on USD size\n * @TODO Not a perfect lookup needs improvement\n */\nexport function useTopLps() {\n  const [state, { updateTopLps }] = useGlobalDataContext()\n  let topLps = state?.topLps\n\n  const allPairs = useAllPairData()\n  const [network] = useNetwork()\n\n  useEffect(() => {\n    const { client } = getClient(network)\n    async function fetchData() {\n      // get top 20 by reserves\n      let topPairs = Object.keys(allPairs)\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\n        ?.slice(0, 99)\n        .map((pair) => pair)\n\n      let topLpLists = await Promise.all(\n        topPairs.map(async (pair) => {\n          // for each one, fetch top LPs\n          try {\n            const { data: results } = await client.query({\n              query: TOP_LPS_PER_PAIRS,\n              variables: {\n                pair: pair.toString(),\n              },\n              fetchPolicy: 'cache-first',\n            })\n            if (results) {\n              return results.liquidityPositions\n            }\n          } catch (e) {}\n        })\n      )\n\n      // get the top lps from the results formatted\n      const topLps = []\n      topLpLists\n        .filter((i) => !!i) // check for ones not fetched correctly\n        .map((list) => {\n          return list.map((entry) => {\n            const pairData = allPairs[entry.pair.id]\n            return topLps.push({\n              user: entry.user,\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\n              pairAddress: entry.pair.id,\n              token0: pairData.token0.id,\n              token1: pairData.token1.id,\n              usd:\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\n                parseFloat(pairData.reserveUSD),\n            })\n          })\n        })\n\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\n      const shorter = sorted.splice(0, 100)\n      updateTopLps(shorter)\n    }\n\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\n      fetchData()\n    }\n  })\n\n  return topLps\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nimport { getClient } from '../apollo/client'\nimport {\n  TOKEN_DATA,\n  FILTERED_TRANSACTIONS,\n  TOKEN_CHART,\n  TOKEN_TOP_DAY_DATAS,\n  PRICES_BY_BLOCK,\n  TOKENS_HISTORICAL_BULK,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  get2DayPercentChange,\n  getPercentChange,\n  getBlockFromTimestamp,\n  isAddress,\n  getBlocksFromTimestamps,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions } from '../constants'\nimport { useLatestBlocks, useNetwork } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TOKEN_TXNS = 'UPDATE_TOKEN_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_PRICE_DATA = 'UPDATE_PRICE_DATA'\nconst UPDATE_TOP_TOKENS = ' UPDATE_TOP_TOKENS'\nconst UPDATE_ALL_PAIRS = 'UPDATE_ALL_PAIRS'\nconst UPDATE_COMBINED = 'UPDATE_COMBINED'\n\nconst TOKEN_PAIRS_KEY = 'TOKEN_PAIRS_KEY'\n\ndayjs.extend(utc)\n\nconst TokenDataContext = createContext()\n\nexport function useTokenDataContext() {\n  return useContext(TokenDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { tokenAddress, data } = payload\n      return {\n        ...state,\n        [tokenAddress]: {\n          ...state?.[tokenAddress],\n          ...data,\n        },\n      }\n    }\n    case UPDATE_TOP_TOKENS: {\n      const { topTokens } = payload\n      let added = {}\n      topTokens &&\n        topTokens.map((token) => {\n          return (added[token.id] = token)\n        })\n      return {\n        ...added,\n      }\n    }\n\n    case UPDATE_COMBINED: {\n      const { combinedVol } = payload\n      return {\n        ...state,\n        combinedVol,\n      }\n    }\n\n    case UPDATE_TOKEN_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_PRICE_DATA: {\n      const { address, data, timeWindow, interval } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [timeWindow]: {\n            ...state?.[address]?.[timeWindow],\n            [interval]: data,\n          },\n        },\n      }\n    }\n\n    case UPDATE_ALL_PAIRS: {\n      const { address, allPairs } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [TOKEN_PAIRS_KEY]: allPairs,\n        },\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((tokenAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        tokenAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopTokens = useCallback((topTokens) => {\n    dispatch({\n      type: UPDATE_TOP_TOKENS,\n      payload: {\n        topTokens,\n      },\n    })\n  }, [])\n\n  const updateCombinedVolume = useCallback((combinedVol) => {\n    dispatch({\n      type: UPDATE_COMBINED,\n      payload: {\n        combinedVol,\n      },\n    })\n  }, [])\n\n  const updateTokenTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_TOKEN_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateAllPairs = useCallback((address, allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS,\n      payload: { address, allPairs },\n    })\n  }, [])\n\n  const updatePriceData = useCallback((address, data, timeWindow, interval) => {\n    dispatch({\n      type: UPDATE_PRICE_DATA,\n      payload: { address, data, timeWindow, interval },\n    })\n  }, [])\n\n  return (\n    <TokenDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTokenTxns,\n            updateChartData,\n            updateTopTokens,\n            updateAllPairs,\n            updatePriceData,\n            updateCombinedVolume,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTokenTxns,\n          updateCombinedVolume,\n          updateChartData,\n          updateTopTokens,\n          updateAllPairs,\n          updatePriceData,\n        ]\n      )}\n    >\n      {children}\n    </TokenDataContext.Provider>\n  )\n}\n\nconst getTopTokens = async (network, ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n  let oneDayBlock = await getBlockFromTimestamp(network, utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(network, utcTwoDaysBack)\n\n  const { client } = getClient(network)\n\n  try {\n    // need to get the top tokens by liquidity by need token day datas\n    const currentDate = parseInt(Date.now() / 86400 / 1000) * 86400 - 86400\n\n    let tokenids = await client.query({\n      query: TOKEN_TOP_DAY_DATAS,\n      fetchPolicy: 'network-only',\n      variables: { date: currentDate },\n    })\n\n    const ids = tokenids?.data?.tokenDayDatas?.reduce((accum, entry) => {\n      accum.push(entry.id.slice(0, 42))\n      return accum\n    }, [])\n\n    let current = await client.query({\n      query: TOKENS_HISTORICAL_BULK(ids),\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayResult = await client.query({\n      query: TOKENS_HISTORICAL_BULK(ids, oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let twoDayResult = await client.query({\n      query: TOKENS_HISTORICAL_BULK(ids, twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayData = oneDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let bulkResults = await Promise.all(\n      current &&\n        oneDayData &&\n        twoDayData &&\n        current?.data?.tokens.map(async (token) => {\n          let data = token\n\n          // let liquidityDataThisToken = liquidityData?.[token.id]\n          let oneDayHistory = oneDayData?.[token.id]\n          let twoDayHistory = twoDayData?.[token.id]\n\n          // catch the case where token wasnt in top list in previous days\n          if (!oneDayHistory) {\n            let oneDayResult = await client.query({\n              query: TOKEN_DATA(token.id, oneDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = oneDayResult.data.tokens[0]\n          }\n          if (!twoDayHistory) {\n            let twoDayResult = await client.query({\n              query: TOKEN_DATA(token.id, twoDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = twoDayResult.data.tokens[0]\n          }\n\n          // calculate percentage changes and daily changes\n          const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n            data.tradeVolumeUSD,\n            oneDayHistory?.tradeVolumeUSD ?? 0,\n            twoDayHistory?.tradeVolumeUSD ?? 0\n          )\n          const [oneDayTxns, txnChange] = get2DayPercentChange(\n            data.txCount,\n            oneDayHistory?.txCount ?? 0,\n            twoDayHistory?.txCount ?? 0\n          )\n\n          const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n          const oldLiquidityUSD = oneDayHistory?.totalLiquidity * ethPriceOld * oneDayHistory?.derivedETH\n\n          // percent changes\n          const priceChangeUSD = getPercentChange(\n            data?.derivedETH * ethPrice,\n            oneDayHistory?.derivedETH ? oneDayHistory?.derivedETH * ethPriceOld : 0\n          )\n\n          // set data\n          data.priceUSD = data?.derivedETH * ethPrice\n          data.totalLiquidityUSD = currentLiquidityUSD\n          data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n          data.volumeChangeUSD = volumeChangeUSD\n          data.priceChangeUSD = priceChangeUSD\n          data.liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n          data.oneDayTxns = oneDayTxns\n          data.txnChange = txnChange\n\n          // new tokens\n          if (!oneDayHistory && data) {\n            data.oneDayVolumeUSD = data.tradeVolumeUSD\n            data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n            data.oneDayTxns = data.txCount\n          }\n\n          // update name data for\n          updateNameData({\n            token0: data,\n          })\n\n          // // HOTFIX for Aave\n          // if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n          //   const aaveData = await client.query({\n          //     query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n          //     fetchPolicy: 'cache-first',\n          //   })\n          //   const result = aaveData.data.pairs[0]\n          //   data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n          //   data.liquidityChangeUSD = 0\n          //   data.priceChangeUSD = 0\n          // }\n\n          // used for custom adjustments\n          data.oneDayData = oneDayHistory\n          data.twoDayData = twoDayHistory\n\n          return data\n        })\n    )\n\n    return bulkResults\n\n    // calculate percentage changes and daily changes\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getTokenData = async (network, address, ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  let oneDayBlock = await getBlockFromTimestamp(network, utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(network, utcTwoDaysBack)\n\n  const { client } = getClient(network)\n\n  // initialize data arrays\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(address),\n      fetchPolicy: 'cache-first',\n    })\n    data = result?.data?.tokens?.[0]\n\n    // get results from 24 hours in past\n    let oneDayResult = await client.query({\n      query: TOKEN_DATA(address, oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.tokens[0]\n\n    // get results from 48 hours in past\n    let twoDayResult = await client.query({\n      query: TOKEN_DATA(address, twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.tokens[0]\n\n    // catch the case where token wasnt in top list in previous days\n    if (!oneDayData) {\n      let oneDayResult = await client.query({\n        query: TOKEN_DATA(address, oneDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      oneDayData = oneDayResult.data.tokens[0]\n    }\n    if (!twoDayData) {\n      let twoDayResult = await client.query({\n        query: TOKEN_DATA(address, twoDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      twoDayData = twoDayResult.data.tokens[0]\n    }\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n      data.tradeVolumeUSD,\n      oneDayData?.tradeVolumeUSD ?? 0,\n      twoDayData?.tradeVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUT, volumeChangeUT] = get2DayPercentChange(\n      data.untrackedVolumeUSD,\n      oneDayData?.untrackedVolumeUSD ?? 0,\n      twoDayData?.untrackedVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayTxns, txnChange] = get2DayPercentChange(\n      data.txCount,\n      oneDayData?.txCount ?? 0,\n      twoDayData?.txCount ?? 0\n    )\n\n    const priceChangeUSD = getPercentChange(\n      data?.derivedETH * ethPrice,\n      parseFloat(oneDayData?.derivedETH ?? 0) * ethPriceOld\n    )\n\n    const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n    const oldLiquidityUSD = oneDayData?.totalLiquidity * ethPriceOld * oneDayData?.derivedETH\n\n    // set data\n    data.priceUSD = data?.derivedETH * ethPrice\n    data.totalLiquidityUSD = currentLiquidityUSD\n    data.oneDayVolumeUSD = oneDayVolumeUSD\n    data.volumeChangeUSD = volumeChangeUSD\n    data.priceChangeUSD = priceChangeUSD\n    data.oneDayVolumeUT = oneDayVolumeUT\n    data.volumeChangeUT = volumeChangeUT\n    const liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n    data.liquidityChangeUSD = liquidityChangeUSD\n    data.oneDayTxns = oneDayTxns\n    data.txnChange = txnChange\n\n    // used for custom adjustments\n    data.oneDayData = oneDayData?.[address]\n    data.twoDayData = twoDayData?.[address]\n\n    // new tokens\n    if (!oneDayData && data) {\n      data.oneDayVolumeUSD = data.tradeVolumeUSD\n      data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n      data.oneDayTxns = data.txCount\n    }\n\n    // update name data for\n    updateNameData({\n      token0: data,\n    })\n\n    // // HOTFIX for Aave\n    // if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n    //   const aaveData = await client.query({\n    //     query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n    //     fetchPolicy: 'cache-first',\n    //   })\n    //   const result = aaveData.data.pairs[0]\n    //   data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n    //   data.liquidityChangeUSD = 0\n    //   data.priceChangeUSD = 0\n    // }\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nconst getTokenTransactions = async (network, allPairsFormatted) => {\n  const transactions = {}\n  const { client } = getClient(network)\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: allPairsFormatted,\n      },\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n  return transactions\n}\n\nconst getTokenPairs = async (network, tokenAddress) => {\n  const { client } = getClient(network)\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(tokenAddress),\n      fetchPolicy: 'cache-first',\n    })\n    return result.data?.['pairs0'].concat(result.data?.['pairs1'])\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getIntervalTokenData = async (network, tokenAddress, startTime, interval = 3600, latestBlock) => {\n  const utcEndTime = dayjs.utc()\n  const { client } = getClient(network)\n  let time = startTime\n\n  // create an array of hour start times until we reach current hour\n  // buffer by half hour to catch case where graph isnt synced to latest block\n  const timestamps = []\n  while (time < utcEndTime.unix()) {\n    timestamps.push(time)\n    time += interval\n  }\n\n  // backout if invalid timestamp format\n  if (timestamps.length === 0) {\n    return []\n  }\n\n  // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n  let blocks\n  try {\n    blocks = await getBlocksFromTimestamps(network, timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    let result = await splitQuery(PRICES_BY_BLOCK, client, [tokenAddress], blocks, 50)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      let derivedETH = parseFloat(result[row]?.derivedETH)\n      if (timestamp) {\n        values.push({\n          timestamp,\n          derivedETH,\n        })\n      }\n    }\n\n    // go through eth usd prices and assign to original values array\n    let index = 0\n    for (var brow in result) {\n      let timestamp = brow.split('b')[1]\n      if (timestamp) {\n        values[index].priceUSD = result[brow].ethPrice * values[index].derivedETH\n        index += 1\n      }\n    }\n\n    let formattedHistory = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistory.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].priceUSD),\n        close: parseFloat(values[i + 1].priceUSD),\n      })\n    }\n\n    return formattedHistory\n  } catch (e) {\n    console.log(e)\n    console.log('error fetching blocks')\n    return []\n  }\n}\n\nconst getTokenChartData = async (network, tokenAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year')\n  let startTime = utcStartTime.startOf('minute').unix() - 1\n\n  const { client } = getClient(network)\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: TOKEN_CHART,\n        variables: {\n          tokenAddr: tokenAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (result.data.tokenDayDatas.length < 1000) {\n        allFound = true\n      }\n      skip += 1000\n      data = data.concat(result.data.tokenDayDatas)\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n    })\n\n    // fill in empty days\n    let timestamp = data[0] && data[0].date ? data[0].date : startTime\n    let latestLiquidityUSD = data[0] && data[0].totalLiquidityUSD\n    let latestPriceUSD = data[0] && data[0].priceUSD\n    let latestPairDatas = data[0] && data[0].mostLiquidPairs\n    let index = 1\n    while (timestamp < utcEndTime.startOf('minute').unix() - oneDay) {\n      const nextDay = timestamp + oneDay\n      let currentDayIndex = (nextDay / oneDay).toFixed(0)\n      if (!dayIndexSet.has(currentDayIndex)) {\n        data.push({\n          date: nextDay,\n          dayString: nextDay,\n          dailyVolumeUSD: 0,\n          priceUSD: latestPriceUSD,\n          totalLiquidityUSD: latestLiquidityUSD,\n          mostLiquidPairs: latestPairDatas,\n        })\n      } else {\n        latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n        latestPriceUSD = dayIndexArray[index].priceUSD\n        latestPairDatas = dayIndexArray[index].mostLiquidPairs\n        index = index + 1\n      }\n      timestamp = nextDay\n    }\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nexport function Updater() {\n  const [network] = useNetwork()\n  const [, { updateTopTokens }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  useEffect(() => {\n    async function getData() {\n      //remove top tokens before fetching data\n      updateTopTokens([])\n      // get top pairs for overview list\n      let topTokens = await getTopTokens(network, ethPrice, ethPriceOld)\n      topTokens && updateTopTokens(topTokens)\n    }\n    ethPrice && ethPriceOld && getData()\n  }, [network, ethPrice, ethPriceOld, updateTopTokens])\n  return null\n}\n\nexport function useTokenData(tokenAddress) {\n  const [state, { update }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  const tokenData = state?.[tokenAddress]\n\n  useEffect(() => {\n    if (!tokenData && ethPrice && ethPriceOld && isAddress(tokenAddress)) {\n      getTokenData(tokenAddress, ethPrice, ethPriceOld).then((data) => {\n        update(tokenAddress, data)\n      })\n    }\n  }, [ethPrice, ethPriceOld, tokenAddress, tokenData, update])\n\n  return tokenData || {}\n}\n\nexport function useTokenTransactions(tokenAddress) {\n  const [network] = useNetwork()\n  const [state, { updateTokenTxns }] = useTokenDataContext()\n  const tokenTxns = state?.[tokenAddress]?.txns\n\n  const allPairsFormatted =\n    state[tokenAddress] &&\n    state[tokenAddress].TOKEN_PAIRS_KEY &&\n    state[tokenAddress].TOKEN_PAIRS_KEY.map((pair) => {\n      return pair.id\n    })\n\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!tokenTxns && allPairsFormatted) {\n        let transactions = await getTokenTransactions(network, allPairsFormatted)\n        updateTokenTxns(tokenAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [network, tokenTxns, tokenAddress, updateTokenTxns, allPairsFormatted])\n\n  return tokenTxns || []\n}\n\nexport function useTokenPairs(tokenAddress) {\n  const [network] = useNetwork()\n  const [state, { updateAllPairs }] = useTokenDataContext()\n  const tokenPairs = state?.[tokenAddress]?.[TOKEN_PAIRS_KEY]\n\n  useEffect(() => {\n    async function fetchData() {\n      let allPairs = await getTokenPairs(network, tokenAddress)\n      updateAllPairs(tokenAddress, allPairs)\n    }\n    if (!tokenPairs && isAddress(tokenAddress)) {\n      fetchData()\n    }\n  }, [network, tokenAddress, tokenPairs, updateAllPairs])\n\n  return tokenPairs || []\n}\n\nexport function useTokenDataCombined(tokenAddresses) {\n  const [state, { updateCombinedVolume }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n\n  const volume = state?.combinedVol\n\n  useEffect(() => {\n    async function fetchDatas() {\n      Promise.all(\n        tokenAddresses.map(async (address) => {\n          return await getTokenData(address, ethPrice, ethPriceOld)\n        })\n      )\n        .then((res) => {\n          if (res) {\n            const newVolume = res\n              ? res?.reduce(function (acc, entry) {\n                  acc = acc + parseFloat(entry.oneDayVolumeUSD)\n                  return acc\n                }, 0)\n              : 0\n            updateCombinedVolume(newVolume)\n          }\n        })\n        .catch(() => {\n          console.log('error fetching combined data')\n        })\n    }\n    if (!volume && ethPrice && ethPriceOld) {\n      fetchDatas()\n    }\n  }, [tokenAddresses, ethPrice, ethPriceOld, volume, updateCombinedVolume])\n\n  return volume\n}\n\nexport function useTokenChartDataCombined(tokenAddresses) {\n  const [network] = useNetwork()\n  const [state, { updateChartData }] = useTokenDataContext()\n\n  const datas = useMemo(() => {\n    return (\n      tokenAddresses &&\n      tokenAddresses.reduce(function (acc, address) {\n        acc[address] = state?.[address]?.chartData\n        return acc\n      }, {})\n    )\n  }, [state, tokenAddresses])\n\n  const isMissingData = useMemo(() => Object.values(datas).filter((val) => !val).length > 0, [datas])\n\n  const formattedByDate = useMemo(() => {\n    return (\n      datas &&\n      !isMissingData &&\n      Object.keys(datas).map(function (address) {\n        const dayDatas = datas[address]\n        return dayDatas?.reduce(function (acc, dayData) {\n          acc[dayData.date] = dayData\n          return acc\n        }, {})\n      }, {})\n    )\n  }, [datas, isMissingData])\n\n  useEffect(() => {\n    async function fetchDatas() {\n      Promise.all(\n        tokenAddresses.map(async (address) => {\n          return await getTokenChartData(network, address)\n        })\n      )\n        .then((res) => {\n          res &&\n            res.map((result, i) => {\n              const tokenAddress = tokenAddresses[i]\n              updateChartData(tokenAddress, result)\n              return true\n            })\n        })\n        .catch(() => {\n          console.log('error fetching combined data')\n        })\n    }\n    if (isMissingData) {\n      fetchDatas()\n    }\n  }, [network, isMissingData, tokenAddresses, updateChartData])\n\n  return formattedByDate\n}\n\nexport function useTokenChartData(tokenAddress) {\n  const [network] = useNetwork()\n  const [state, { updateChartData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.chartData\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getTokenChartData(network, tokenAddress)\n        updateChartData(tokenAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [network, chartData, tokenAddress, updateChartData])\n  return chartData\n}\n\n/**\n * get candlestick data for a token - saves in context based on the window and the\n * interval size\n * @param {*} tokenAddress\n * @param {*} timeWindow // a preset time window from constant - how far back to look\n * @param {*} interval  // the chunk size in seconds - default is 1 hour of 3600s\n */\nexport function useTokenPriceData(tokenAddress, timeWindow, interval = 3600) {\n  const [network] = useNetwork()\n  const [state, { updatePriceData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.[timeWindow]?.[interval]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getIntervalTokenData(network, tokenAddress, startTime, interval, latestBlock)\n      updatePriceData(tokenAddress, data, timeWindow, interval)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [network, chartData, interval, timeWindow, tokenAddress, updatePriceData, latestBlock])\n\n  return chartData\n}\n\nexport function useAllTokenData() {\n  const [state] = useTokenDataContext()\n\n  // filter out for only addresses\n  return Object.keys(state)\n    .filter((key) => key !== 'combinedVol')\n    .reduce((res, key) => {\n      res[key] = state[key]\n      return res\n    }, {})\n}\n","import { USER_MINTS_BUNRS_PER_PAIR } from '../apollo/queries'\nimport { getClient } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport { getShareValueOverTime } from '.'\n\nexport const priceOverrides = [\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC\n  '0x6b175474e89094c44da98b954eedeac495271d0f', // DAI\n]\n\ninterface ReturnMetrics {\n  hodleReturn: number // difference in asset values t0 -> t1 with t0 deposit amounts\n  netReturn: number // net return from t0 -> t1\n  xataReturn: number // netReturn - hodlReturn\n  impLoss: number\n  fees: number\n}\n\n// used to calculate returns within a given window bounded by two positions\ninterface Position {\n  pair: any\n  liquidityTokenBalance: number\n  liquidityTokenTotalSupply: number\n  reserve0: number\n  reserve1: number\n  reserveUSD: number\n  token0PriceUSD: number\n  token1PriceUSD: number\n}\n\nconst PRICE_DISCOVERY_START_TIMESTAMP = 1589747086\n\nfunction formatPricesForEarlyTimestamps(position): Position {\n  if (position.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n    if (priceOverrides.includes(position?.pair?.token0.id)) {\n      position.token0PriceUSD = 1\n    }\n    if (priceOverrides.includes(position?.pair?.token1.id)) {\n      position.token1PriceUSD = 1\n    }\n    // WETH price\n    if (position.pair?.token0.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n      position.token0PriceUSD = 203\n    }\n    if (position.pair?.token1.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n      position.token1PriceUSD = 203\n    }\n  }\n  return position\n}\n\nasync function getPrincipalForUserPerPair(network: string, user: string, pairAddress: string) {\n  let usd = 0\n  let amount0 = 0\n  let amount1 = 0\n\n  const { client } = getClient(network)\n  // get all minst and burns to get principal amounts\n  const results = await client.query({\n    query: USER_MINTS_BUNRS_PER_PAIR,\n    variables: {\n      user,\n      pair: pairAddress,\n    },\n  })\n  for (const index in results.data.mints) {\n    const mint = results.data.mints[index]\n    const mintToken0 = mint.pair.token0.id\n    const mintToken1 = mint.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(mintToken0) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount0) * 2\n    } else if (priceOverrides.includes(mintToken1) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount1) * 2\n    } else {\n      usd += parseFloat(mint.amountUSD)\n    }\n    amount0 += parseFloat(mint.amount0)\n    amount1 += parseFloat(mint.amount1)\n  }\n\n  for (const index in results.data.burns) {\n    const burn = results.data.burns[index]\n    const burnToken0 = burn.pair.token0.id\n    const burnToken1 = burn.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(burnToken0) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount0) * 2\n    } else if (priceOverrides.includes(burnToken1) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount1) * 2\n    } else {\n      usd -= parseFloat(burn.amountUSD)\n    }\n\n    amount0 -= parseFloat(burn.amount0)\n    amount1 -= parseFloat(burn.amount1)\n  }\n\n  return { usd, amount0, amount1 }\n}\n\n/**\n * Core algorithm for calculating retursn within one time window.\n * @param positionT0 // users liquidity info and token rates at beginning of window\n * @param positionT1 // '' at the end of the window\n */\nexport function getMetricsForPositionWindow(positionT0: Position, positionT1: Position): ReturnMetrics {\n  positionT0 = formatPricesForEarlyTimestamps(positionT0)\n  positionT1 = formatPricesForEarlyTimestamps(positionT1)\n\n  // calculate ownership at ends of window, for end of window we need original LP token balance / new total supply\n  const t0Ownership = positionT0.liquidityTokenBalance / positionT0.liquidityTokenTotalSupply\n  const t1Ownership = positionT0.liquidityTokenBalance / positionT1.liquidityTokenTotalSupply\n\n  // get starting amounts of token0 and token1 deposited by LP\n  const token0_amount_t0 = t0Ownership * positionT0.reserve0\n  const token1_amount_t0 = t0Ownership * positionT0.reserve1\n\n  // get current token values\n  const token0_amount_t1 = t1Ownership * positionT1.reserve0\n  const token1_amount_t1 = t1Ownership * positionT1.reserve1\n\n  // calculate squares to find imp loss and fee differences\n  const sqrK_t0 = Math.sqrt(token0_amount_t0 * token1_amount_t0)\n  // eslint-disable-next-line eqeqeq\n  const priceRatioT1 = positionT1.token0PriceUSD != 0 ? positionT1.token1PriceUSD / positionT1.token0PriceUSD : 0\n\n  const token0_amount_no_fees = positionT1.token1PriceUSD && priceRatioT1 ? sqrK_t0 * Math.sqrt(priceRatioT1) : 0\n  const token1_amount_no_fees =\n    Number(positionT1.token1PriceUSD) && priceRatioT1 ? sqrK_t0 / Math.sqrt(priceRatioT1) : 0\n  const no_fees_usd =\n    token0_amount_no_fees * positionT1.token0PriceUSD + token1_amount_no_fees * positionT1.token1PriceUSD\n\n  const difference_fees_token0 = token0_amount_t1 - token0_amount_no_fees\n  const difference_fees_token1 = token1_amount_t1 - token1_amount_no_fees\n  const difference_fees_usd =\n    difference_fees_token0 * positionT1.token0PriceUSD + difference_fees_token1 * positionT1.token1PriceUSD\n\n  // calculate USD value at t0 and t1 using initial token deposit amounts for asset return\n  const assetValueT0 = token0_amount_t0 * positionT0.token0PriceUSD + token1_amount_t0 * positionT0.token1PriceUSD\n  const assetValueT1 = token0_amount_t0 * positionT1.token0PriceUSD + token1_amount_t0 * positionT1.token1PriceUSD\n\n  const imp_loss_usd = no_fees_usd - assetValueT1\n  const xata_return = difference_fees_usd + imp_loss_usd\n\n  // get net value change for combined data\n  const netValueT0 = t0Ownership * positionT0.reserveUSD\n  const netValueT1 = t1Ownership * positionT1.reserveUSD\n\n  return {\n    hodleReturn: assetValueT1 - assetValueT0,\n    netReturn: netValueT1 - netValueT0,\n    xataReturn: xata_return,\n    impLoss: imp_loss_usd,\n    fees: difference_fees_usd,\n  }\n}\n\n/**\n * formats data for historical chart for an LPs position in 1 pair over time\n * @param startDateTimestamp // day to start tracking at\n * @param currentPairData // current stat of the pair\n * @param pairSnapshots // history of entries and exits for lp on this pair\n * @param currentETHPrice // current price of eth used for usd conversions\n */\nexport async function getHistoricalPairReturns(\n  network,\n  startDateTimestamp,\n  currentPairData,\n  pairSnapshots,\n  currentETHPrice\n) {\n  // catch case where data not puplated yet\n  if (!currentPairData.createdAtTimestamp) {\n    return []\n  }\n  let dayIndex: number = Math.round(startDateTimestamp / 86400) // get unique day bucket unix\n  const currentDayIndex: number = Math.round(dayjs.utc().unix() / 86400)\n  const sortedPositions = pairSnapshots.sort((a, b) => {\n    return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n  })\n  if (sortedPositions[0].timestamp > startDateTimestamp) {\n    dayIndex = Math.round(sortedPositions[0].timestamp / 86400)\n  }\n\n  const dayTimestamps = []\n  while (dayIndex < currentDayIndex) {\n    // only account for days where this pair existed\n    if (dayIndex * 86400 >= parseInt(currentPairData.createdAtTimestamp)) {\n      dayTimestamps.push(dayIndex * 86400)\n    }\n    dayIndex = dayIndex + 1\n  }\n\n  const shareValues = await getShareValueOverTime(network, currentPairData.id, dayTimestamps)\n  const shareValuesFormatted = {}\n  shareValues.map((share) => {\n    return (shareValuesFormatted[share.timestamp] = share)\n  })\n\n  // set the default position and data\n  let positionT0 = pairSnapshots[0]\n  const formattedHistory = []\n  let netFees = 0\n\n  // keep track of up to date metrics as we parse each day\n  for (const index in dayTimestamps) {\n    // get the bounds on the day\n    const dayTimestamp = dayTimestamps[index]\n    const timestampCeiling = dayTimestamp + 86400\n\n    // for each change in position value that day, create a window and update\n    const dailyChanges = pairSnapshots.filter((snapshot) => {\n      return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n    })\n    for (let i = 0; i < dailyChanges.length; i++) {\n      const positionT1 = dailyChanges[i]\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      netFees = netFees + localReturns.fees\n      positionT0 = positionT1\n    }\n\n    // now treat the end of the day as a hypothetical position\n    let positionT1 = shareValuesFormatted[dayTimestamp + 86400]\n    if (!positionT1) {\n      positionT1 = {\n        pair: currentPairData.id,\n        liquidityTokenBalance: positionT0.liquidityTokenBalance,\n        totalSupply: currentPairData.totalSupply,\n        reserve0: currentPairData.reserve0,\n        reserve1: currentPairData.reserve1,\n        reserveUSD: currentPairData.reserveUSD,\n        token0PriceUSD: currentPairData.token0.derivedETH * currentETHPrice,\n        token1PriceUSD: currentPairData.token1.derivedETH * currentETHPrice,\n      }\n    }\n\n    if (positionT1) {\n      positionT1.liquidityTokenTotalSupply = positionT1.totalSupply\n      positionT1.liquidityTokenBalance = positionT0.liquidityTokenBalance\n      const currentLiquidityValue =\n        (parseFloat(positionT1.liquidityTokenBalance) / parseFloat(positionT1.liquidityTokenTotalSupply)) *\n        parseFloat(positionT1.reserveUSD)\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      const localFees = netFees + localReturns.fees\n\n      formattedHistory.push({\n        date: dayTimestamp,\n        usdValue: currentLiquidityValue,\n        fees: localFees,\n      })\n    }\n  }\n\n  return formattedHistory\n}\n\n/**\n * For a given pair and user, get the return metrics\n * @param user\n * @param pair\n * @param ethPrice\n */\nexport async function getLPReturnsOnPair(network: string, user: string, pair, ethPrice: number, snapshots) {\n  // initialize values\n  const principal = await getPrincipalForUserPerPair(network, user, pair.id)\n  let hodlReturn = 0\n  let netReturn = 0\n  let xataReturn = 0\n  let fees = 0\n\n  snapshots = snapshots.filter((entry) => {\n    return entry.pair.id === pair.id\n  })\n\n  // get data about the current position\n  const currentPosition: Position = {\n    pair,\n    liquidityTokenBalance: snapshots[snapshots.length - 1]?.liquidityTokenBalance,\n    liquidityTokenTotalSupply: pair.totalSupply,\n    reserve0: pair.reserve0,\n    reserve1: pair.reserve1,\n    reserveUSD: pair.reserveUSD,\n    token0PriceUSD: pair.token0.derivedETH * ethPrice,\n    token1PriceUSD: pair.token1.derivedETH * ethPrice,\n  }\n\n  for (const index in snapshots) {\n    // get positions at both bounds of the window\n    const positionT0 = snapshots[index]\n    const positionT1 = parseInt(index) === snapshots.length - 1 ? currentPosition : snapshots[parseInt(index) + 1]\n\n    const results = getMetricsForPositionWindow(positionT0, positionT1)\n    hodlReturn = hodlReturn + results.hodleReturn\n    netReturn = netReturn + results.netReturn\n    xataReturn = xataReturn + results.xataReturn\n    fees = fees + results.fees\n  }\n\n  return {\n    principal,\n    net: {\n      return: netReturn,\n    },\n    xata: {\n      return: xataReturn,\n    },\n    fees: {\n      sum: fees,\n    },\n  }\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { useAllPairData, usePairData } from './PairData'\nimport { getClient } from '../apollo/client'\nimport {\n  USER_TRANSACTIONS,\n  USER_POSITIONS,\n  USER_HISTORY,\n  PAIR_DAY_DATA_BULK,\n  MINING_POSITIONS,\n} from '../apollo/queries'\nimport { useTimeframe, useStartTimestamp, useNetwork } from './Application'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useEthPrice } from './GlobalData'\nimport { getLPReturnsOnPair, getHistoricalPairReturns } from '../utils/returns'\nimport { timeframeOptions } from '../constants'\n\ndayjs.extend(utc)\n\nconst UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\nconst UPDATE_POSITIONS = 'UPDATE_POSITIONS '\nconst UPDATE_MINING_POSITIONS = 'UPDATE_MINING_POSITIONS'\nconst UPDATE_USER_POSITION_HISTORY = 'UPDATE_USER_POSITION_HISTORY'\nconst UPDATE_USER_PAIR_RETURNS = 'UPDATE_USER_PAIR_RETURNS'\n\nconst TRANSACTIONS_KEY = 'TRANSACTIONS_KEY'\nconst POSITIONS_KEY = 'POSITIONS_KEY'\nconst MINING_POSITIONS_KEY = 'MINING_POSITIONS_KEY'\nconst USER_SNAPSHOTS = 'USER_SNAPSHOTS'\nconst USER_PAIR_RETURNS_KEY = 'USER_PAIR_RETURNS_KEY'\n\nconst UserContext = createContext()\n\nfunction useUserContext() {\n  return useContext(UserContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_TRANSACTIONS: {\n      const { account, transactions } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [TRANSACTIONS_KEY]: transactions,\n        },\n      }\n    }\n    case UPDATE_POSITIONS: {\n      const { account, positions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [POSITIONS_KEY]: positions },\n      }\n    }\n    case UPDATE_MINING_POSITIONS: {\n      const { account, miningPositions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [MINING_POSITIONS_KEY]: miningPositions },\n      }\n    }\n    case UPDATE_USER_POSITION_HISTORY: {\n      const { account, historyData } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [USER_SNAPSHOTS]: historyData },\n      }\n    }\n\n    case UPDATE_USER_PAIR_RETURNS: {\n      const { account, pairAddress, data } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [USER_PAIR_RETURNS_KEY]: {\n            ...state?.[account]?.[USER_PAIR_RETURNS_KEY],\n            [pairAddress]: data,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n\n  const updateTransactions = useCallback((account, transactions) => {\n    dispatch({\n      type: UPDATE_TRANSACTIONS,\n      payload: {\n        account,\n        transactions,\n      },\n    })\n  }, [])\n\n  const updatePositions = useCallback((account, positions) => {\n    dispatch({\n      type: UPDATE_POSITIONS,\n      payload: {\n        account,\n        positions,\n      },\n    })\n  }, [])\n\n  const updateMiningPositions = useCallback((account, miningPositions) => {\n    dispatch({\n      type: UPDATE_MINING_POSITIONS,\n      payload: {\n        account,\n        miningPositions,\n      },\n    })\n  }, [])\n\n  const updateUserSnapshots = useCallback((account, historyData) => {\n    dispatch({\n      type: UPDATE_USER_POSITION_HISTORY,\n      payload: {\n        account,\n        historyData,\n      },\n    })\n  }, [])\n\n  const updateUserPairReturns = useCallback((account, pairAddress, data) => {\n    dispatch({\n      type: UPDATE_USER_PAIR_RETURNS,\n      payload: {\n        account,\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  return (\n    <UserContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          { updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns },\n        ],\n        [state, updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns]\n      )}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport function useUserTransactions(account) {\n  const [network] = useNetwork()\n  const [state, { updateTransactions }] = useUserContext()\n  const transactions = state?.[account]?.[TRANSACTIONS_KEY]\n  useEffect(() => {\n    const { client } = getClient(network)\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_TRANSACTIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data) {\n          updateTransactions(account, result?.data)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!transactions && account) {\n      fetchData(account)\n    }\n  }, [network, account, transactions, updateTransactions])\n\n  return transactions || {}\n}\n\n/**\n * Store all the snapshots of liquidity activity for this account.\n * Each snapshot is a moment when an LP position was created or updated.\n * @param {*} account\n */\nexport function useUserSnapshots(account) {\n  const [network] = useNetwork()\n  const [state, { updateUserSnapshots }] = useUserContext()\n  const snapshots = state?.[account]?.[USER_SNAPSHOTS]\n\n  useEffect(() => {\n    const { client } = getClient(network)\n    async function fetchData() {\n      try {\n        let skip = 0\n        let allResults = []\n        let found = false\n        while (!found) {\n          let result = await client.query({\n            query: USER_HISTORY,\n            variables: {\n              skip: skip,\n              user: account,\n            },\n            fetchPolicy: 'cache-first',\n          })\n          allResults = allResults.concat(result.data.liquidityPositionSnapshots)\n          if (result.data.liquidityPositionSnapshots.length < 1000) {\n            found = true\n          } else {\n            skip += 1000\n          }\n        }\n        if (allResults) {\n          updateUserSnapshots(account, allResults)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!snapshots && account) {\n      fetchData()\n    }\n  }, [network, account, snapshots, updateUserSnapshots])\n\n  return snapshots\n}\n\n/**\n * For a given position (data about holding) and user, get the chart\n * data for the fees and liquidity over time\n * @param {*} position\n * @param {*} account\n */\nexport function useUserPositionChart(position, account) {\n  const [network] = useNetwork()\n  const pairAddress = position?.pair?.id\n  const [state, { updateUserPairReturns }] = useUserContext()\n\n  // get oldest date of data to fetch\n  const startDateTimestamp = useStartTimestamp()\n\n  // get users adds and removes on this pair\n  const snapshots = useUserSnapshots(account)\n  const pairSnapshots =\n    snapshots &&\n    position &&\n    snapshots.filter((currentSnapshot) => {\n      return currentSnapshot.pair.id === position.pair.id\n    })\n\n  // get data needed for calculations\n  const currentPairData = usePairData(pairAddress)\n  const [currentETHPrice] = useEthPrice()\n\n  // formatetd array to return for chart data\n  const formattedHistory = state?.[account]?.[USER_PAIR_RETURNS_KEY]?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      let fetchedData = await getHistoricalPairReturns(\n        network,\n        startDateTimestamp,\n        currentPairData,\n        pairSnapshots,\n        currentETHPrice\n      )\n      updateUserPairReturns(account, pairAddress, fetchedData)\n    }\n    if (\n      account &&\n      startDateTimestamp &&\n      pairSnapshots &&\n      !formattedHistory &&\n      currentPairData &&\n      Object.keys(currentPairData).length > 0 &&\n      pairAddress &&\n      currentETHPrice\n    ) {\n      fetchData()\n    }\n  }, [\n    network,\n    account,\n    startDateTimestamp,\n    pairSnapshots,\n    formattedHistory,\n    pairAddress,\n    currentPairData,\n    currentETHPrice,\n    updateUserPairReturns,\n    position.pair.id,\n  ])\n\n  return formattedHistory\n}\n\n/**\n * For each day starting with min(first position timestamp, beginning of time window),\n * get total liquidity supplied by user in USD. Format in array with date timestamps\n * and usd liquidity value.\n */\nexport function useUserLiquidityChart(account) {\n  const [network] = useNetwork()\n  const history = useUserSnapshots(account)\n  // formatetd array to return for chart data\n  const [formattedHistory, setFormattedHistory] = useState()\n\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n  const [activeWindow] = useTimeframe()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    const utcEndTime = dayjs.utc()\n    // based on window, get starttime\n    let utcStartTime\n    switch (activeWindow) {\n      case timeframeOptions.WEEK:\n        utcStartTime = utcEndTime.subtract(1, 'week').startOf('day')\n        break\n      case timeframeOptions.ALL_TIME:\n        utcStartTime = utcEndTime.subtract(1, 'year')\n        break\n      default:\n        utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\n        break\n    }\n    let startTime = utcStartTime.unix() - 1\n    if ((activeWindow && startTime < startDateTimestamp) || !startDateTimestamp) {\n      setStartDateTimestamp(startTime)\n    }\n  }, [activeWindow, startDateTimestamp])\n\n  useEffect(() => {\n    async function fetchData() {\n      let dayIndex = parseInt(startDateTimestamp / 86400) // get unique day bucket unix\n      const currentDayIndex = parseInt(dayjs.utc().unix() / 86400)\n\n      // sort snapshots in order\n      let sortedPositions = history.sort((a, b) => {\n        return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n      })\n      // if UI start time is > first position time - bump start index to this time\n      if (parseInt(sortedPositions[0].timestamp) > dayIndex) {\n        dayIndex = parseInt(parseInt(sortedPositions[0].timestamp) / 86400)\n      }\n\n      const dayTimestamps = []\n      // get date timestamps for all days in view\n      while (dayIndex < currentDayIndex) {\n        dayTimestamps.push(parseInt(dayIndex) * 86400)\n        dayIndex = dayIndex + 1\n      }\n\n      const pairs = history.reduce((pairList, position) => {\n        return [...pairList, position.pair.id]\n      }, [])\n\n      const { client } = getClient(network)\n\n      // get all day datas where date is in this list, and pair is in pair list\n      let {\n        data: { pairDayDatas },\n      } = await client.query({\n        query: PAIR_DAY_DATA_BULK(pairs, startDateTimestamp),\n      })\n\n      const formattedHistory = []\n\n      // map of current pair => ownership %\n      const ownershipPerPair = {}\n      for (const index in dayTimestamps) {\n        const dayTimestamp = dayTimestamps[index]\n        const timestampCeiling = dayTimestamp + 86400\n\n        // cycle through relevant positions and update ownership for any that we need to\n        const relevantPositions = history.filter((snapshot) => {\n          return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n        })\n        for (const index in relevantPositions) {\n          const position = relevantPositions[index]\n          // case where pair not added yet\n          if (!ownershipPerPair[position.pair.id]) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n          // case where more recent timestamp is found for pair\n          if (ownershipPerPair[position.pair.id] && ownershipPerPair[position.pair.id].timestamp < position.timestamp) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n        }\n\n        const relavantDayDatas = Object.keys(ownershipPerPair).map((pairAddress) => {\n          // find last day data after timestamp update\n          const dayDatasForThisPair = pairDayDatas.filter((dayData) => {\n            return dayData.pairAddress === pairAddress\n          })\n          // find the most recent reference to pair liquidity data\n          let mostRecent = dayDatasForThisPair[0]\n          for (const index in dayDatasForThisPair) {\n            const dayData = dayDatasForThisPair[index]\n            if (dayData.date < dayTimestamp && dayData.date > mostRecent.date) {\n              mostRecent = dayData\n            }\n          }\n          return mostRecent\n        })\n\n        // now cycle through pair day datas, for each one find usd value = ownership[address] * reserveUSD\n        const dailyUSD = relavantDayDatas.reduce((totalUSD, dayData) => {\n          if (dayData) {\n            return (totalUSD =\n              totalUSD +\n              (ownershipPerPair[dayData.pairAddress]\n                ? (parseFloat(ownershipPerPair[dayData.pairAddress].lpTokenBalance) / parseFloat(dayData.totalSupply)) *\n                  parseFloat(dayData.reserveUSD)\n                : 0))\n          } else {\n            return totalUSD\n          }\n        }, 0)\n\n        formattedHistory.push({\n          date: dayTimestamp,\n          valueUSD: dailyUSD,\n        })\n      }\n\n      setFormattedHistory(formattedHistory)\n    }\n    if (history && startDateTimestamp && history.length > 0) {\n      fetchData()\n    }\n  }, [network, history, startDateTimestamp])\n\n  return formattedHistory\n}\n\nexport function useUserPositions(account) {\n  const [network] = useNetwork()\n  const [state, { updatePositions }] = useUserContext()\n  const positions = state?.[account]?.[POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n  const [ethPrice] = useEthPrice()\n\n  useEffect(() => {\n    const { client } = getClient(network)\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_POSITIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data?.liquidityPositions) {\n          let formattedPositions = await Promise.all(\n            result?.data?.liquidityPositions.map(async (positionData) => {\n              const returnData = await getLPReturnsOnPair(network, account, positionData.pair, ethPrice, snapshots)\n              return {\n                ...positionData,\n                ...returnData,\n              }\n            })\n          )\n          updatePositions(account, formattedPositions)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!positions && account && ethPrice && snapshots) {\n      fetchData(account)\n    }\n  }, [network, account, positions, updatePositions, ethPrice, snapshots])\n\n  return positions\n}\n\nexport function useMiningPositions(account) {\n  const [network] = useNetwork()\n  const [state, { updateMiningPositions }] = useUserContext()\n  const allPairData = useAllPairData()\n  const miningPositions = state?.[account]?.[MINING_POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n\n  useEffect(() => {\n    const { stakingClient } = getClient(network)\n    async function fetchData(account) {\n      try {\n        let miningPositionData = []\n        let result = await stakingClient.query({\n          query: MINING_POSITIONS(account),\n          fetchPolicy: 'no-cache',\n        })\n        if (!result?.data?.user?.miningPosition) {\n          return\n        }\n        miningPositionData = result.data.user.miningPosition\n        for (const miningPosition of miningPositionData) {\n          const pairAddress = miningPosition.miningPool.pair.id\n          miningPosition.pairData = allPairData[pairAddress]\n        }\n        updateMiningPositions(account, miningPositionData)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    if (!miningPositions && account && snapshots) {\n      fetchData(account)\n    }\n  }, [network, account, miningPositions, updateMiningPositions, snapshots, allPairData])\n  return miningPositions\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: center;\n  align-items: ${({ align }) => align && align};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  justify-content: ${({ justify }) => justify};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)`\n  flex-wrap: ${({ wrap }) => wrap ?? 'nowrap'};\n  margin: -${({ gap }) => gap};\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)`\n  width: fit-content;\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport xata_logo from '../../assets/xata-logo.png'\n\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  60% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`\n\nconst Wrapper = styled.div`\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n\n  ${(props) =>\n    props.fill && !props.height\n      ? css`\n          height: 100vh;\n        `\n      : css`\n          height: 180px;\n        `}\n`\n\nconst AnimatedImg = styled.div`\n  animation: ${pulse} 800ms linear infinite;\n  & > * {\n    width: 72px;\n  }\n`\n\nconst LocalLoader = ({ fill }) => {\n  return (\n    <Wrapper fill={fill}>\n      <AnimatedImg>\n        <img src={ xata_logo } alt=\"loading-icon\" />\n      </AnimatedImg>\n    </Wrapper>\n  )\n}\n\nexport default LocalLoader\n","import React from 'react'\nimport { Link as RebassLink } from 'rebass'\nimport { Link as RouterLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { lighten, darken } from 'polished'\n\nconst WrappedLink = ({ external, children, ...rest }) => (\n  <RebassLink\n    target={external ? '_blank' : null}\n    rel={external ? 'noopener noreferrer' : null}\n    color=\"#2f80ed\"\n    {...rest}\n  >\n    {children}\n  </RebassLink>\n)\n\nWrappedLink.propTypes = {\n  external: PropTypes.bool,\n}\n\nconst Link = styled(WrappedLink)`\n  color: ${({ color, theme }) => (color ? color : theme.link)};\n`\n\nexport default Link\n\nexport const CustomLink = styled(RouterLink)`\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ color, theme }) => (color ? color : theme.link)};\n\n  &:visited {\n    color: ${({ color, theme }) => (color ? lighten(0.1, color) : lighten(0.1, theme.link))};\n  }\n\n  &:hover {\n    cursor: pointer;\n    text-decoration: none;\n    underline: none;\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.link))};\n  }\n`\n\nexport const BasicLink = styled(RouterLink)`\n  text-decoration: none;\n  color: inherit;\n  &:hover {\n    cursor: pointer;\n    text-decoration: none;\n    underline: none;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Box } from 'rebass'\n\nimport Link from './Link'\n\nimport { getUrls } from '../utils'\nimport { useNetwork } from '../contexts/Application'\n\nconst Divider = styled(Box)`\n  height: 1px;\n  background-color: ${({ theme }) => theme.divider};\n`\n\nexport const BlockedWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const BlockedMessageWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.text3};\n  border-radius: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  max-width: 80%;\n`\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  right: 0;\n  border-radius: 3px;\n  height: 16px;\n  width: 16px;\n  padding: 0px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.text1};\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst Hint = ({ children, ...rest }) => (\n  <Text fontSize={16} weight={500} {...rest}>\n    {children}\n  </Text>\n)\n\nconst Address = ({ address, token, ...rest }) => {\n  const [network] = useNetwork()\n  const urls = getUrls(network)\n  return (\n    <Link\n      color=\"button\"\n      href={token ? urls.showToken(address) : urls.showAddress(address)}\n      external\n      style={{ wordBreak: 'break-all' }}\n      {...rest}\n    >\n      {address}\n    </Link>\n  )\n}\n\nexport const Hover = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: ${({ fade }) => fade && '0.7'};\n  }\n`\n\nexport const StyledIcon = styled.div`\n  color: ${({ theme }) => theme.text1};\n`\n\nconst EmptyCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.text1};\n  height: ${({ height }) => height && height};\n`\n\nexport const SideBar = styled.span`\n  display: grid;\n  grid-gap: 24px;\n  position: sticky;\n  top: 4rem;\n`\n\nexport const SubNav = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0;\n  margin-bottom: 2rem;\n`\nexport const SubNavEl = styled.li`\n  list-style: none;\n  display: flex;\n  padding-bottom: 0.5rem;\n  margin-right: 1rem;\n  font-weight: ${({ isActive }) => (isActive ? 600 : 500)};\n  border-bottom: 1px solid rgba(0, 0, 0, 0);\n\n  :hover {\n    cursor: pointer;\n    border-bottom: 1px solid ${({ theme }) => theme.bg3};\n  }\n`\n\nexport const PageWrapper = styled.div`\n  padding-top: 36px;\n  padding-bottom: 80px;\n  min-height: 100vh;\n  @media screen and (max-width: 600px) {\n    & > * {\n      padding: 0 12px;\n    }\n  }\n`\n\nexport const ContentWrapper = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  max-width: 1440px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 2rem;\n  box-sizing: border-box;\n  @media screen and (max-width: 1180px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const ContentWrapperLarge = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  padding: 0 2rem;\n  margin: 0 auto;\n  box-sizing: border-box;\n  max-width: 1440px;\n  width: 100%;\n\n  @media screen and (max-width: 1282px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const FullWrapper = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  max-width: 1440px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 2rem;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 1180px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const FixedMenu = styled.div`\n  z-index: 99;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 1rem;\n  box-sizing: border-box;\n  margin-bottom: 2rem;\n  max-width: 100vw;\n\n  @media screen and (max-width: 800px) {\n    margin-bottom: 0;\n  }\n`\n\nexport { Hint, Divider, Address, EmptyCard }\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from '../../utils/index.js'\nimport EthereumLogo from '../../assets/eth.png'\nimport { chainConfig } from '../../chainConfig'\nimport { useNetwork } from '../../contexts/Application.js'\nimport { ADDRESS_TO_LOGO } from '../../constants/index.js'\n\nconst Inline = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n`\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 50%;\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`\n\nconst StyledEthereumLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  > img {\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n  }\n`\n\nfunction importAllImages(requireContext) {\n  let images = {}\n  requireContext.keys().forEach((item, index) => {\n    images[item.replace('./', '')] = requireContext(item)\n  })\n  return images\n}\n\nexport default function TokenLogo({ address, header = false, size = '24px', ...rest }) {\n  const [network] = useNetwork()\n  const [error, setError] = useState(false)\n\n  const images = importAllImages(require.context('../../assets/coinLogos', false, /\\.(png|jpe?g|svg)$/))\n  useEffect(() => {\n    setError(false)\n  }, [address])\n  if (error) {\n    //try to patch with our own logos\n    if (Object.keys(ADDRESS_TO_LOGO).includes(address)) {\n      return (\n        <Inline>\n          <Image {...rest} alt={''} src={images[`${ADDRESS_TO_LOGO[address]}`]} size={size} />\n        </Inline>\n      )\n    }\n    return <Inline></Inline>\n  }\n\n  // hard coded fixes for trust wallet api issues\n  if (address?.toLowerCase() === '0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb') {\n    address = '0x42456d7084eacf4083f1140d3229471bba2949a8'\n  }\n\n  if (address?.toLowerCase() === '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f') {\n    address = '0xc011a72400e58ecd99ee497cf89e3775d4bd732f'\n  }\n\n  if (address?.toLowerCase() === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n    return (\n      <StyledEthereumLogo size={size} {...rest}>\n        <img\n          src={EthereumLogo}\n          style={{\n            boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.075)',\n            borderRadius: '24px',\n          }}\n          alt=\"\"\n        />\n      </StyledEthereumLogo>\n    )\n  }\n  const { trustwalletChain } = chainConfig[network]\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/${trustwalletChain}/assets/${isAddress(\n    address\n  )}/logo.png`\n  return (\n    <Inline>\n      <Image\n        {...rest}\n        alt={''}\n        src={path}\n        size={size}\n        onError={(event) => {\n          setError(true)\n          event.preventDefault()\n        }}\n      />\n    </Inline>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport TokenLogo from '../TokenLogo'\n\nexport default function DoubleTokenLogo({ a0, a1, size = 24, margin = false }) {\n  const TokenWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\n  `\n\n  const HigherLogo = styled(TokenLogo)`\n    z-index: 2;\n    // background-color: white;\n    border-radius: 50%;\n  `\n\n  const CoveredLogo = styled(TokenLogo)`\n    position: absolute;\n    left: ${({ sizeraw }) => (sizeraw / 2).toString() + 'px'};\n    // background-color: white;\n    border-radius: 50%;\n  `\n\n  return (\n    <TokenWrapper sizeraw={size} margin={margin}>\n      <HigherLogo address={a0} size={size.toString() + 'px'} sizeraw={size} />\n      <CoveredLogo address={a1} size={size.toString() + 'px'} sizeraw={size} />\n    </TokenWrapper>\n  )\n}\n","import { useState, useCallback, useEffect, useRef } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { isAddress } from '../utils'\nimport copy from 'copy-to-clipboard'\nimport { chainConfig } from '../chainConfig'\nimport { useNetwork } from '../contexts/Application'\n\nexport function useColor(tokenAddress, token) {\n  const [network] = useNetwork()\n  const { blockchainName } = chainConfig[network]\n  const [color, setColor] = useState('#2172E5')\n  if (tokenAddress) {\n    const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/${blockchainName}/assets/${isAddress(\n      tokenAddress\n    )}/logo.png`\n    if (path) {\n      Vibrant.from(path).getPalette((err, palette) => {\n        if (palette && palette.Vibrant) {\n          let detectedHex = palette.Vibrant.hex\n          let AAscore = hex(detectedHex, '#FFF')\n          while (AAscore < 3) {\n            detectedHex = shade(0.005, detectedHex)\n            AAscore = hex(detectedHex, '#FFF')\n          }\n          if (token === 'DAI') {\n            setColor('#FAAB14')\n          } else {\n            setColor(detectedHex)\n          }\n        }\n      })\n    }\n  }\n  return color\n}\n\nexport function useCopyClipboard(timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n\nexport const useOutsideClick = (ref, ref2, callback) => {\n  const handleClick = (e) => {\n    if (ref.current && ref.current && !ref2.current) {\n      callback(true)\n    } else if (ref.current && !ref.current.contains(e.target) && ref2.current && !ref2.current.contains(e.target)) {\n      callback(true)\n    } else {\n      callback(false)\n    }\n  }\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n}\n\nexport default function useInterval(callback: () => void, delay: null | number) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current\n      current && current()\n    }\n\n    if (delay !== null) {\n      tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return\n  }, [delay])\n}\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from '../../hooks'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null)\n  const [arrowElement] = useState<HTMLDivElement>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n\n  useInterval(update, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\n          {content}\n          {/* <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement}\n            style={styles.arrow}\n            {...attributes.arrow}\n          /> */}\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { HelpCircle as Question } from 'react-feather'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text2};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport default function QuestionHelper({ text, disabled }: { text: string; disabled?: boolean }) {\n  const [show, setShow] = useState<boolean>(false)\n\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <span style={{ marginLeft: 4 }}>\n      <Tooltip text={text} show={show && !disabled}>\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          <Question size={16} />\n        </QuestionWrapper>\n      </Tooltip>\n    </span>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Tooltip } from '../QuestionHelper'\n\nconst TextWrapper = styled.div`\n  position: relative;\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link }) => (link ? theme.blue : theme.text1)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst FormattedName = ({ text, maxCharacters, margin = false, adjustSize = false, fontSize, link, ...rest }) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return ''\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default FormattedName\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, formattedPercent } from '../../utils'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport FormattedName from '../FormattedName'\nimport QuestionHelper from '../QuestionHelper'\nimport { TYPE } from '../../Theme'\nimport { PAIR_BLACKLIST } from '../../constants'\nimport { AutoColumn } from '../Column'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  opacity: ${({ fade }) => (fade ? '0.6' : '1')};\n\n  > * {\n    justify-content: flex-end;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 740px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr};\n    grid-template-areas: ' name liq vol pool ';\n  }\n\n  @media screen and (min-width: 1080px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 0,\n  VOL: 1,\n  VOL_7DAYS: 3,\n  FEES: 4,\n  APY: 5,\n}\n\nconst FIELD_TO_VALUE = (field, useTracked) => {\n  switch (field) {\n    case SORT_FIELD.LIQ:\n      return useTracked ? 'trackedReserveUSD' : 'reserveUSD'\n    case SORT_FIELD.VOL:\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\n    case SORT_FIELD.VOL_7DAYS:\n      return useTracked ? 'oneWeekVolumeUSD' : 'oneWeekVolumeUntracked'\n    case SORT_FIELD.FEES:\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\n    default:\n      return 'trackedReserveUSD'\n  }\n}\n\nconst formatDataText = (value, trackedValue, supressWarning = false) => {\n  const showUntracked = value !== '$0' && !trackedValue & !supressWarning\n  return (\n    <AutoColumn gap=\"2px\" style={{ opacity: showUntracked ? '0.7' : '1' }}>\n      <div style={{ textAlign: 'right' }}>{value}</div>\n      <TYPE.light fontSize={'9px'} style={{ textAlign: 'right' }}>\n        {showUntracked ? 'untracked' : '  '}\n      </TYPE.light>\n    </AutoColumn>\n  )\n}\n\nfunction PairList({ pairs, color, disbaleLinks, maxItems = 10, useTracked = false }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below740 = useMedia('(max-width: 740px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [pairs])\n\n  useEffect(() => {\n    if (pairs) {\n      let extraPages = 1\n      if (Object.keys(pairs).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(pairs).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, pairs])\n\n  const ListItem = ({ pairAddress, index }) => {\n    const pairData = pairs[pairAddress]\n\n    if (pairData && pairData.token0 && pairData.token1) {\n      const liquidity = formattedNum(\n        !!pairData.trackedReserveUSD ? pairData.trackedReserveUSD : pairData.reserveUSD,\n        true\n      )\n\n      const volume = formattedNum(\n        pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked,\n        true\n      )\n\n      const apy = formattedPercent(\n        ((pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked) * 0.003 * 365 * 100) /\n          (pairData.oneDayVolumeUSD ? pairData.trackedReserveUSD : pairData.reserveUSD)\n      )\n\n      const weekVolume = formattedNum(\n        pairData.oneWeekVolumeUSD ? pairData.oneWeekVolumeUSD : pairData.oneWeekVolumeUntracked,\n        true\n      )\n\n      const fees = formattedNum(\n        pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD * 0.003 : pairData.oneDayVolumeUntracked * 0.003,\n        true\n      )\n\n      return (\n        <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n          <DataText area=\"name\" fontWeight=\"500\">\n            {!below600 && <div style={{ marginRight: '20px', width: '10px' }}>{index}</div>}\n            <DoubleTokenLogo\n              size={below600 ? 16 : 20}\n              a0={pairData.token0.id}\n              a1={pairData.token1.id}\n              margin={!below740}\n            />\n            <CustomLink style={{ marginLeft: '20px', whiteSpace: 'nowrap' }} to={'/pair/' + pairAddress} color={color}>\n              <FormattedName\n                text={pairData.token0.symbol + '-' + pairData.token1.symbol}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </DataText>\n          <DataText area=\"liq\">{formatDataText(liquidity, pairData.trackedReserveUSD)}</DataText>\n          <DataText area=\"vol\">{formatDataText(volume, pairData.oneDayVolumeUSD)}</DataText>\n          {!below1080 && <DataText area=\"volWeek\">{formatDataText(weekVolume, pairData.oneWeekVolumeUSD)}</DataText>}\n          {!below1080 && <DataText area=\"fees\">{formatDataText(fees, pairData.oneDayVolumeUSD)}</DataText>}\n          {!below1080 && (\n            <DataText area=\"apy\">\n              {formatDataText(apy, pairData.oneDayVolumeUSD, pairData.oneDayVolumeUSD === 0)}\n            </DataText>\n          )}\n        </DashGrid>\n      )\n    } else {\n      return ''\n    }\n  }\n\n  const pairList =\n    pairs &&\n    Object.keys(pairs)\n      .filter(\n        (address) => !PAIR_BLACKLIST.includes(address) && (useTracked ? !!pairs[address].trackedReserveUSD : true)\n      )\n      .sort((addressA, addressB) => {\n        const pairA = pairs[addressA]\n        const pairB = pairs[addressB]\n        if (sortedColumn === SORT_FIELD.APY) {\n          const apy0 = parseFloat(pairA.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairA.reserveUSD)\n          const apy1 = parseFloat(pairB.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairB.reserveUSD)\n          return apy0 > apy1 ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n        }\n        return parseFloat(pairA[FIELD_TO_VALUE(sortedColumn, useTracked)]) >\n          parseFloat(pairB[FIELD_TO_VALUE(sortedColumn, useTracked)])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((pairAddress, index) => {\n        return (\n          pairAddress && (\n            <div key={index}>\n              <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} pairAddress={pairAddress} />\n              <Divider />\n            </div>\n          )\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid\n        center={true}\n        disbaleLinks={disbaleLinks}\n        style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <TYPE.main area=\"name\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VOL)\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"volWeek\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.VOL_7DAYS)\n                setSortDirection(sortedColumn !== SORT_FIELD.VOL_7DAYS ? true : !sortDirection)\n              }}\n            >\n              Volume (7d) {sortedColumn === SORT_FIELD.VOL_7DAYS ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"fees\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.FEES)\n                setSortDirection(sortedColumn !== SORT_FIELD.FEES ? true : !sortDirection)\n              }}\n            >\n              Fees (24hr) {sortedColumn === SORT_FIELD.FEES ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"apy\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.APY)\n                setSortDirection(sortedColumn !== SORT_FIELD.APY ? true : !sortDirection)\n              }}\n            >\n              1y Fees / Liquidity {sortedColumn === SORT_FIELD.APY ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n            <QuestionHelper text={'Based on 24hr volume annualized'} />\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!pairList ? <LocalLoader /> : pairList}</List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PairList)\n","import React, { useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { Box, Flex, Text } from 'rebass'\nimport TokenLogo from '../TokenLogo'\nimport { CustomLink } from '../Link'\nimport Row from '../Row'\nimport { Divider } from '..'\n\nimport { formattedNum, formattedPercent } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { withRouter } from 'react-router-dom'\nimport { TOKEN_BLACKLIST } from '../../constants'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 680px) {\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 180px 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol ';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    display: grid;\n    grid-gap: 0.5em;\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol price change';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  text-align: end;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n  color: ${({ theme }) => theme.text1} !important;\n  @media screen and (max-width: 640px) {\n    font-size: 0.85rem;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1} !important;\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 'totalLiquidityUSD',\n  VOL: 'oneDayVolumeUSD',\n  VOL_UT: 'oneDayVolumeUT',\n  SYMBOL: 'symbol',\n  NAME: 'name',\n  PRICE: 'priceUSD',\n  CHANGE: 'priceChangeUSD',\n}\n\n// @TODO rework into virtualized list\nfunction TopTokenList({ tokens, itemMax = 10, useTracked = false }) {\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VOL)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below680 = useMedia('(max-width: 680px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [tokens])\n\n  const formattedTokens = useMemo(() => {\n    return (\n      tokens &&\n      Object.keys(tokens)\n        .filter((key) => {\n          return !TOKEN_BLACKLIST.includes(key)\n        })\n        .map((key) => tokens[key])\n    )\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens && formattedTokens) {\n      let extraPages = 1\n      if (formattedTokens.length % itemMax === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\n    }\n  }, [tokens, formattedTokens, itemMax])\n\n  const filteredList = useMemo(() => {\n    return (\n      formattedTokens &&\n      formattedTokens\n        .sort((a, b) => {\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n          }\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n            ? (sortDirection ? -1 : 1) * 1\n            : (sortDirection ? -1 : 1) * -1\n        })\n        .slice(itemMax * (page - 1), page * itemMax)\n    )\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\n\n  const ListItem = ({ item, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} focus={true}>\n        <DataText area=\"name\" fontWeight=\"500\">\n          <Row>\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\n            <TokenLogo address={item.id} />\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\n              <FormattedName\n                text={below680 ? item.symbol : item.name}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </Row>\n        </DataText>\n        {!below680 && (\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\n            <FormattedName text={item.symbol} maxCharacters={5} />\n          </DataText>\n        )}\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true)}</DataText>\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true)}</DataText>\n        {!below1080 && (\n          <DataText area=\"price\" color=\"text\" fontWeight=\"500\">\n            {formattedNum(item.priceUSD, true)}\n          </DataText>\n        )}\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\n      </DashGrid>\n    )\n  }\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"text\"\n            area=\"name\"\n            fontWeight=\"500\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.NAME)\n              setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection)\n            }}\n          >\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below680 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"symbol\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.SYMBOL)\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\n              }}\n            >\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={() => {\n              setSortedColumn(useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL)\n              setSortDirection(\n                sortedColumn !== (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? true : !sortDirection\n              )\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"price\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.PRICE)\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\n              }}\n            >\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"change\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.CHANGE)\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\n              }}\n            >\n              Price Change (24hrs)\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {filteredList &&\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })}\n      </List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(TopTokenList)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { ChevronDown as Arrow } from 'react-feather'\nimport { TYPE } from '../../Theme'\nimport { StyledIcon } from '..'\n\nconst Wrapper = styled.div`\n  z-index: 20;\n  position: relative;\n  background-color: ${({ theme }) => theme.panelColor};\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \n  width: 100px;\n  padding: 4px 10px;\n  padding-right: 6px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Dropdown = styled.div`\n  position: absolute;\n  top: 34px;\n  padding-top: 40px;\n  width: calc(100% - 40px);\n  background-color: ${({ theme }) => theme.bg1};\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 10px 10px;\n  border-radius: 8px;\n  width: calc(100% - 20px);\n  font-weight: 500;\n  font-size: 1rem;\n  color: black;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ArrowStyled = styled(Arrow)`\n  height: 20px;\n  width: 20px;\n  margin-left: 6px;\n`\n\nconst DropdownSelect = ({ options, active, setActive, color }) => {\n  const [showDropdown, toggleDropdown] = useState(false)\n\n  return (\n    <Wrapper open={showDropdown} color={color}>\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\n        <TYPE.main>{active}</TYPE.main>\n        <StyledIcon>\n          <ArrowStyled />\n        </StyledIcon>\n      </RowBetween>\n      {showDropdown && (\n        <Dropdown>\n          <AutoColumn gap=\"20px\">\n            {Object.keys(options).map((key, index) => {\n              let option = options[key]\n              return (\n                option !== active && (\n                  <Row\n                    onClick={() => {\n                      toggleDropdown(!showDropdown)\n                      setActive(option)\n                    }}\n                    key={index}\n                  >\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\n                  </Row>\n                )\n              )\n            })}\n          </AutoColumn>\n        </Dropdown>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default DropdownSelect\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { formatTime, formattedNum, getUrls } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { useCurrentCurrency, useNetwork } from '../../contexts/Application'\nimport { RowFixed, RowBetween } from '../Row'\n\nimport LocalLoader from '../LocalLoader'\nimport { Box, Flex, Text } from 'rebass'\nimport Link from '../Link'\nimport { Divider, EmptyCard } from '..'\nimport DropdownSelect from '../DropdownSelect'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\nimport { updateNameData } from '../../utils/data'\nimport { chainConfig } from '../../chainConfig'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'txn value time';\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 500px) {\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 780px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther time';\n\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther account time';\n  }\n`\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  user-select: none;\n  text-align: end;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  @media screen and (max-width: 640px) {\n    font-size: 14px;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: right;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 40em) {\n    font-size: 0.85rem;\n  }\n`\n\nconst SortText = styled.button`\n  cursor: pointer;\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\n  outline: none;\n\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'amountUSD',\n  AMOUNT0: 'token0Amount',\n  AMOUNT1: 'token1Amount',\n  TIMESTAMP: 'timestamp',\n}\n\nconst TXN_TYPE = {\n  ALL: 'All',\n  SWAP: 'Swaps',\n  ADD: 'Adds',\n  REMOVE: 'Removes',\n}\n\nconst ITEMS_PER_PAGE = 10\n\nfunction getTransactionType(event, symbol0, symbol1) {\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\n  switch (event) {\n    case TXN_TYPE.ADD:\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.REMOVE:\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.SWAP:\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\n    default:\n      return ''\n  }\n}\n\n// @TODO rework into virtualized list\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\n  const [network] = useNetwork()\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\n  const [filteredItems, setFilteredItems] = useState()\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\n\n  const [currency] = useCurrentCurrency()\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [transactions])\n\n  // parse the txns and format for UI\n  useEffect(() => {\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\n      let newTxns = []\n      if (transactions.mints.length > 0) {\n        transactions.mints.map((mint) => {\n          let newTxn = {}\n          newTxn.hash = mint.transaction.id\n          newTxn.timestamp = mint.transaction.timestamp\n          newTxn.type = TXN_TYPE.ADD\n          newTxn.token0Amount = mint.amount0\n          newTxn.token1Amount = mint.amount1\n          newTxn.account = mint.to\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol\n          newTxn.amountUSD = mint.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.burns.length > 0) {\n        transactions.burns.map((burn) => {\n          let newTxn = {}\n          newTxn.hash = burn.transaction.id\n          newTxn.timestamp = burn.transaction.timestamp\n          newTxn.type = TXN_TYPE.REMOVE\n          newTxn.token0Amount = burn.amount0\n          newTxn.token1Amount = burn.amount1\n          newTxn.account = burn.sender\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol\n          newTxn.amountUSD = burn.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.swaps.length > 0) {\n        transactions.swaps.map((swap) => {\n          const netToken0 = swap.amount0In - swap.amount0Out\n          const netToken1 = swap.amount1In - swap.amount1Out\n\n          let newTxn = {}\n\n          if (netToken0 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol\n            newTxn.token0Amount = Math.abs(netToken0)\n            newTxn.token1Amount = Math.abs(netToken1)\n          } else if (netToken1 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol\n            newTxn.token0Amount = Math.abs(netToken1)\n            newTxn.token1Amount = Math.abs(netToken0)\n          }\n\n          newTxn.hash = swap.transaction.id\n          newTxn.timestamp = swap.transaction.timestamp\n          newTxn.type = TXN_TYPE.SWAP\n\n          newTxn.amountUSD = swap.amountUSD\n          newTxn.account = swap.to\n          return newTxns.push(newTxn)\n        })\n      }\n\n      const filtered = newTxns.filter((item) => {\n        if (txFilter !== TXN_TYPE.ALL) {\n          return item.type === txFilter\n        }\n        return true\n      })\n      setFilteredItems(filtered)\n      let extraPages = 1\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      if (filtered.length === 0) {\n        setMaxPage(1)\n      } else {\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\n      }\n    }\n  }, [transactions, txFilter])\n\n  useEffect(() => {\n    setPage(1)\n  }, [txFilter])\n\n  const filteredList =\n    filteredItems &&\n    filteredItems\n      .sort((a, b) => {\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below780 = useMedia('(max-width: 780px)')\n\n  const { scannerUrl } = chainConfig[network]\n  const urls = getUrls(network)\n  const ListItem = ({ item }) => {\n    return (\n      <DashGrid style={{ height: '48px' }}>\n        <DataText area=\"txn\" fontWeight=\"500\">\n          <Link color={color} external href={urls.showTransaction(item.hash)}>\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\n          </Link>\n        </DataText>\n        <DataText area=\"value\">\n          {currency === 'ETH' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)}\n        </DataText>\n        {!below780 && (\n          <>\n            <DataText area=\"amountOther\">\n              {formattedNum(item.token1Amount) + ' '}{' '}\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n            <DataText area=\"amountToken\">\n              {formattedNum(item.token0Amount) + ' '}{' '}\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n          </>\n        )}\n        {!below1080 && (\n          <DataText area=\"account\">\n            <Link color={color} external href={`https://${scannerUrl}/address/` + item.account}>\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\n            </Link>\n          </DataText>\n        )}\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  return (\n    <>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n        {below780 ? (\n          <RowBetween area=\"txn\">\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\n          </RowBetween>\n        ) : (\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ALL)\n              }}\n              active={txFilter === TXN_TYPE.ALL}\n            >\n              All\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.SWAP)\n              }}\n              active={txFilter === TXN_TYPE.SWAP}\n            >\n              Swaps\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ADD)\n              }}\n              active={txFilter === TXN_TYPE.ADD}\n            >\n              Adds\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.REMOVE)\n              }}\n              active={txFilter === TXN_TYPE.REMOVE}\n            >\n              Removes\n            </SortText>\n          </RowFixed>\n        )}\n\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"textDim\"\n            area=\"value\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below780 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"amountToken\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.AMOUNT0)\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\n              }}\n            >\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        <>\n          {!below780 && (\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area=\"amountOther\"\n                color=\"textDim\"\n                onClick={() => {\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\n                }}\n              >\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\n              </ClickableText>\n            </Flex>\n          )}\n          {!below1080 && (\n            <Flex alignItems=\"center\">\n              <TYPE.body area=\"account\">Account</TYPE.body>\n            </Flex>\n          )}\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"time\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\n              }}\n            >\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        </>\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {!filteredList ? (\n          <LocalLoader />\n        ) : filteredList.length === 0 ? (\n          <EmptyCard>No recent transactions found.</EmptyCard>\n        ) : (\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })\n        )}\n      </List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </>\n  )\n}\n\nexport default TxnList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { createChart } from 'lightweight-charts'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { formattedNum } from '../../utils'\nimport styled from 'styled-components'\nimport { usePrevious } from 'react-use'\nimport { Play } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport { IconWrapper } from '..'\n\ndayjs.extend(utc)\n\nexport const CHART_TYPES = {\n  BAR: 'BAR',\n  AREA: 'AREA',\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n\n// constant height for charts\nconst HEIGHT = 300\n\nconst TradingViewChart = ({\n  type = CHART_TYPES.BAR,\n  data,\n  base,\n  baseChange,\n  field,\n  title,\n  width,\n  useWeekly = false,\n}) => {\n  // pointer to the chart object\n  const [chartCreated, setChartCreated] = useState(false)\n\n  // parse the data and format for tardingview consumption\n  const formattedData = data?.map((entry) => {\n    return {\n      time: dayjs.unix(entry.date).utc().format('YYYY-MM-DD'),\n      value: parseFloat(entry[field]),\n    }\n  })\n\n  // adjust the scale based on the type of chart\n  const topScale = type === CHART_TYPES.AREA ? 0.32 : 0.2\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n  const previousTheme = usePrevious(darkMode)\n\n  // reference for DOM element to create with chart\n  const ref = useRef()\n  // reset the chart if theme switches\n  useEffect(() => {\n    if (chartCreated && previousTheme !== darkMode) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id' + title)\n      let node = document.getElementById('test-id' + title)\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, darkMode, previousTheme, type, title])\n\n  // useEffect(() => {\n  //   if (chartCreated && base !== prevBase) {\n  //     // remove the tooltip element\n  //     let tooltip = document.getElementById('tooltip-id' + title)\n  //     let node = document.getElementById('test-id' + title)\n  //     node.removeChild(tooltip)\n  //     console.log('after node removed: ', node)\n  //     chartCreated.resize(0, 0)\n  //     setChartCreated()\n  //   }\n  // }, [chartCreated, type, title])\n\n  // if no chart created yet, create one with options and add to DOM manually\n  let baseIsEqual\n  if (type === CHART_TYPES.AREA) {\n    baseIsEqual = base === formattedData[formattedData.length - 1].value\n  } else if (type === CHART_TYPES.BAR) {\n    baseIsEqual =\n      Math.round(base * 100) / 100 ===\n      formattedData[formattedData.length - 1].value + formattedData[formattedData.length - 2].value\n  }\n  useEffect(() => {\n    if (!chartCreated && formattedData && baseIsEqual) {\n      var chart = createChart(ref.current, {\n        width: width,\n        height: HEIGHT,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: topScale,\n            bottom: 0,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n        },\n        grid: {\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n            visible: false,\n          },\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          vertLine: {\n            visible: true,\n            style: 0,\n            width: 2,\n            color: 'rgba(32, 38, 46, 0.1)',\n            labelVisible: false,\n          },\n        },\n        localization: {\n          priceFormatter: (val) => formattedNum(val, true),\n        },\n      })\n\n      var series =\n        type === CHART_TYPES.BAR\n          ? chart.addHistogramSeries({\n              color: '#f88f01',\n              priceFormat: {\n                type: 'volume',\n              },\n              scaleMargins: {\n                top: 0.32,\n                bottom: 0,\n              },\n              lineColor: '#f88f01',\n              lineWidth: 3,\n            })\n          : chart.addAreaSeries({\n              topColor: '#f88f01',\n              bottomColor: 'rgba(248, 143, 1, 0)',\n              lineColor: '#f88f01',\n              lineWidth: 3,\n            })\n\n      series.setData(formattedData)\n      var toolTip = document.createElement('div')\n      toolTip.setAttribute('id', 'tooltip-id' + title)\n      toolTip.className = darkMode ? 'three-line-legend-dark' : 'three-line-legend'\n      ref.current.appendChild(toolTip)\n      toolTip.style.display = 'block'\n      toolTip.style.fontWeight = '500'\n      toolTip.style.left = -4 + 'px'\n      toolTip.style.top = '-' + 8 + 'px'\n      toolTip.style.backgroundColor = 'transparent'\n\n      // format numbers\n      let percentChange = baseChange?.toFixed(2)\n      let formattedPercentChange = (percentChange > 0 ? '+' : '') + percentChange + '%'\n      let color = percentChange >= 0 ? 'green' : 'red'\n\n      // get the title of the chart\n      function setLastBarText() {\n        toolTip.innerHTML =\n          `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title} ${\n            type === CHART_TYPES.BAR && !useWeekly ? '(24hr)' : ''\n          }</div>` +\n          `<div style=\"font-size: 22px; margin: 4px 0px; color:${textColor}\" >` +\n          formattedNum(base ?? 0, true) +\n          `<span style=\"margin-left: 10px; font-size: 16px; color: ${color};\">${formattedPercentChange}</span>` +\n          '</div>'\n      }\n      setLastBarText()\n\n      // update the title when hovering on the chart\n      chart.subscribeCrosshairMove(function (param) {\n        if (\n          param === undefined ||\n          param.time === undefined ||\n          param.point.x < 0 ||\n          param.point.x > width ||\n          param.point.y < 0 ||\n          param.point.y > HEIGHT\n        ) {\n          setLastBarText()\n        } else {\n          let dateStr = useWeekly\n            ? dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\n                .startOf('week')\n                .format('MMMM D, YYYY') +\n              '-' +\n              dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\n                .endOf('week')\n                .format('MMMM D, YYYY')\n            : dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day).format('MMMM D, YYYY')\n          var price = param.seriesPrices.get(series)\n\n          toolTip.innerHTML =\n            `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title}</div>` +\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\n            formattedNum(price, true) +\n            '</div>' +\n            '<div>' +\n            dateStr +\n            '</div>'\n        }\n      })\n\n      chart.timeScale().fitContent()\n\n      setChartCreated(chart)\n    }\n  }, [\n    base,\n    baseChange,\n    chartCreated,\n    darkMode,\n    data,\n    formattedData,\n    textColor,\n    title,\n    topScale,\n    type,\n    useWeekly,\n    width,\n    baseIsEqual,\n  ])\n\n  // responsiveness\n  useEffect(() => {\n    if (width) {\n      chartCreated && chartCreated.resize(width, HEIGHT)\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\n    }\n  }, [chartCreated, width])\n\n  return (\n    <Wrapper>\n      <div ref={ref} id={'test-id' + title} />\n      <IconWrapper>\n        <Play\n          onClick={() => {\n            chartCreated && chartCreated.timeScale().fitContent()\n          }}\n        />\n      </IconWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TradingViewChart\n","import React, { useState, useMemo, useEffect, useRef } from 'react'\nimport { ResponsiveContainer } from 'recharts'\nimport { timeframeOptions } from '../../constants'\nimport { useGlobalChartData, useGlobalData, useMEVChartData } from '../../contexts/GlobalData'\nimport { useMedia } from 'react-use'\nimport DropdownSelect from '../DropdownSelect'\nimport TradingViewChart, { CHART_TYPES } from '../TradingviewChart'\n// import { RowFixed } from '../Row'\n// import { OptionButton } from '../ButtonStyled'\nimport { getTimeframe, getPercentChange } from '../../utils'\n// import { TYPE } from '../../Theme'\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  MEV: 'MEV',\n}\n\nconst VOLUME_WINDOW = {\n  WEEKLY: 'WEEKLY',\n  DAYS: 'DAYS',\n}\nconst GlobalChart = ({ display }) => {\n  // chart options\n  const [chartView, setChartView] = useState(\n    display === 'volume' ? CHART_VIEW.VOLUME : display === 'liquidity' ? CHART_VIEW.LIQUIDITY : CHART_VIEW.MEV\n  )\n\n  // time window and window size for chart\n  const timeWindow = timeframeOptions.ALL_TIME\n  // const [volumeWindow, setVolumeWindow] = useState(VOLUME_WINDOW.DAYS)\n  const [volumeWindow] = useState(VOLUME_WINDOW.DAYS)\n\n  // global historical data\n  const [dailyData, weeklyData] = useGlobalChartData()\n  const [dailyMEVData] = useMEVChartData()\n  const latestTotalMEV = dailyMEVData?.[dailyMEVData.length - 1].totalUnusedSlippageUSD\n  const previousTotalMEV = dailyMEVData?.[dailyMEVData.length - 2].totalUnusedSlippageUSD\n  const latestMEVChange = getPercentChange(latestTotalMEV, previousTotalMEV)\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD, oneWeekVolume, weeklyVolumeChange } =\n    useGlobalData()\n\n  // based on window, get starttim\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const chartDataFiltered = useMemo(() => {\n    let currentData = volumeWindow === VOLUME_WINDOW.DAYS ? dailyData : weeklyData\n    return (\n      currentData &&\n      Object.keys(currentData)\n        ?.map((key) => {\n          let item = currentData[key]\n          if (item.date > utcStartTime) {\n            return item\n          } else {\n            return true\n          }\n        })\n        .filter((item) => {\n          return !!item\n        })\n    )\n  }, [dailyData, utcStartTime, volumeWindow, weeklyData])\n  const below800 = useMedia('(max-width: 800px)')\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  return chartDataFiltered ? (\n    <>\n      {below800 && (\n        <DropdownSelect options={CHART_VIEW} active={chartView} setActive={setChartView} color={'#f88f01'} />\n      )}\n\n      {chartDataFiltered && chartView === CHART_VIEW.LIQUIDITY && (\n        <ResponsiveContainer aspect={60 / 28} ref={ref}>\n          <TradingViewChart\n            data={dailyData}\n            base={totalLiquidityUSD}\n            baseChange={liquidityChangeUSD}\n            title=\"Liquidity\"\n            field=\"totalLiquidityUSD\"\n            width={width}\n            type={CHART_TYPES.AREA}\n          />\n        </ResponsiveContainer>\n      )}\n      {chartDataFiltered && chartView === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={60 / 28}>\n          <TradingViewChart\n            data={chartDataFiltered}\n            base={volumeWindow === VOLUME_WINDOW.WEEKLY ? oneWeekVolume : oneDayVolumeUSD}\n            baseChange={volumeWindow === VOLUME_WINDOW.WEEKLY ? weeklyVolumeChange : volumeChangeUSD}\n            title={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'Volume (7d)' : 'Volume'}\n            field={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'weeklyVolumeUSD' : 'dailyVolumeUSD'}\n            width={width}\n            type={CHART_TYPES.BAR}\n            // useWeekly={volumeWindow === VOLUME_WINDOW.WEEKLY}\n          />\n        </ResponsiveContainer>\n      )}\n      {dailyMEVData && chartView === CHART_VIEW.MEV && (\n        <ResponsiveContainer aspect={60 / 28}>\n          <TradingViewChart\n            data={dailyMEVData}\n            base={parseFloat(latestTotalMEV)}\n            baseChange={latestMEVChange}\n            title=\"Cumulative MEV Protected\"\n            field=\"totalUnusedSlippageUSD\"\n            width={width}\n            type={CHART_TYPES.AREA}\n          />\n        </ResponsiveContainer>\n      )}\n      {/* {display === 'volume' && (\n        <RowFixed\n          style={{\n            bottom: '70px',\n            position: 'absolute',\n            left: '20px',\n            zIndex: 10,\n          }}\n        >\n          <OptionButton\n            active={volumeWindow === VOLUME_WINDOW.DAYS}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.DAYS)}\n          >\n            <TYPE.body>D</TYPE.body>\n          </OptionButton>\n          <OptionButton\n            style={{ marginLeft: '4px' }}\n            active={volumeWindow === VOLUME_WINDOW.WEEKLY}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.WEEKLY)}\n          >\n            <TYPE.body>W</TYPE.body>\n          </OptionButton>\n        </RowFixed>\n      )} */}\n    </>\n  ) : (\n    ''\n  )\n}\n\nexport default GlobalChart\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowFixed } from '../Row'\nimport TokenLogo from '../TokenLogo'\nimport { Search as SearchIcon, X } from 'react-feather'\nimport { BasicLink } from '../Link'\n\nimport { useAllTokenData, useTokenData } from '../../contexts/TokenData'\nimport { useAllPairData, usePairData } from '../../contexts/PairData'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { useMedia } from 'react-use'\nimport { useAllPairsInXata, useAllTokensInXata } from '../../contexts/GlobalData'\nimport { useNetwork } from '../../contexts/Application'\nimport { TOKEN_BLACKLIST, PAIR_BLACKLIST } from '../../constants'\n\nimport { transparentize } from 'polished'\nimport { getClient } from '../../apollo/client'\nimport { PAIR_SEARCH, TOKEN_SEARCH } from '../../apollo/queries'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\nimport { updateNameData } from '../../utils/data'\n\nconst Container = styled.div`\n  height: 48px;\n  z-index: 30;\n  position: relative;\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 12px 16px;\n  border-radius: 12px;\n  background: ${({ theme, small, open }) => (small ? (open ? theme.bg6 : 'none') : transparentize(0.4, theme.bg6))};\n  border-bottom-right-radius: ${({ open }) => (open ? '0px' : '12px')};\n  border-bottom-left-radius: ${({ open }) => (open ? '0px' : '12px')};\n  z-index: 9999;\n  width: 100%;\n  min-width: 300px;\n  box-sizing: border-box;\n  box-shadow: ${({ open, small }) =>\n    !open && !small\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n      : 'none'};\n  @media screen and (max-width: 500px) {\n    background: ${({ theme }) => theme.bg6};\n    box-shadow: ${({ open }) =>\n      !open\n        ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n        : 'none'};\n  }\n`\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  width: 100%;\n  color: ${({ theme }) => theme.text1};\n  font-size: ${({ large }) => (large ? '20px' : '14px')};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst SearchIconLarge = styled(SearchIcon)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  pointer-events: none;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst CloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  color: ${({ theme }) => theme.text3};\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Menu = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 100%;\n  top: 50px;\n  max-height: 540px;\n  overflow: auto;\n  left: 0;\n  padding-bottom: 20px;\n  background: ${({ theme }) => theme.bg6};\n  border-bottom-right-radius: 12px;\n  border-bottom-left-radius: 12px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n`\n\nconst MenuItem = styled(Row)`\n  padding: 1rem;\n  font-size: 0.85rem;\n  & > * {\n    margin-right: 6px;\n  }\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst Heading = styled(Row)`\n  padding: 1rem;\n  display: ${({ hide = false }) => hide && 'none'};\n`\n\nconst Gray = styled.span`\n  color: #888d9b;\n`\n\nconst Blue = styled.span`\n  color: #2172e5;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Search = ({ small = false }) => {\n  let allTokens = useAllTokensInXata()\n  const allTokenData = useAllTokenData()\n\n  let allPairs = useAllPairsInXata()\n  const allPairData = useAllPairData()\n\n  const [showMenu, toggleMenu] = useState(false)\n  const [value, setValue] = useState('')\n  const [, toggleShadow] = useState(false)\n  const [, toggleBottomShadow] = useState(false)\n\n  // fetch new data on tokens and pairs if needed\n  useTokenData(value)\n  usePairData(value)\n\n  const below700 = useMedia('(max-width: 700px)')\n  const below470 = useMedia('(max-width: 470px)')\n  const below410 = useMedia('(max-width: 410px)')\n\n  useEffect(() => {\n    if (value !== '') {\n      toggleMenu(true)\n    } else {\n      toggleMenu(false)\n    }\n  }, [value])\n\n  const [searchedTokens, setSearchedTokens] = useState([])\n  const [searchedPairs, setSearchedPairs] = useState([])\n  const [network] = useNetwork()\n  useEffect(() => {\n    async function fetchData() {\n      const { client } = getClient(network)\n      try {\n        if (value?.length > 0) {\n          let tokens = await client.query({\n            query: TOKEN_SEARCH,\n            variables: {\n              value: value ? value.toUpperCase() : '',\n              id: value,\n            },\n          })\n\n          let pairs = await client.query({\n            query: PAIR_SEARCH,\n            variables: {\n              tokens: tokens.data.asSymbol?.map((t) => t.id),\n              id: value,\n            },\n          })\n\n          setSearchedPairs(\n            updateNameData(pairs.data.as0)\n              .concat(updateNameData(pairs.data.as1))\n              .concat(updateNameData(pairs.data.asAddress))\n          )\n          const foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName)\n          setSearchedTokens(foundTokens)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    fetchData()\n  }, [value, network])\n\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n  }\n\n  // add the searched tokens to the list if not found yet\n  allTokens = allTokens.concat(\n    searchedTokens.filter((searchedToken) => {\n      let included = false\n      updateNameData()\n      allTokens.map((token) => {\n        if (token.id === searchedToken.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniqueTokens = []\n  let found = {}\n  allTokens &&\n    allTokens.map((token) => {\n      if (!found[token.id]) {\n        found[token.id] = true\n        uniqueTokens.push(token)\n      }\n      return true\n    })\n\n  allPairs = allPairs.concat(\n    searchedPairs.filter((searchedPair) => {\n      let included = false\n      allPairs.map((pair) => {\n        if (pair.id === searchedPair.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniquePairs = []\n  let pairsFound = {}\n  allPairs &&\n    allPairs.map((pair) => {\n      if (!pairsFound[pair.id]) {\n        pairsFound[pair.id] = true\n        uniquePairs.push(pair)\n      }\n      return true\n    })\n\n  const filteredTokenList = useMemo(() => {\n    return uniqueTokens\n      ? uniqueTokens\n          .sort((a, b) => {\n            const tokenA = allTokenData[a.id]\n            const tokenB = allTokenData[b.id]\n            if (tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1\n            }\n            if (tokenA?.oneDayVolumeUSD && !tokenB?.oneDayVolumeUSD) {\n              return -1\n            }\n            if (!tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n              return tokenA?.totalLiquidity > tokenB?.totalLiquidity ? -1 : 1\n            }\n            return 1\n          })\n          .filter((token) => {\n            if (TOKEN_BLACKLIST.includes(token.id)) {\n              return false\n            }\n            const regexMatches = Object.keys(token).map((tokenEntryKey) => {\n              const isAddress = value.slice(0, 2) === '0x'\n              if (tokenEntryKey === 'id' && isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (tokenEntryKey === 'symbol' && !isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (tokenEntryKey === 'name' && !isAddress) {\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              return false\n            })\n            return regexMatches.some((m) => m)\n          })\n      : []\n  }, [allTokenData, uniqueTokens, value])\n\n  const filteredPairList = useMemo(() => {\n    return uniquePairs\n      ? uniquePairs\n          .sort((a, b) => {\n            const pairA = allPairData[a.id]\n            const pairB = allPairData[b.id]\n            if (pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\n              return parseFloat(pairA.trackedReserveETH) > parseFloat(pairB.trackedReserveETH) ? -1 : 1\n            }\n            if (pairA?.trackedReserveETH && !pairB?.trackedReserveETH) {\n              return -1\n            }\n            if (!pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\n              return 1\n            }\n            return 0\n          })\n          .filter((pair) => {\n            if (PAIR_BLACKLIST.includes(pair.id)) {\n              return false\n            }\n            if (value && value.includes(' ')) {\n              const pairA = value.split(' ')[0]?.toUpperCase()\n              const pairB = value.split(' ')[1]?.toUpperCase()\n              return (\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n              )\n            }\n            if (value && value.includes('-')) {\n              const pairA = value.split('-')[0]?.toUpperCase()\n              const pairB = value.split('-')[1]?.toUpperCase()\n              return (\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n              )\n            }\n            const regexMatches = Object.keys(pair).map((field) => {\n              const isAddress = value.slice(0, 2) === '0x'\n              if (field === 'id' && isAddress) {\n                return pair[field].match(new RegExp(escapeRegExp(value), 'i'))\n              }\n              if (field === 'token0') {\n                return (\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n                )\n              }\n              if (field === 'token1') {\n                return (\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n                )\n              }\n              return false\n            })\n            return regexMatches.some((m) => m)\n          })\n      : []\n  }, [allPairData, uniquePairs, value])\n\n  useEffect(() => {\n    if (Object.keys(filteredTokenList).length > 2) {\n      toggleShadow(true)\n    } else {\n      toggleShadow(false)\n    }\n  }, [filteredTokenList])\n\n  useEffect(() => {\n    if (Object.keys(filteredPairList).length > 2) {\n      toggleBottomShadow(true)\n    } else {\n      toggleBottomShadow(false)\n    }\n  }, [filteredPairList])\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [pairsShown, setPairsShown] = useState(3)\n\n  function onDismiss() {\n    setPairsShown(3)\n    setTokensShown(3)\n    toggleMenu(false)\n    setValue('')\n  }\n\n  // refs to detect clicks outside modal\n  const wrapperRef = useRef()\n  const menuRef = useRef()\n\n  const handleClick = (e) => {\n    if (\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\n    ) {\n      setPairsShown(3)\n      setTokensShown(3)\n      toggleMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n\n  return (\n    <Container small={small}>\n      <Wrapper open={showMenu} shadow={true} small={small}>\n        <Input\n          large={!small}\n          type={'text'}\n          ref={wrapperRef}\n          placeholder={\n            small\n              ? ''\n              : below410\n              ? 'Search...'\n              : below470\n              ? 'Search XATA...'\n              : below700\n              ? 'Search pairs and tokens...'\n              : 'Search XATA pairs and tokens...'\n          }\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          onFocus={() => {\n            if (!showMenu) {\n              toggleMenu(true)\n            }\n          }}\n        />\n        {!showMenu ? <SearchIconLarge /> : <CloseIcon onClick={() => toggleMenu(false)} />}\n      </Wrapper>\n      <Menu hide={!showMenu} ref={menuRef}>\n        <Heading>\n          <Gray>Pairs</Gray>\n        </Heading>\n        <div>\n          {filteredPairList && Object.keys(filteredPairList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredPairList &&\n            filteredPairList.slice(0, pairsShown).map((pair) => {\n              //format incorrect names\n              updateNameData(pair)\n              return (\n                <BasicLink to={'/pair/' + pair.id} key={pair.id} onClick={onDismiss}>\n                  <MenuItem>\n                    <DoubleTokenLogo a0={pair?.token0?.id} a1={pair?.token1?.id} margin={true} />\n                    <TYPE.body style={{ marginLeft: '10px' }}>\n                      {pair.token0.symbol + '-' + pair.token1.symbol} Pair\n                    </TYPE.body>\n                  </MenuItem>\n                </BasicLink>\n              )\n            })}\n          <Heading\n            hide={!(Object.keys(filteredPairList).length > 3 && Object.keys(filteredPairList).length >= pairsShown)}\n          >\n            <Blue\n              onClick={() => {\n                setPairsShown(pairsShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n        <Heading>\n          <Gray>Tokens</Gray>\n        </Heading>\n        <div>\n          {Object.keys(filteredTokenList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredTokenList.slice(0, tokensShown).map((token) => {\n            // update displayed names\n            updateNameData({ token0: token })\n            return (\n              <BasicLink to={'/token/' + token.id} key={token.id} onClick={onDismiss}>\n                <MenuItem>\n                  <RowFixed>\n                    <TokenLogo address={token.id} style={{ marginRight: '10px' }} />\n                    <FormattedName text={token.name} maxCharacters={20} style={{ marginRight: '6px' }} />\n                    (<FormattedName text={token.symbol} maxCharacters={6} />)\n                  </RowFixed>\n                </MenuItem>\n              </BasicLink>\n            )\n          })}\n\n          <Heading\n            hide={!(Object.keys(filteredTokenList).length > 3 && Object.keys(filteredTokenList).length >= tokensShown)}\n          >\n            <Blue\n              onClick={() => {\n                setTokensShown(tokensShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n      </Menu>\n    </Container>\n  )\n}\n\nexport default Search\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ChevronDown as Arrow } from 'react-feather'\n\nconst SelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n`\n\nconst Select = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  vertical-align: center;\n  background: ${({ theme }) => theme.concreteGray};\n  justify-self: end;\n  border-radius: 20px;\n  padding: 8px;\n  color: ${({ theme }) => theme.text1};\n  justify-self: end;\n  &:hover {\n    cursor: pointer;\n  }\n`\nconst SelectText = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  padding: 0 8px 0 8px;\n`\n\nconst OptionsWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background: ${({ theme }) => theme.concreteGray};\n  transform: translate(0, 8px);\n  width: 250px;\n  padding: 8px;\n  border-radius: 20px;\n  justify-content: end;\n  display: ${(props) => (props.isShow ? 'block' : 'none')};\n  z-index: 9999;\n  opacity: 1;\n`\n\nconst Option = styled.div`\n  padding: 8px 0 8px 0;\n  font-size: 16px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return\n      }\n      handler(event)\n    }\n    document.addEventListener('mousedown', listener)\n    document.addEventListener('touchstart', listener)\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  }, [ref, handler])\n}\n\nconst CustomSelect = ({ options, persistedValue, labels, onChange }) => {\n  const ref = useRef()\n  const [label, setLabel] = useState(options[0])\n  const [isShow, setIsShow] = useState(false)\n  useOnClickOutside(ref, () => setIsShow(false))\n\n  let value\n  if (persistedValue) {\n    value = labels[options.indexOf(persistedValue)]\n  }\n\n  return (\n    <div ref={ref} style={{ position: 'relative' }}>\n      <SelectContainer>\n        <Select onClick={() => setIsShow(!isShow)}>\n          <SelectText>{persistedValue ? value : label}</SelectText>\n          <Arrow size={20} />\n        </Select>\n      </SelectContainer>\n      <OptionsWrapper\n        ref={ref}\n        isShow={isShow}\n        onMouseLeave={() => {\n          setIsShow(false)\n        }}\n      >\n        {options.map((option, index) => (\n          <Option\n            key={option}\n            onClick={() => {\n              if (option) onChange(option)\n              setLabel(labels[index])\n              setIsShow(false)\n            }}\n            value={persistedValue}\n          >\n            {labels[index]}\n          </Option>\n        ))}\n      </OptionsWrapper>\n    </div>\n  )\n}\n\nexport default CustomSelect\n","import { Box as RebassBox } from 'rebass'\nimport styled, { css } from 'styled-components'\n\nconst panelPseudo = css`\n  :after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    height: 10px;\n  }\n\n  @media only screen and (min-width: 40em) {\n    :after {\n      content: unset;\n    }\n  }\n`\n\nconst Panel = styled(RebassBox)`\n  position: relative;\n  background-color: ${({ theme }) => theme.advancedBG};\n  padding: 1.25rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.05); /* box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.01), 0px 16px 24px rgba(0, 0, 0, 0.01), 0px 24px 32px rgba(0, 0, 0, 0.01); */\n  :hover {\n    cursor: ${({ hover }) => hover && 'pointer'};\n    border: ${({ hover, theme }) => hover && '1px solid' + theme.bg5};\n  }\n\n  ${(props) => props.background && `background-color: ${props.theme.advancedBG};`}\n\n  ${(props) => (props.area ? `grid-area: ${props.area};` : null)}\n\n  ${(props) =>\n    props.grouped &&\n    css`\n      @media only screen and (min-width: 40em) {\n        &:first-of-type {\n          border-radius: 20px 20px 0 0;\n        }\n        &:last-of-type {\n          border-radius: 0 0 20px 20px;\n        }\n      }\n    `}\n\n  ${(props) =>\n    props.rounded &&\n    css`\n      border-radius: 8px;\n      @media only screen and (min-width: 40em) {\n        border-radius: 10px;\n      }\n    `};\n\n  ${(props) => !props.last && panelPseudo}\n`\n\nexport default Panel\n\n// const Panel = styled.div`\n//   width: 100%;\n//   height: 100%;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: flex-start;\n//   border-radius: 12px;\n//   background-color: ${({ theme }) => theme.advancedBG};\n//   padding: 1.25rem;\n//   box-sizing: border-box;\n//   box-shadow: 0 1.1px 2.8px -9px rgba(0, 0, 0, 0.008), 0 2.7px 6.7px -9px rgba(0, 0, 0, 0.012),\n//     0 5px 12.6px -9px rgba(0, 0, 0, 0.015), 0 8.9px 22.6px -9px rgba(0, 0, 0, 0.018),\n//     0 16.7px 42.2px -9px rgba(0, 0, 0, 0.022), 0 40px 101px -9px rgba(0, 0, 0, 0.03);\n// `\n","import React from 'react'\nimport styled from 'styled-components'\nimport { TYPE } from '../../Theme'\nimport { RowFixed } from '../Row'\n\nconst StyleCheckbox = styled.input`\n  background: ${({ theme }) => theme.bg2};\n\n  :before {\n    background: #f35429;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ButtonText = styled(TYPE.main)`\n  cursor: pointer;\n  :hover {\n    opacity: 0.6;\n  }\n`\n\nconst CheckBox = ({ checked, setChecked, text }) => {\n  return (\n    <RowFixed>\n      <StyleCheckbox name=\"checkbox\" type=\"checkbox\" checked={checked} onChange={setChecked} />\n      <ButtonText ml={'4px'} onClick={setChecked}>\n        {text}\n      </ButtonText>\n    </RowFixed>\n  )\n}\n\nexport default CheckBox\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport styled from 'styled-components'\n\nimport { AutoRow, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport PairList from '../components/PairList'\nimport TopTokenList from '../components/TokenList'\nimport TxnList from '../components/TxnList'\nimport GlobalChart from '../components/GlobalChart'\nimport Search from '../components/Search'\nimport CustomSelect from '../components/CustomSelect'\n\nimport { useNetwork } from '../contexts/Application'\nimport { useGlobalData, useGlobalTransactions, useMEVChartData, useGlobalChartData } from '../contexts/GlobalData'\nimport { useAllPairData } from '../contexts/PairData'\nimport { useMedia, usePrevious } from 'react-use'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { formattedNum, formattedPercent } from '../utils'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport { CustomLink } from '../components/Link'\n\nimport { PageWrapper, ContentWrapper } from '../components'\nimport CheckBox from '../components/Checkbox'\nimport QuestionHelper from '../components/QuestionHelper'\n\nconst ListOptions = styled(AutoRow)`\n  height: 40px;\n  width: 100%;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  @media screen and (max-width: 640px) {\n    font-size: 1rem;\n  }\n`\n\nconst GridRow = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 6px;\n  align-items: start;\n  justify-content: space-between;\n`\n\nfunction GlobalPage() {\n  // get data for lists and totals\n  const [network, updateNetwork] = useNetwork()\n  const [, updateMEVChart] = useMEVChartData()\n  const [, , updateChart] = useGlobalChartData()\n  const allPairs = useAllPairData()\n  const allTokens = useAllTokenData()\n  const transactions = useGlobalTransactions()\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD } = useGlobalData()\n  // breakpoints\n  const below800 = useMedia('(max-width: 800px)')\n\n  // scrolling refs\n  useEffect(() => {\n    document.querySelector('body').scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  // for tracked data on pairs\n  const [useTracked, setUseTracked] = useState(true)\n\n  const prevNetwork = usePrevious(network)\n  const onChange = (network) => {\n    if (prevNetwork !== network) {\n      updateNetwork(network)\n      updateMEVChart(undefined)\n      updateChart(undefined)\n    }\n  }\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, '#f88f01')} />\n      <ContentWrapper>\n        <div>\n          <AutoColumn gap=\"24px\" style={{ paddingBottom: '24px' }}>\n            <AutoRow gap=\"6px\">\n              <TYPE.largeHeader>{below800 ? 'XATA Analytics' : 'XATA Analytics'}</TYPE.largeHeader>\n              <CustomSelect\n                options={['BINANCE_SMART_CHAIN', 'POLYGON']}\n                labels={['Binance Smart Chain', 'Polygon']}\n                persistedValue={network}\n                onChange={onChange}\n              />\n            </AutoRow>\n            <Search />\n          </AutoColumn>\n          {below800 && ( // additional mobile card that shows on top of charts\n            <Box mb={20}>\n              <Panel>\n                <Box>\n                  <AutoColumn gap=\"36px\">\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Volume (24hrs)</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD, true) : '-'}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>{volumeChangeUSD ? formattedPercent(volumeChangeUSD) : '-'}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Total Liquidity</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {totalLiquidityUSD ? formattedNum(totalLiquidityUSD, true) : '-'}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>\n                          {liquidityChangeUSD ? formattedPercent(liquidityChangeUSD) : '-'}\n                        </TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </AutoColumn>\n                </Box>\n              </Panel>\n            </Box>\n          )}\n          {!below800 && (\n            <>\n              <AutoColumn gap=\"6px\">\n                <Panel style={{ height: '100%', minHeight: '300px' }}>\n                  <GlobalChart display=\"MEV\" />\n                </Panel>\n                <GridRow>\n                  <Panel style={{ height: '100%', minHeight: '300px' }}>\n                    <GlobalChart display=\"liquidity\" />\n                  </Panel>\n                  <Panel style={{ height: '100%' }}>\n                    <GlobalChart display=\"volume\" />\n                  </Panel>\n                </GridRow>\n              </AutoColumn>\n            </>\n          )}\n          {below800 && (\n            <AutoColumn style={{ marginTop: '6px' }} gap=\"24px\">\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\n                <GlobalChart display=\"liquidity\" />\n              </Panel>\n            </AutoColumn>\n          )}\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1.125rem'} style={{ whiteSpace: 'nowrap' }}>\n                Top Tokens\n              </TYPE.main>\n              <CustomLink to={'/tokens'}>See All</CustomLink>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <TopTokenList tokens={allTokens} />\n          </Panel>\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1rem'} style={{ whiteSpace: 'nowrap' }}>\n                Top Pairs\n              </TYPE.main>\n              <AutoRow gap=\"4px\" width=\"100%\" justifyContent=\"flex-end\">\n                <CheckBox\n                  checked={useTracked}\n                  setChecked={() => setUseTracked(!useTracked)}\n                  text={'Hide untracked pairs'}\n                />\n                <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\n                <CustomLink to={'/pairs'}>See All</CustomLink>\n              </AutoRow>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <PairList pairs={allPairs} useTracked={useTracked} />\n          </Panel>\n          <span>\n            <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n              Transactions\n            </TYPE.main>\n          </span>\n          <Panel style={{ margin: '1rem 0' }}>\n            <TxnList transactions={transactions} />\n          </Panel>\n        </div>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(GlobalPage)\n","import React from 'react'\nimport { Button as RebassButton } from 'rebass/styled-components'\nimport styled from 'styled-components'\nimport { Plus, ChevronDown, ChevronUp } from 'react-feather'\nimport { darken, transparentize } from 'polished'\nimport { RowBetween } from '../Row'\nimport { StyledIcon } from '..'\n\nconst Base = styled(RebassButton)`\n  padding: 8px 12px;\n  font-size: 0.825rem;\n  font-weight: 600;\n  border-radius: 12px;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid transparent;\n  outline: none;\n  border-bottom-right-radius: ${({ open }) => open && '0'};\n  border-bottom-left-radius: ${({ open }) => open && '0'};\n`\n\nconst BaseCustom = styled(RebassButton)`\n  padding: 16px 12px;\n  font-size: 0.825rem;\n  font-weight: 400;\n  border-radius: 12px;\n  cursor: pointer;\n  outline: none;\n`\n\nconst Dull = styled(Base)`\n  background-color: rgba(255, 255, 255, 0.15);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  color: black;\n  height: 100%;\n  font-weight: 400;\n  &:hover,\n  :focus {\n    background-color: rgba(255, 255, 255, 0.25);\n    border-color: rgba(255, 255, 255, 0.25);\n  }\n  &:focus {\n    box-shadow: 0 0 0 1pt rgba(255, 255, 255, 0.25);\n  }\n  &:active {\n    background-color: rgba(255, 255, 255, 0.25);\n    border-color: rgba(255, 255, 255, 0.25);\n  }\n`\n\nexport default function ButtonStyled({ children, ...rest }) {\n  return <Base {...rest}>{children}</Base>\n}\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const ButtonLight = styled(Base)`\n  background-color: ${({ color, theme }) => (color ? transparentize(0.9, color) : transparentize(0.9, theme.primary1))};\n  color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\n\n  min-width: fit-content;\n  border-radius: 12px;\n  white-space: nowrap;\n\n  a {\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\n  }\n\n  :hover {\n    background-color: ${({ color, theme }) =>\n      color ? transparentize(0.8, color) : transparentize(0.8, theme.primary1)};\n  }\n`\n\nexport function ButtonDropdown({ disabled = false, children, open, ...rest }) {\n  return (\n    <ButtonFaded {...rest} disabled={disabled} ope={open}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        {open ? (\n          <StyledIcon>\n            <ChevronUp size={24} />\n          </StyledIcon>\n        ) : (\n          <StyledIcon>\n            <ChevronDown size={24} />\n          </StyledIcon>\n        )}\n      </RowBetween>\n    </ButtonFaded>\n  )\n}\n\nexport const ButtonDark = styled(Base)`\n  background-color: ${({ color, theme }) => (color ? color : theme.primary1)};\n  color: white;\n  width: fit-content;\n  border-radius: 12px;\n  white-space: nowrap;\n\n  :hover {\n    background-color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.primary1))};\n  }\n`\n\nexport const ButtonFaded = styled(Base)`\n  background-color: ${({ theme }) => theme.bg2};\n  color: (255, 255, 255, 0.5);\n  white-space: nowrap;\n\n  :hover {\n    opacity: 0.5;\n  }\n`\n\nexport function ButtonPlusDull({ disabled, children, ...rest }) {\n  return (\n    <Dull {...rest}>\n      <ContentWrapper>\n        <Plus size={16} />\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n      </ContentWrapper>\n    </Dull>\n  )\n}\n\nexport function ButtonCustom({ children, bgColor, color, ...rest }) {\n  return (\n    <BaseCustom bg={bgColor} color={color} {...rest}>\n      {children}\n    </BaseCustom>\n  )\n}\n\nexport const OptionButton = styled.div`\n  font-weight: 500;\n  width: fit-content;\n  white-space: nowrap;\n  padding: 6px;\n  border-radius: 6px;\n  border: 1px solid ${({ theme }) => theme.bg4};\n  background-color: ${({ active, theme }) => active && theme.bg3};\n  color: ${({ theme }) => theme.text1};\n\n  :hover {\n    cursor: ${({ disabled }) => !disabled && 'pointer'};\n  }\n`\n","import React, { useState, useEffect, useRef } from 'react'\nimport { createChart, CrosshairMode } from 'lightweight-charts'\nimport dayjs from 'dayjs'\nimport { formattedNum } from '../../utils'\nimport { usePrevious } from 'react-use'\nimport styled from 'styled-components'\nimport { Play } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  right: 10px;\n  color: ${({ theme }) => theme.text1}\n  border-radius: 3px;\n  height: 16px;\n  width: 16px;\n  padding: 0px;\n  bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst CandleStickChart = ({\n  data,\n  width,\n  height = 300,\n  base,\n  margin = true,\n  valueFormatter = (val) => formattedNum(val, true),\n}) => {\n  // reference for DOM element to create with chart\n  const ref = useRef()\n\n  const formattedData = data?.map((entry) => {\n    return {\n      time: parseFloat(entry.timestamp),\n      open: parseFloat(entry.open),\n      low: parseFloat(entry.open),\n      close: parseFloat(entry.close),\n      high: parseFloat(entry.close),\n    }\n  })\n\n  if (formattedData && formattedData.length > 0) {\n    formattedData.push({\n      time: dayjs().unix(),\n      open: parseFloat(formattedData[formattedData.length - 1].close),\n      close: parseFloat(base),\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\n    })\n  }\n\n  // pointer to the chart object\n  const [chartCreated, setChartCreated] = useState(false)\n  const dataPrev = usePrevious(data)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n  const previousTheme = usePrevious(darkMode)\n\n  // reset the chart if theme switches\n  useEffect(() => {\n    if (chartCreated && previousTheme !== darkMode) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id')\n      let node = document.getElementById('test-id')\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, darkMode, previousTheme])\n\n  useEffect(() => {\n    if (data !== dataPrev && chartCreated) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id')\n      let node = document.getElementById('test-id')\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, data, dataPrev])\n\n  // if no chart created yet, create one with options and add to DOM manually\n  useEffect(() => {\n    if (!chartCreated) {\n      const chart = createChart(ref.current, {\n        width: width,\n        height: height,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n        },\n        grid: {\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n        },\n        crosshair: {\n          mode: CrosshairMode.Normal,\n        },\n        rightPriceScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n          visible: true,\n        },\n        timeScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n        },\n        localization: {\n          priceFormatter: (val) => formattedNum(val),\n        },\n      })\n\n      var candleSeries = chart.addCandlestickSeries({\n        upColor: 'green',\n        downColor: 'red',\n        borderDownColor: 'red',\n        borderUpColor: 'green',\n        wickDownColor: 'red',\n        wickUpColor: 'green',\n      })\n\n      candleSeries.setData(formattedData)\n\n      var toolTip = document.createElement('div')\n      toolTip.setAttribute('id', 'tooltip-id')\n      toolTip.className = 'three-line-legend'\n      ref.current.appendChild(toolTip)\n      toolTip.style.display = 'block'\n      toolTip.style.left = (margin ? 116 : 10) + 'px'\n      toolTip.style.top = 50 + 'px'\n      toolTip.style.backgroundColor = 'transparent'\n\n      // get the title of the chart\n      function setLastBarText() {\n        toolTip.innerHTML = base\n          ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>'\n          : ''\n      }\n      setLastBarText()\n\n      // update the title when hovering on the chart\n      chart.subscribeCrosshairMove(function (param) {\n        if (\n          param === undefined ||\n          param.time === undefined ||\n          param.point.x < 0 ||\n          param.point.x > width ||\n          param.point.y < 0 ||\n          param.point.y > height\n        ) {\n          setLastBarText()\n        } else {\n          var price = param.seriesPrices.get(candleSeries).close\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A')\n          toolTip.innerHTML =\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\n            valueFormatter(price) +\n            `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` +\n            time +\n            ' UTC' +\n            '</span>' +\n            '</div>'\n        }\n      })\n\n      chart.timeScale().fitContent()\n\n      setChartCreated(chart)\n    }\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor])\n\n  // responsiveness\n  useEffect(() => {\n    if (width) {\n      chartCreated && chartCreated.resize(width, height)\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\n    }\n  }, [chartCreated, height, width])\n\n  return (\n    <div>\n      <div ref={ref} id=\"test-id\" />\n      <IconWrapper>\n        <Play\n          onClick={() => {\n            chartCreated && chartCreated.timeScale().fitContent()\n          }}\n        />\n      </IconWrapper>\n    </div>\n  )\n}\n\nexport default CandleStickChart\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { useMedia, usePrevious } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData'\nimport DropdownSelect from '../DropdownSelect'\nimport CandleStickChart from '../CandleChart'\nimport LocalLoader from '../LocalLoader'\nimport { AutoColumn } from '../Column'\nimport { Activity } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  min-height: 300px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst PriceOption = styled(OptionButton)`\n  border-radius: 2px;\n`\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  PRICE: 'Price',\n  LINE_PRICE: 'Price (Line)',\n}\n\nconst DATA_FREQUENCY = {\n  DAY: 'DAY',\n  HOUR: 'HOUR',\n  LINE: 'LINE',\n}\n\nconst TokenChart = ({ address, color, base }) => {\n  // settings for the window and candle width\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE)\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  // reset view on new address\n  const addressPrev = usePrevious(address)\n  useEffect(() => {\n    if (address !== addressPrev && addressPrev) {\n      setChartFilter(CHART_VIEW.LIQUIDITY)\n    }\n  }, [address, addressPrev])\n\n  let chartData = useTokenChartData(address)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.WEEK)\n  const prevWindow = usePrevious(timeWindow)\n\n  // hourly and daily price data based on the current time window\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600)\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600)\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600)\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400)\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400)\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400)\n\n  const priceData =\n    timeWindow === timeframeOptions.MONTH\n      ? // monthly selected\n        frequency === DATA_FREQUENCY.DAY\n        ? dailyMonth\n        : hourlyMonth\n      : // weekly selected\n      timeWindow === timeframeOptions.WEEK\n      ? frequency === DATA_FREQUENCY.DAY\n        ? dailyWeek\n        : hourlyWeek\n      : // all time selected\n      frequency === DATA_FREQUENCY.DAY\n      ? dailyAll\n      : hourlyAll\n\n  // switch to hourly data when switched to week window\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\n      setFrequency(DATA_FREQUENCY.HOUR)\n    }\n  }, [prevWindow, timeWindow])\n\n  // switch to daily data if switche to month or all time view\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\n      setFrequency(DATA_FREQUENCY.DAY)\n    }\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\n      setFrequency(DATA_FREQUENCY.DAY)\n    }\n  }, [prevWindow, timeWindow])\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  let utcStartTime = getTimeframe(timeWindow)\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22\n\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\n        </RowBetween>\n      ) : (\n        <RowBetween\n          mb={\n            chartFilter === CHART_VIEW.LIQUIDITY ||\n            chartFilter === CHART_VIEW.VOLUME ||\n            (chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE)\n              ? 40\n              : 0\n          }\n          align=\"flex-start\"\n        >\n          <AutoColumn gap=\"8px\">\n            <RowFixed>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.LIQUIDITY}\n                onClick={() => setChartFilter(CHART_VIEW.LIQUIDITY)}\n                style={{ marginRight: '6px' }}\n              >\n                Liquidity\n              </OptionButton>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.VOLUME}\n                onClick={() => setChartFilter(CHART_VIEW.VOLUME)}\n                style={{ marginRight: '6px' }}\n              >\n                Volume\n              </OptionButton>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.PRICE}\n                onClick={() => {\n                  setChartFilter(CHART_VIEW.PRICE)\n                }}\n              >\n                Price\n              </OptionButton>\n            </RowFixed>\n            {chartFilter === CHART_VIEW.PRICE && (\n              <AutoRow gap=\"4px\">\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.DAY}\n                  onClick={() => {\n                    setTimeWindow(timeframeOptions.MONTH)\n                    setFrequency(DATA_FREQUENCY.DAY)\n                  }}\n                >\n                  D\n                </PriceOption>\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.HOUR}\n                  onClick={() => setFrequency(DATA_FREQUENCY.HOUR)}\n                >\n                  H\n                </PriceOption>\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.LINE}\n                  onClick={() => setFrequency(DATA_FREQUENCY.LINE)}\n                >\n                  <Activity size={14} />\n                </PriceOption>\n              </AutoRow>\n            )}\n          </AutoColumn>\n          <AutoRow justify=\"flex-end\" gap=\"6px\" align=\"flex-start\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </RowBetween>\n      )}\n      {chartFilter === CHART_VIEW.LIQUIDITY && chartData && (\n        <ResponsiveContainer aspect={aspect}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={16}\n              minTickGap={120}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              key={'other'}\n              dataKey={'totalLiquidityUSD'}\n              stackId=\"2\"\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Liquidity'}\n              yAxisId={0}\n              stroke={darken(0.12, color)}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n      {chartFilter === CHART_VIEW.PRICE &&\n        (frequency === DATA_FREQUENCY.LINE ? (\n          <ResponsiveContainer aspect={below1080 ? 60 / 32 : 60 / 16}>\n            <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                  <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n                </linearGradient>\n              </defs>\n              <XAxis\n                tickLine={false}\n                axisLine={false}\n                interval=\"preserveEnd\"\n                tickMargin={16}\n                minTickGap={120}\n                tickFormatter={(tick) => toNiceDate(tick)}\n                dataKey=\"date\"\n                tick={{ fill: textColor }}\n                type={'number'}\n                domain={domain}\n              />\n              <YAxis\n                type=\"number\"\n                orientation=\"right\"\n                tickFormatter={(tick) => '$' + toK(tick)}\n                axisLine={false}\n                tickLine={false}\n                interval=\"preserveEnd\"\n                minTickGap={80}\n                yAxisId={0}\n                tick={{ fill: textColor }}\n              />\n              <Tooltip\n                cursor={true}\n                formatter={(val) => formattedNum(val, true)}\n                labelFormatter={(label) => toNiceDateYear(label)}\n                labelStyle={{ paddingTop: 4 }}\n                contentStyle={{\n                  padding: '10px 14px',\n                  borderRadius: 10,\n                  borderColor: color,\n                  color: 'black',\n                }}\n                wrapperStyle={{ top: -70, left: -10 }}\n              />\n              <Area\n                key={'other'}\n                dataKey={'priceUSD'}\n                stackId=\"2\"\n                strokeWidth={2}\n                dot={false}\n                type=\"monotone\"\n                name={'Price'}\n                yAxisId={0}\n                stroke={darken(0.12, color)}\n                fill=\"url(#colorUv)\"\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        ) : priceData ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart data={priceData} width={width} base={base} />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={aspect}>\n          <BarChart margin={{ top: 0, right: 10, bottom: 6, left: 10 }} barCategoryGap={1} data={chartData}>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              axisLine={false}\n              tickMargin={16}\n              tickFormatter={(tick) => '$' + toK(tick)}\n              tickLine={false}\n              orientation=\"right\"\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={{ fill: color, opacity: 0.1 }}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Bar\n              type=\"monotone\"\n              name={'Volume'}\n              dataKey={'dailyVolumeUSD'}\n              fill={color}\n              opacity={'0.4'}\n              yAxisId={0}\n              stroke={color}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default TokenChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../../hooks'\nimport { CheckCircle, Copy } from 'react-feather'\nimport { StyledIcon } from '..'\n\nconst CopyIcon = styled.div`\n  color: #aeaeae;\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: black;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <StyledIcon>\n            <CheckCircle size={'14'} />\n          </StyledIcon>\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <StyledIcon>\n            <Copy size={'14'} />\n          </StyledIcon>\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n","import React from 'react'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport { AlertTriangle } from 'react-feather'\nimport { RowBetween, RowFixed } from '../Row'\nimport { ButtonDark } from '../ButtonStyled'\nimport { AutoColumn } from '../Column'\nimport { Hover } from '..'\nimport Link from '../Link'\nimport { useMedia } from 'react-use'\nimport { useNetwork } from '../../contexts/Application'\nimport { chainConfig } from '../../chainConfig'\n\nconst WarningWrapper = styled.div`\n  border-radius: 20px;\n  border: 1px solid #f82d3a;\n  background: rgba(248, 45, 58, 0.05);\n  padding: 1rem;\n  color: #f82d3a;\n  display: ${({ show }) => !show && 'none'};\n  margin: 0 2rem 2rem 2rem;\n  position: relative;\n\n  @media screen and (max-width: 800px) {\n    width: 80% !important;\n    margin-left: 5%;\n  }\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  min-height: 20px;\n  min-width: 20px;\n  stroke: red;\n`\n\nexport default function Warning({ type, show, setShow, address }) {\n  const [network] = useNetwork()\n  const { blockchainName, scannerUrl, scannerName, tokenStandard } = chainConfig[network]\n  const below800 = useMedia('(max-width: 800px)')\n\n  const textContent = below800 ? (\n    <div>\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n        Anyone can create and name any {tokenStandard} token on {blockchainName}, including creating fake versions of\n        existing tokens and tokens that claim to represent projects that do not have a token.\n      </Text>\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n        Similar to {scannerName}, this site automatically tracks analytics for all {tokenStandard} tokens independent of\n        token integrity. Please do your own research before interacting with any {tokenStandard} token.\n      </Text>\n    </div>\n  ) : (\n    <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n      Anyone can create and name any {tokenStandard} token on {blockchainName}, including creating fake versions of\n      existing tokens and tokens that claim to represent projects that do not have a token. Similar to {scannerName},\n      this site automatically tracks analytics for all {tokenStandard} tokens independent of token integrity. Please do\n      your own research before interacting with any {tokenStandard} token.\n    </Text>\n  )\n\n  return (\n    <WarningWrapper show={show}>\n      <AutoColumn gap=\"4px\">\n        <RowFixed>\n          <StyledWarningIcon />\n          <Text fontWeight={600} lineHeight={'145.23%'} ml={'10px'}>\n            Token Safety Alert\n          </Text>\n        </RowFixed>\n        {textContent}\n        {below800 ? (\n          <div>\n            <Hover style={{ marginTop: '10px' }}>\n              <Link\n                fontWeight={500}\n                lineHeight={'145.23%'}\n                color={'#2172E5'}\n                href={`https://${scannerUrl}/address/` + address}\n                target=\"_blank\"\n              >\n                View {type === 'token' ? 'token' : 'pair'} contract on {scannerName}\n              </Link>\n            </Hover>\n            <RowBetween style={{ marginTop: '20px' }}>\n              <div />\n              <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\n                I understand\n              </ButtonDark>\n            </RowBetween>\n          </div>\n        ) : (\n          <RowBetween style={{ marginTop: '10px' }}>\n            <Hover>\n              <Link\n                fontWeight={500}\n                lineHeight={'145.23%'}\n                color={'#2172E5'}\n                href={`https://${scannerUrl}/address/` + address}\n                target=\"_blank\"\n              >\n                View {type === 'token' ? 'token' : 'pair'} contract on {scannerName}\n              </Link>\n            </Hover>\n            <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\n              I understand\n            </ButtonDark>\n          </RowBetween>\n        )}\n      </AutoColumn>\n    </WarningWrapper>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst Wrapper = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport default function HoverText({ text, children }: { text: string; children: any }) {\n  const [show, setShow] = useState<boolean>(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <Wrapper>\n      <Tooltip text={text} show={show}>\n        <Wrapper onMouseEnter={open} onMouseLeave={close}>\n          {children}\n        </Wrapper>\n      </Tooltip>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link from '../components/Link'\nimport Panel from '../components/Panel'\nimport TokenLogo from '../components/TokenLogo'\nimport PairList from '../components/PairList'\nimport Loader from '../components/LocalLoader'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport TxnList from '../components/TxnList'\nimport TokenChart from '../components/TokenChart'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, localNumber } from '../utils'\nimport { useTokenData, useTokenTransactions, useTokenPairs } from '../contexts/TokenData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport { useColor } from '../hooks'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport { useDataForList } from '../contexts/PairData'\nimport { useEffect } from 'react'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedTokens } from '../contexts/LocalStorage'\nimport { Hover, PageWrapper, ContentWrapper, StyledIcon, BlockedWrapper, BlockedMessageWrapper } from '../components'\nimport { PlusCircle, Bookmark, AlertCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens, useNetwork } from '../contexts/Application'\nimport HoverText from '../components/HoverText'\nimport { UNTRACKED_COPY, TOKEN_BLACKLIST, BLOCKED_WARNINGS } from '../constants'\nimport QuestionHelper from '../components/QuestionHelper'\nimport Checkbox from '../components/Checkbox'\nimport { shortenAddress } from '../utils'\nimport { chainConfig } from '../chainConfig'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto 1fr;\n  column-gap: 30px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst WarningIcon = styled(AlertCircle)`\n  stroke: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  opacity: 0.6;\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction TokenPage({ address, history }) {\n  const {\n    id,\n    name,\n    symbol,\n    priceUSD,\n    oneDayVolumeUSD,\n    totalLiquidityUSD,\n    volumeChangeUSD,\n    oneDayVolumeUT,\n    volumeChangeUT,\n    priceChangeUSD,\n    liquidityChangeUSD,\n    oneDayTxns,\n    txnChange,\n  } = useTokenData(address)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  const [network] = useNetwork()\n\n  // detect color from token\n  const backgroundColor = useColor(id, symbol)\n\n  const allPairs = useTokenPairs(address)\n\n  // pairs to show in pair list\n  const fetchedPairsList = useDataForList(allPairs)\n\n  // all transactions with this token\n  const transactions = useTokenTransactions(address)\n\n  // price\n  const price = priceUSD ? formattedNum(priceUSD, true) : ''\n  const priceChange = priceChangeUSD ? formattedPercent(priceChangeUSD) : ''\n\n  // volume\n  const volume = formattedNum(!!oneDayVolumeUSD ? oneDayVolumeUSD : oneDayVolumeUT, true)\n\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUT\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUT)\n\n  // liquidity\n  const liquidity = formattedNum(totalLiquidityUSD, true)\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // transactions\n  const txnChangeFormatted = formattedPercent(txnChange)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below800 = useMedia('(max-width: 800px)')\n  const below600 = useMedia('(max-width: 600px)')\n  const below500 = useMedia('(max-width: 500px)')\n\n  // format for long symbol\n  const LENGTH = below1080 ? 10 : 16\n  const formattedSymbol = symbol?.length > LENGTH ? symbol.slice(0, LENGTH) + '...' : symbol\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n  const [savedTokens, addToken] = useSavedTokens()\n  const listedTokens = useListedTokens()\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const [useTracked, setUseTracked] = useState(true)\n\n  const { scannerUrl, scannerName } = chainConfig[network]\n\n  if (TOKEN_BLACKLIST.includes(address)) {\n    return (\n      <BlockedWrapper>\n        <BlockedMessageWrapper>\n          <AutoColumn gap=\"1rem\" justify=\"center\">\n            <TYPE.light style={{ textAlign: 'center' }}>\n              {BLOCKED_WARNINGS[address] ?? `This token is not supported.`}\n            </TYPE.light>\n            <Link external={true} href={`https://${scannerUrl}/address/` + address}>{`More about ${shortenAddress(\n              address\n            )}`}</Link>\n          </AutoColumn>\n        </BlockedMessageWrapper>\n      </BlockedWrapper>\n    )\n  }\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n      <Warning\n        type={'token'}\n        show={!dismissed && listedTokens && !listedTokens.includes(address)}\n        setShow={markAsDismissed}\n        address={address}\n      />\n      <ContentWrapper>\n        <RowBetween style={{ flexWrap: 'wrap', alingItems: 'start' }}>\n          <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\n            <TYPE.body>\n              <BasicLink to=\"/tokens\">{'Tokens '}</BasicLink>→ {symbol}\n            </TYPE.body>\n            <Link\n              style={{ width: 'fit-content' }}\n              color={backgroundColor}\n              external\n              href={`https://${scannerUrl}/address/` + address}\n            >\n              <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\n                ({address.slice(0, 8) + '...' + address.slice(36, 42)})\n              </Text>\n            </Link>\n          </AutoRow>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <WarningGrouping disabled={!dismissed && listedTokens && !listedTokens.includes(address)}>\n          <DashboardWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n            <RowBetween\n              style={{\n                flexWrap: 'wrap',\n                marginBottom: '2rem',\n                alignItems: 'flex-start',\n              }}\n            >\n              <RowFixed style={{ flexWrap: 'wrap' }}>\n                <RowFixed style={{ alignItems: 'baseline' }}>\n                  <TokenLogo address={address} size=\"32px\" style={{ alignSelf: 'center' }} />\n                  <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} fontWeight={500} style={{ margin: '0 1rem' }}>\n                    <RowFixed gap=\"6px\">\n                      <FormattedName text={name ? name + ' ' : ''} maxCharacters={16} style={{ marginRight: '6px' }} />{' '}\n                      {formattedSymbol ? `(${formattedSymbol})` : ''}\n                    </RowFixed>\n                  </TYPE.main>{' '}\n                  {!below1080 && (\n                    <>\n                      <TYPE.main fontSize={'1.5rem'} fontWeight={500} style={{ marginRight: '1rem' }}>\n                        {price}\n                      </TYPE.main>\n                      {priceChange}\n                    </>\n                  )}\n                </RowFixed>\n              </RowFixed>\n              <span>\n                <RowFixed ml={below500 ? '0' : '2.5rem'} mt={below500 ? '1rem' : '0'}>\n                  {!!!savedTokens[address] && !below800 ? (\n                    <Hover onClick={() => addToken(address, symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n                  <Link href={getPoolLink()} target=\"_blank\">\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link href={getSwapLink()} target=\"_blank\">\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </span>\n            </RowBetween>\n\n            <>\n              {!below1080 && (\n                <RowFixed>\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\n                    Token Stats\n                  </TYPE.main>\n                  {usingUtVolume && (\n                    <HoverText text={UNTRACKED_COPY}>\n                      <WarningIcon />\n                    </HoverText>\n                  )}\n                </RowFixed>\n              )}\n              <PanelWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n                {below1080 && price && (\n                  <Panel>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Price</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        {' '}\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                          {price}\n                        </TYPE.main>\n                        <TYPE.main>{priceChange}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </Panel>\n                )}\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {liquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Transactions (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {oneDayTxns ? localNumber(oneDayTxns) : 0}\n                      </TYPE.main>\n                      <TYPE.main>{txnChangeFormatted}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/4',\n                  }}\n                >\n                  <TokenChart address={address} color={backgroundColor} base={priceUSD} />\n                </Panel>\n              </PanelWrapper>\n            </>\n\n            <RowBetween style={{ marginTop: '3rem' }}>\n              <TYPE.main fontSize={'1.125rem'}>Top Pairs</TYPE.main>\n              <AutoRow gap=\"4px\" style={{ width: 'fit-content' }}>\n                <Checkbox\n                  checked={useTracked}\n                  setChecked={() => setUseTracked(!useTracked)}\n                  text={'Hide untracked pairs'}\n                />\n                <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\n              </AutoRow>\n            </RowBetween>\n            <Panel\n              rounded\n              style={{\n                marginTop: '1.5rem',\n                padding: '1.125rem 0 ',\n              }}\n            >\n              {address && fetchedPairsList ? (\n                <PairList color={backgroundColor} address={address} pairs={fetchedPairsList} useTracked={useTracked} />\n              ) : (\n                <Loader />\n              )}\n            </Panel>\n            <RowBetween mt={40} mb={'1rem'}>\n              <TYPE.main fontSize={'1.125rem'}>Transactions</TYPE.main> <div />\n            </RowBetween>\n            <Panel rounded>\n              {transactions ? <TxnList color={backgroundColor} transactions={transactions} /> : <Loader />}\n            </Panel>\n            <>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Token Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem',\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Symbol</TYPE.main>\n                    <Text style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={symbol} maxCharacters={12} />\n                    </Text>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={name} maxCharacters={16} />\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                        {address.slice(0, 8) + '...' + address.slice(36, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={address} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={`https://${scannerUrl}/address/` + address}>\n                      View on {scannerName} ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(TokenPage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\nimport { RowBetween, AutoRow } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData'\nimport { timeframeOptions } from '../../constants'\nimport { useMedia } from 'react-use'\nimport { EmptyCard } from '..'\nimport DropdownSelect from '../DropdownSelect'\nimport CandleStickChart from '../CandleChart'\nimport LocalLoader from '../LocalLoader'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 340px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst OptionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 40px;\n`\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  RATE0: 'Rate 0',\n  RATE1: 'Rate 1',\n}\n\nconst PairChart = ({ address, color, base0, base1 }) => {\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.MONTH)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  const [height, setHeight] = useState(ref?.current?.container?.clientHeight)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n      setHeight(ref?.current?.container?.clientHeight ?? height)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [height, isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  // get data for pair, and rates\n  const pairData = usePairData(address)\n  let chartData = usePairChartData(address)\n  const hourlyData = useHourlyRateData(address, timeWindow)\n  const hourlyRate0 = hourlyData && hourlyData[0]\n  const hourlyRate1 = hourlyData && hourlyData[1]\n\n  // formatted symbols for overflow\n  const formattedSymbol0 =\n    pairData?.token0?.symbol.length > 6 ? pairData?.token0?.symbol.slice(0, 5) + '...' : pairData?.token0?.symbol\n  const formattedSymbol1 =\n    pairData?.token1?.symbol.length > 6 ? pairData?.token1?.symbol.slice(0, 5) + '...' : pairData?.token1?.symbol\n\n  const below1600 = useMedia('(max-width: 1600px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  let utcStartTime = getTimeframe(timeWindow)\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\n\n  if (chartData && chartData.length === 0) {\n    return (\n      <ChartWrapper>\n        <EmptyCard height=\"300px\">No historical data yet.</EmptyCard>{' '}\n      </ChartWrapper>\n    )\n  }\n\n  /**\n   * Used to format values on chart on scroll\n   * Needs to be raw html for chart API to parse styles\n   * @param {*} val\n   */\n  function valueFormatter(val) {\n    if (chartFilter === CHART_VIEW.RATE0) {\n      return (\n        formattedNum(val) +\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`\n      )\n    }\n    if (chartFilter === CHART_VIEW.RATE1) {\n      return (\n        formattedNum(val) +\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`\n      )\n    }\n  }\n\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\n        </RowBetween>\n      ) : (\n        <OptionsRow>\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.LIQUIDITY}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.ALL_TIME)\n                setChartFilter(CHART_VIEW.LIQUIDITY)\n              }}\n            >\n              Liquidity\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.VOLUME}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.ALL_TIME)\n                setChartFilter(CHART_VIEW.VOLUME)\n              }}\n            >\n              Volume\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.RATE0}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.WEEK)\n                setChartFilter(CHART_VIEW.RATE0)\n              }}\n            >\n              {pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'}\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.RATE1}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.WEEK)\n                setChartFilter(CHART_VIEW.RATE1)\n              }}\n            >\n              {pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-'}\n            </OptionButton>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </OptionsRow>\n      )}\n      {chartFilter === CHART_VIEW.LIQUIDITY && (\n        <ResponsiveContainer aspect={aspect}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={14}\n              minTickGap={80}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tickMargin={16}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={' (USD)'}\n              dataKey={'reserveUSD'}\n              yAxisId={0}\n              stroke={darken(0.12, color)}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n\n      {chartFilter === CHART_VIEW.RATE1 &&\n        (hourlyRate1 ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart\n              data={hourlyRate1}\n              base={base0}\n              margin={false}\n              width={width}\n              valueFormatter={valueFormatter}\n            />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.RATE0 &&\n        (hourlyRate0 ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart\n              data={hourlyRate0}\n              base={base1}\n              margin={false}\n              width={width}\n              valueFormatter={valueFormatter}\n            />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={aspect}>\n          <BarChart\n            margin={{ top: 0, right: 0, bottom: 6, left: below1080 ? 0 : 10 }}\n            barCategoryGap={1}\n            data={chartData}\n          >\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              axisLine={false}\n              tickMargin={16}\n              tickFormatter={(tick) => '$' + toK(tick)}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              orientation=\"right\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={{ fill: color, opacity: 0.1 }}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Bar\n              type=\"monotone\"\n              name={'Volume'}\n              dataKey={'dailyVolumeUSD'}\n              fill={color}\n              opacity={'0.4'}\n              yAxisId={0}\n              stroke={color}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default PairChart\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport Panel from '../components/Panel'\nimport {\n  PageWrapper,\n  ContentWrapperLarge,\n  StyledIcon,\n  BlockedWrapper,\n  BlockedMessageWrapper,\n} from '../components/index'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport PairChart from '../components/PairChart'\nimport Link from '../components/Link'\nimport TxnList from '../components/TxnList'\nimport Loader from '../components/LocalLoader'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, shortenAddress } from '../utils'\nimport { useColor } from '../hooks'\nimport { usePairData, usePairTransactions } from '../contexts/PairData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport TokenLogo from '../components/TokenLogo'\nimport { Hover } from '../components'\nimport { useEthPrice } from '../contexts/GlobalData'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedPairs } from '../contexts/LocalStorage'\n\nimport { Bookmark, PlusCircle, AlertCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens, useNetwork } from '../contexts/Application'\nimport HoverText from '../components/HoverText'\nimport { UNTRACKED_COPY, PAIR_BLACKLIST, BLOCKED_WARNINGS } from '../constants'\nimport { chainConfig } from '../chainConfig'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto auto 1fr;\n  column-gap: 60px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      /* grid-column: 1 / 4; */\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst FixedPanel = styled(Panel)`\n  width: fit-content;\n  padding: 8px 12px;\n  border-radius: 10px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst HoverSpan = styled.span`\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst WarningIcon = styled(AlertCircle)`\n  stroke: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  opacity: 0.6;\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction PairPage({ pairAddress, history }) {\n  const {\n    token0,\n    token1,\n    reserve0,\n    reserve1,\n    reserveUSD,\n    trackedReserveUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    oneDayVolumeUntracked,\n    volumeChangeUntracked,\n    liquidityChangeUSD,\n  } = usePairData(pairAddress)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  const [network] = useNetwork()\n\n  const transactions = usePairTransactions(pairAddress)\n  const backgroundColor = useColor(pairAddress)\n\n  const formattedLiquidity = reserveUSD ? formattedNum(reserveUSD, true) : formattedNum(trackedReserveUSD, true)\n  const usingUntrackedLiquidity = !trackedReserveUSD && !!reserveUSD\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // volume\n  const volume = !!oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD, true) : formattedNum(oneDayVolumeUntracked, true)\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUntracked\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUntracked)\n\n  const showUSDWaning = usingUntrackedLiquidity | usingUtVolume\n\n  // get fees\t  // get fees\n  const fees =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? usingUtVolume\n        ? formattedNum(oneDayVolumeUntracked * 0.003, true)\n        : formattedNum(oneDayVolumeUSD * 0.003, true)\n      : '-'\n\n  // token data for usd\n  const [ethPrice] = useEthPrice()\n  const token0USD =\n    token0?.derivedETH && ethPrice ? formattedNum(parseFloat(token0.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  const token1USD =\n    token1?.derivedETH && ethPrice ? formattedNum(parseFloat(token1.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  // rates\n  const token0Rate = reserve0 && reserve1 ? formattedNum(reserve1 / reserve0) : '-'\n  const token1Rate = reserve0 && reserve1 ? formattedNum(reserve0 / reserve1) : '-'\n\n  // formatted symbols for overflow\n  const formattedSymbol0 = token0?.symbol.length > 6 ? token0?.symbol.slice(0, 5) + '...' : token0?.symbol\n  const formattedSymbol1 = token1?.symbol.length > 6 ? token1?.symbol.slice(0, 5) + '...' : token1?.symbol\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below900 = useMedia('(max-width: 900px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const [savedPairs, addPair] = useSavedPairs()\n\n  const listedTokens = useListedTokens()\n\n  const { scannerUrl, scannerName } = chainConfig[network]\n\n  if (PAIR_BLACKLIST.includes(pairAddress)) {\n    return (\n      <BlockedWrapper>\n        <BlockedMessageWrapper>\n          <AutoColumn gap=\"1rem\" justify=\"center\">\n            <TYPE.light style={{ textAlign: 'center' }}>\n              {BLOCKED_WARNINGS[pairAddress] ?? `This pair is not supported.`}\n            </TYPE.light>\n            <Link external={true} href={`https://${scannerUrl}/address/` + pairAddress}>{`More about ${shortenAddress(\n              pairAddress\n            )}`}</Link>\n          </AutoColumn>\n        </BlockedMessageWrapper>\n      </BlockedWrapper>\n    )\n  }\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n      <span />\n      <Warning\n        type={'pair'}\n        show={!dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))}\n        setShow={markAsDismissed}\n        address={pairAddress}\n      />\n      <ContentWrapperLarge>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/pairs\">{'Pairs '}</BasicLink>→ {token0?.symbol}-{token1?.symbol}\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <WarningGrouping\n          disabled={\n            !dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))\n          }\n        >\n          <DashboardWrapper>\n            <AutoColumn gap=\"40px\" style={{ marginBottom: '1.5rem' }}>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexWrap: 'wrap',\n                  width: '100%',\n                }}\n              >\n                <RowFixed style={{ flexWrap: 'wrap', minWidth: '100px' }}>\n                  <RowFixed>\n                    {token0 && token1 && (\n                      <DoubleTokenLogo a0={token0?.id || ''} a1={token1?.id || ''} size={32} margin={true} />\n                    )}{' '}\n                    <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} style={{ margin: '0 1rem' }}>\n                      {token0 && token1 ? (\n                        <>\n                          <HoverSpan onClick={() => history.push(`/token/${token0?.id}`)}>{token0.symbol}</HoverSpan>\n                          <span>-</span>\n                          <HoverSpan onClick={() => history.push(`/token/${token1?.id}`)}>\n                            {token1.symbol}\n                          </HoverSpan>{' '}\n                          Pair\n                        </>\n                      ) : (\n                        ''\n                      )}\n                    </TYPE.main>\n                  </RowFixed>\n                </RowFixed>\n                <RowFixed\n                  ml={below900 ? '0' : '2.5rem'}\n                  mt={below1080 && '1rem'}\n                  style={{\n                    flexDirection: below1080 ? 'row-reverse' : 'initial',\n                  }}\n                >\n                  {!!!savedPairs[pairAddress] && !below1080 ? (\n                    <Hover onClick={() => addPair(pairAddress, token0.id, token1.id, token0.symbol, token1.symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Link external href={getPoolLink()}>\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link external href={getSwapLink()}>\n                    <ButtonDark ml={!below1080 && '.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </div>\n            </AutoColumn>\n            <AutoRow\n              gap=\"6px\"\n              style={{\n                width: 'fit-content',\n                marginTop: below900 ? '1rem' : '0',\n                marginBottom: below900 ? '0' : '2rem',\n                flexWrap: 'wrap',\n              }}\n            >\n              <FixedPanel onClick={() => history.push(`/token/${token0?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token0?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol0} = ${token0Rate} ${formattedSymbol1} ${\n                          parseFloat(token0?.derivedETH) ? '(' + token0USD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n              <FixedPanel onClick={() => history.push(`/token/${token1?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token1?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol1} = ${token1Rate} ${formattedSymbol0}  ${\n                          parseFloat(token1?.derivedETH) ? '(' + token1USD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n            </AutoRow>\n            <>\n              {!below1080 && (\n                <RowFixed>\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\n                    Pair Stats\n                  </TYPE.main>\n                  {showUSDWaning ? (\n                    <HoverText text={UNTRACKED_COPY}>\n                      <WarningIcon />\n                    </HoverText>\n                  ) : null}\n                </RowFixed>\n              )}\n              <PanelWrapper style={{ marginTop: '1.5rem' }}>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity </TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {formattedLiquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs) </TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Fees (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {fees}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Pooled Tokens</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <Hover onClick={() => history.push(`/token/${token0?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token0?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve0 ? formattedNum(reserve0) : ''}{' '}\n                            <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                    <Hover onClick={() => history.push(`/token/${token1?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token1?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve1 ? formattedNum(reserve1) : ''}{' '}\n                            <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/5',\n                  }}\n                >\n                  <PairChart\n                    address={pairAddress}\n                    color={backgroundColor}\n                    base0={reserve1 / reserve0}\n                    base1={reserve0 / reserve1}\n                  />\n                </Panel>\n              </PanelWrapper>\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n                Transactions\n              </TYPE.main>{' '}\n              <Panel\n                style={{\n                  marginTop: '1.5rem',\n                }}\n              >\n                {transactions ? <TxnList transactions={transactions} /> : <Loader />}\n              </Panel>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Pair Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem',\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Pair Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }}>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />\n                        -\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />\n                      </RowFixed>\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Pair Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {pairAddress.slice(0, 6) + '...' + pairAddress.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={pairAddress} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {token0 && token0.id.slice(0, 6) + '...' + token0.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token0?.id} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={16}>\n                        {token1 && token1.id.slice(0, 6) + '...' + token1.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token1?.id} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={`https://${scannerUrl}/address/` + pairAddress}>\n                      View on {scannerName} ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapperLarge>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(PairPage)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart } from 'recharts'\nimport { AutoRow, RowBetween } from '../Row'\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { useMedia } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport DropdownSelect from '../DropdownSelect'\nimport { useUserLiquidityChart } from '../../contexts/User'\nimport LocalLoader from '../LocalLoader'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport { TYPE } from '../../Theme'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 390px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst UserChart = ({ account }) => {\n  const chartData = useUserLiquidityChart(account)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const below600 = useMedia('(max-width: 600px)')\n  const above1600 = useMedia('(min-width: 1600px)')\n\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\n\n  const aspect = above1600 ? 60 / 12 : below600 ? 60 / 42 : 60 / 16\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <div />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={'#f88f01'} />\n        </RowBetween>\n      ) : (\n        <RowBetween mb={40}>\n          <AutoRow gap=\"10px\">\n            <TYPE.main>Liquidity Value</TYPE.main>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"4px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </RowBetween>\n      )}\n      {chartData ? (\n        <ResponsiveContainer aspect={aspect} style={{ height: 'inherit' }}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={'#f88f01'} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={'#f88f01'} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={16}\n              minTickGap={0}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={domain}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={6}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: '#f88f01',\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              key={'other'}\n              dataKey={'valueUSD'}\n              stackId=\"2\"\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Liquidity'}\n              yAxisId={0}\n              stroke={darken(0.12, '#f88f01')}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      ) : (\n        <LocalLoader />\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default UserChart\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { XAxis, YAxis, ResponsiveContainer, Tooltip, LineChart, Line, CartesianGrid } from 'recharts'\nimport { AutoRow, RowBetween } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { useMedia } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport DropdownSelect from '../DropdownSelect'\nimport { useUserPositionChart } from '../../contexts/User'\nimport { useTimeframe } from '../../contexts/Application'\nimport LocalLoader from '../LocalLoader'\nimport { useColor } from '../../hooks'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  max-height: 420px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst OptionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 40px;\n`\n\nconst CHART_VIEW = {\n  VALUE: 'Value',\n  FEES: 'Fees',\n}\n\nconst PairReturnsChart = ({ account, position }) => {\n  let data = useUserPositionChart(position, account)\n\n  const [timeWindow, setTimeWindow] = useTimeframe()\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  const color = useColor(position?.pair.token0.id)\n\n  const [chartView, setChartView] = useState(CHART_VIEW.VALUE)\n\n  // based on window, get starttime\n  let utcStartTime = getTimeframe(timeWindow)\n  data = data?.filter((entry) => entry.date >= utcStartTime)\n\n  const aspect = below600 ? 60 / 42 : 60 / 16\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <div />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} />\n        </RowBetween>\n      ) : (\n        <OptionsRow>\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\n            <OptionButton active={chartView === CHART_VIEW.VALUE} onClick={() => setChartView(CHART_VIEW.VALUE)}>\n              Liquidity\n            </OptionButton>\n            <OptionButton active={chartView === CHART_VIEW.FEES} onClick={() => setChartView(CHART_VIEW.FEES)}>\n              Fees\n            </OptionButton>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </OptionsRow>\n      )}\n      <ResponsiveContainer aspect={aspect}>\n        {data ? (\n          <LineChart margin={{ top: 0, right: 0, bottom: 0, left: 0 }} barCategoryGap={1} data={data}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveStartEnd\"\n              minTickGap={0}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n\n            <Line\n              type=\"monotone\"\n              dataKey={chartView === CHART_VIEW.VALUE ? 'usdValue' : 'fees'}\n              stroke={color}\n              yAxisId={0}\n              name={chartView === CHART_VIEW.VALUE ? 'Liquidity' : 'Fees Earned (Cumulative)'}\n            />\n          </LineChart>\n        ) : (\n          <LocalLoader />\n        )}\n      </ResponsiveContainer>\n    </ChartWrapper>\n  )\n}\n\nexport default PairReturnsChart\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link, { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, getPoolLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { useEthPrice } from '../../contexts/GlobalData'\nimport { RowFixed } from '../Row'\nimport { ButtonLight } from '../ButtonStyled'\nimport { TYPE } from '../../Theme'\nimport FormattedName from '../FormattedName'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 5px 0.5fr 1fr 1fr;\n  grid-template-areas: 'number name xata return';\n  align-items: flex-start;\n  padding: 20px 0;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 35px 2.5fr 1fr 1fr;\n    grid-template-areas: 'number name xata return';\n  }\n\n  @media screen and (max-width: 740px) {\n    grid-template-columns: 2.5fr 1fr 1fr;\n    grid-template-areas: 'name xata return';\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name xata';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'VALUE',\n  XATA_RETURN: 'XATA_RETURN',\n}\n\nfunction PositionList({ positions }) {\n  const below500 = useMedia('(max-width: 500px)')\n  const below740 = useMedia('(max-width: 740px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = 10\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [positions])\n\n  useEffect(() => {\n    if (positions) {\n      let extraPages = 1\n      if (positions.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(positions.length / ITEMS_PER_PAGE) + extraPages || 1)\n    }\n  }, [positions])\n\n  const [ethPrice] = useEthPrice()\n\n  const ListItem = ({ position, index }) => {\n    const poolOwnership = position.liquidityTokenBalance / position.pair.totalSupply\n    const valueUSD = poolOwnership * position.pair.reserveUSD\n\n    return (\n      <DashGrid style={{ opacity: poolOwnership > 0 ? 1 : 0.6 }} focus={true}>\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\n            <DoubleTokenLogo size={16} a0={position.pair.token0.id} a1={position.pair.token1.id} margin={!below740} />\n          </AutoColumn>\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\n            <CustomLink to={'/pair/' + position.pair.id}>\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\n                <FormattedName\n                  text={position.pair.token0.symbol + '-' + position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                />\n              </TYPE.main>\n            </CustomLink>\n\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\n              <Link\n                external\n                href={getPoolLink()}\n                style={{ marginRight: '.5rem' }}\n              >\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Add</ButtonLight>\n              </Link>\n              {poolOwnership > 0 && (\n                <Link external href={getPoolLink(true)}>\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Remove</ButtonLight>\n                </Link>\n              )}\n            </RowFixed>\n          </AutoColumn>\n        </DataText>\n        <DataText area=\"xata\">\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\n            <TYPE.main>{formattedNum(valueUSD, true, true)}</TYPE.main>\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve0))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token0.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve1))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n            </AutoColumn>\n          </AutoColumn>\n        </DataText>\n        {!below500 && (\n          <DataText area=\"return\">\n            <AutoColumn gap=\"12px\" justify=\"flex-end\">\n              <TYPE.main color={'green'}>\n                <RowFixed>{formattedNum(position?.fees.sum, true, true)}</RowFixed>\n              </TYPE.main>\n              <AutoColumn gap=\"4px\" justify=\"flex-end\">\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token0.derivedETH)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token0.derivedETH) * ethPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token0.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token1.derivedETH)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token1.derivedETH) * ethPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token1.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n              </AutoColumn>\n            </AutoColumn>\n          </DataText>\n        )}\n      </DashGrid>\n    )\n  }\n\n  const positionsSorted =\n    positions &&\n    positions\n\n      .sort((p0, p1) => {\n        if (sortedColumn === SORT_FIELD.PRINCIPAL) {\n          return p0?.principal?.usd > p1?.principal?.usd ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.HODL) {\n          return p0?.hodl?.sum > p1?.hodl?.sum ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.XATA_RETURN) {\n          return p0?.xata?.return > p1?.xata?.return ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VALUE) {\n          const bal0 = (p0.liquidityTokenBalance / p0.pair.totalSupply) * p0.pair.reserveUSD\n          const bal1 = (p1.liquidityTokenBalance / p1.pair.totalSupply) * p1.pair.reserveUSD\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        return 1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((position, index) => {\n        return (\n          <div key={index}>\n            <ListItem key={index} index={(page - 1) * 10 + index + 1} position={position} />\n            <Divider />\n          </div>\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\n        {!below740 && (\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"number\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"xata\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below500 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"return\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.XATA_RETURN)\n                setSortDirection(sortedColumn !== SORT_FIELD.XATA_RETURN ? true : !sortDirection)\n              }}\n            >\n              {below740 ? 'Fees' : 'Total Fees Earned'}{' '}\n              {sortedColumn === SORT_FIELD.XATA_RETURN ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!positionsSorted ? <LocalLoader /> : positionsSorted}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PositionList)\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useUserTransactions, useUserPositions } from '../contexts/User'\nimport TxnList from '../components/TxnList'\nimport Panel from '../components/Panel'\nimport { formattedNum } from '../utils'\nimport Row, { AutoRow, RowFixed, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport UserChart from '../components/UserChart'\nimport PairReturnsChart from '../components/PairReturnsChart'\nimport PositionList from '../components/PositionList'\nimport { TYPE } from '../Theme'\nimport { ButtonDropdown } from '../components/ButtonStyled'\nimport { PageWrapper, ContentWrapper, StyledIcon } from '../components'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport { Bookmark, Activity } from 'react-feather'\nimport Link from '../components/Link'\nimport { FEE_WARNING_TOKENS } from '../constants'\nimport { BasicLink } from '../components/Link'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\nimport { useNetwork } from '../contexts/Application'\nimport { useSavedAccounts } from '../contexts/LocalStorage'\nimport { chainConfig } from '../chainConfig'\n\nconst AccountWrapper = styled.div`\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 6px 16px;\n  border-radius: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Header = styled.div``\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst DropdownWrapper = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n  border: 1px solid #edeef2;\n  border-radius: 12px;\n`\n\nconst Flyout = styled.div`\n  position: absolute;\n  top: 38px;\n  left: -1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 999;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  padding-top: 4px;\n  border: 1px solid #edeef2;\n  border-top: none;\n`\n\nconst MenuRow = styled(Row)`\n  width: 100%;\n  padding: 12px 0;\n  padding-left: 12px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: 1fr;\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n`\n\nconst Warning = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text1};\n  padding: 1rem;\n  font-weight: 600;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n  width: calc(100% - 2rem);\n`\n\nfunction AccountPage({ account }) {\n  const [network] = useNetwork()\n  // get data for this account\n  const transactions = useUserTransactions(account)\n  const positions = useUserPositions(account)\n\n  // get data for user stats\n  const transactionCount = transactions?.swaps?.length + transactions?.burns?.length + transactions?.mints?.length\n\n  // get derived totals\n  let totalSwappedUSD = useMemo(() => {\n    return transactions?.swaps\n      ? transactions?.swaps.reduce((total, swap) => {\n          return total + parseFloat(swap.amountUSD)\n        }, 0)\n      : 0\n  }, [transactions])\n\n  // if any position has token from fee warning list, show warning\n  const [showWarning, setShowWarning] = useState(false)\n  useEffect(() => {\n    if (positions) {\n      for (let i = 0; i < positions.length; i++) {\n        if (\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token0.id) ||\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token1.id)\n        ) {\n          setShowWarning(true)\n        }\n      }\n    }\n  }, [positions])\n\n  // settings for list view and dropdowns\n  const hideLPContent = positions && positions.length === 0\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [activePosition, setActivePosition] = useState()\n\n  const dynamicPositions = activePosition ? [activePosition] : positions\n\n  const aggregateFees = dynamicPositions?.reduce(function (total, position) {\n    return total + position.fees.sum\n  }, 0)\n\n  const positionValue = useMemo(() => {\n    return dynamicPositions\n      ? dynamicPositions.reduce((total, position) => {\n          return (\n            total +\n            (parseFloat(position?.liquidityTokenBalance) / parseFloat(position?.pair?.totalSupply)) *\n              position?.pair?.reserveUSD\n          )\n        }, 0)\n      : null\n  }, [dynamicPositions])\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  // adding/removing account from saved accounts\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\n  const isBookmarked = savedAccounts.includes(account)\n  const handleBookmarkClick = useCallback(() => {\n    ;(isBookmarked ? removeAccount : addAccount)(account)\n  }, [account, isBookmarked, addAccount, removeAccount])\n\n  const { scannerUrl, scannerName } = chainConfig[network]\n\n  return (\n    <PageWrapper>\n      <ContentWrapper>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/accounts\">{'Accounts '}</BasicLink>→{' '}\n            <Link lineHeight={'145.23%'} href={`https://${scannerUrl}/address/` + account} target=\"_blank\">\n              {' '}\n              {account?.slice(0, 42)}{' '}\n            </Link>\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <Header>\n          <RowBetween>\n            <span>\n              <TYPE.header fontSize={24}>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n              <Link lineHeight={'145.23%'} href={`https://${scannerUrl}/address/` + account} target=\"_blank\">\n                <TYPE.main fontSize={14}>View on {scannerName}</TYPE.main>\n              </Link>\n            </span>\n            <AccountWrapper>\n              <StyledIcon>\n                <Bookmark\n                  onClick={handleBookmarkClick}\n                  style={{ opacity: isBookmarked ? 0.8 : 0.4, cursor: 'pointer' }}\n                />\n              </StyledIcon>\n            </AccountWrapper>\n          </RowBetween>\n        </Header>\n        <DashboardWrapper>\n          {showWarning && <Warning>Fees cannot currently be calculated for pairs that include AMPL.</Warning>}\n          {!hideLPContent && (\n            <DropdownWrapper>\n              <ButtonDropdown width=\"100%\" onClick={() => setShowDropdown(!showDropdown)} open={showDropdown}>\n                {!activePosition && (\n                  <RowFixed>\n                    <StyledIcon>\n                      <Activity size={16} />\n                    </StyledIcon>\n                    <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                  </RowFixed>\n                )}\n                {activePosition && (\n                  <RowFixed>\n                    <DoubleTokenLogo a0={activePosition.pair.token0.id} a1={activePosition.pair.token1.id} size={16} />\n                    <TYPE.body ml={'16px'}>\n                      {activePosition.pair.token0.symbol}-{activePosition.pair.token1.symbol} Position\n                    </TYPE.body>\n                  </RowFixed>\n                )}\n              </ButtonDropdown>\n              {showDropdown && (\n                <Flyout>\n                  <AutoColumn gap=\"0px\">\n                    {positions?.map((p, i) => {\n                      if (p.pair.token1.symbol === 'WETH') {\n                        p.pair.token1.symbol = 'ETH'\n                      }\n                      if (p.pair.token0.symbol === 'WETH') {\n                        p.pair.token0.symbol = 'ETH'\n                      }\n                      return (\n                        p.pair.id !== activePosition?.pair.id && (\n                          <MenuRow\n                            onClick={() => {\n                              setActivePosition(p)\n                              setShowDropdown(false)\n                            }}\n                            key={i}\n                          >\n                            <DoubleTokenLogo a0={p.pair.token0.id} a1={p.pair.token1.id} size={16} />\n                            <TYPE.body ml={'16px'}>\n                              {p.pair.token0.symbol}-{p.pair.token1.symbol} Position\n                            </TYPE.body>\n                          </MenuRow>\n                        )\n                      )\n                    })}\n                    {activePosition && (\n                      <MenuRow\n                        onClick={() => {\n                          setActivePosition()\n                          setShowDropdown(false)\n                        }}\n                      >\n                        <RowFixed>\n                          <StyledIcon>\n                            <Activity size={16} />\n                          </StyledIcon>\n                          <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                        </RowFixed>\n                      </MenuRow>\n                    )}\n                  </AutoColumn>\n                </Flyout>\n              )}\n            </DropdownWrapper>\n          )}\n          {!hideLPContent && (\n            <Panel style={{ height: '100%', marginBottom: '1rem' }}>\n              <AutoRow gap=\"20px\">\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Liquidity (Including Fees)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1}>\n                      {positionValue\n                        ? formattedNum(positionValue, true)\n                        : positionValue === 0\n                        ? formattedNum(0, true)\n                        : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Fees Earned (Cumulative)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1} color={aggregateFees && 'green'}>\n                      {aggregateFees ? formattedNum(aggregateFees, true, true) : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n              </AutoRow>\n            </Panel>\n          )}\n          {!hideLPContent && (\n            <PanelWrapper>\n              <Panel style={{ gridColumn: '1' }}>\n                {activePosition ? (\n                  <PairReturnsChart account={account} position={activePosition} />\n                ) : (\n                  <UserChart account={account} position={activePosition} />\n                )}\n              </Panel>\n            </PanelWrapper>\n          )}\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Positions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <PositionList positions={positions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Transactions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <TxnList transactions={transactions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Wallet Stats\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <AutoRow gap=\"20px\">\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{totalSwappedUSD ? formattedNum(totalSwappedUSD, true) : '-'}</TYPE.header>\n                <TYPE.main>Total Value Swapped</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>\n                  {totalSwappedUSD ? formattedNum(totalSwappedUSD * 0.003, true) : '-'}\n                </TYPE.header>\n                <TYPE.main>Total Fees Paid</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{transactionCount ? transactionCount : '-'}</TYPE.header>\n                <TYPE.main>Total Transactions</TYPE.main>\n              </AutoColumn>\n            </AutoRow>\n          </Panel>\n        </DashboardWrapper>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AccountPage\n","import React, { useEffect } from 'react'\nimport 'feather-icons'\n\nimport TopTokenList from '../components/TokenList'\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\n// import CheckBox from '../components/Checkbox'\n// import QuestionHelper from '../components/QuestionHelper'\n\nfunction AllTokensPage() {\n  const allTokens = useAllTokenData()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below600 = useMedia('(max-width: 800px)')\n\n  // const [useTracked, setUseTracked] = useState(true)\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Tokens</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        {/* <AutoRow gap=\"4px\">\n          <CheckBox checked={useTracked} setChecked={() => setUseTracked(!useTracked)} text={'Hide untracked tokens'} />\n          <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\n        </AutoRow> */}\n        <Panel style={{ marginTop: '6px', padding: below600 && '1rem 0 0 0 ' }}>\n          <TopTokenList tokens={allTokens} itemMax={50} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllTokensPage\n","import React, { useEffect, useState } from 'react'\nimport 'feather-icons'\n\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllPairData } from '../contexts/PairData'\nimport PairList from '../components/PairList'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween, AutoRow } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\nimport QuestionHelper from '../components/QuestionHelper'\nimport CheckBox from '../components/Checkbox'\n\nfunction AllPairsPage() {\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below800 = useMedia('(max-width: 800px)')\n\n  const [useTracked, setUseTracked] = useState(true)\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Pairs</TYPE.largeHeader>\n          {!below800 && <Search small={true} />}\n        </RowBetween>\n        <AutoRow gap=\"4px\">\n          <CheckBox checked={useTracked} setChecked={() => setUseTracked(!useTracked)} text={'Hide untracked pairs'} />\n          <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\n        </AutoRow>\n        <Panel style={{ padding: below800 && '1rem 0 0 0 ' }}>\n          <PairList pairs={allPairs} disbaleLinks={true} maxItems={50} useTracked={useTracked} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllPairsPage\n","import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\nimport { AutoRow, RowBetween } from '../Row'\nimport { isAddress } from '../../utils'\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { Hover, StyledIcon } from '..'\nimport Panel from '../Panel'\nimport { Divider } from '..'\nimport { Flex } from 'rebass'\n\nimport { X } from 'react-feather'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  border-radius: 12px;\n`\n\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  padding: 12px 16px;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg1};\n  font-size: 16px;\n  margin-right: 1rem;\n  border: 1px solid ${({ theme }) => theme.bg3};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst AccountLink = styled.span`\n  display: flex;\n  cursor: pointer;\n  color: ${({ theme }) => theme.link};\n  font-size: 14px;\n  font-weight: 500;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr;\n  grid-template-areas: 'account';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n`\n\nfunction AccountSearch({ history, small }) {\n  const [accountValue, setAccountValue] = useState()\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\n\n  function handleAccountSearch() {\n    if (isAddress(accountValue)) {\n      history.push('/account/' + accountValue)\n      if (!savedAccounts.includes(accountValue)) {\n        addAccount(accountValue)\n      }\n    }\n  }\n\n  return (\n    <AutoColumn gap={'1rem'}>\n      {!small && (\n        <>\n          <AutoRow>\n            <Wrapper>\n              <Input\n                placeholder=\"0x...\"\n                onChange={(e) => {\n                  setAccountValue(e.target.value)\n                }}\n              />\n            </Wrapper>\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\n          </AutoRow>\n        </>\n      )}\n\n      <AutoColumn gap={'12px'}>\n        {!small && (\n          <Panel>\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\n            </DashGrid>\n            <Divider />\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map((account) => {\n                return (\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\n                    <Flex\n                      area=\"account\"\n                      justifyContent=\"space-between\"\n                      onClick={() => history.push('/account/' + account)}\n                    >\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      <Hover\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          removeAccount(account)\n                        }}\n                      >\n                        <StyledIcon>\n                          <X size={16} />\n                        </StyledIcon>\n                      </Hover>\n                    </Flex>\n                  </DashGrid>\n                )\n              })\n            ) : (\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\n            )}\n          </Panel>\n        )}\n\n        {small && (\n          <>\n            <TYPE.main>{'Accounts'}</TYPE.main>\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map((account) => {\n                return (\n                  <RowBetween key={account}>\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\n                      {small ? (\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n                      ) : (\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      )}\n                    </ButtonFaded>\n                    <Hover onClick={() => removeAccount(account)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n            ) : (\n              <TYPE.light>No pinned wallets</TYPE.light>\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n\nexport default withRouter(AccountSearch)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { RowBetween, RowFixed } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { useSavedTokens, useSavedPairs } from '../../contexts/LocalStorage'\nimport { Hover } from '..'\nimport TokenLogo from '../TokenLogo'\nimport AccountSearch from '../AccountSearch'\nimport { Bookmark, ChevronRight, X } from 'react-feather'\nimport { ButtonFaded } from '../ButtonStyled'\nimport FormattedName from '../FormattedName'\n\nconst RightColumn = styled.div`\n  position: fixed;\n  right: 0;\n  top: 0px;\n  height: 100vh;\n  width: ${({ open }) => (open ? '160px' : '23px')};\n  padding: 1.25rem;\n  border-left: ${({ theme, open }) => '1px solid' + theme.bg3};\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 9999;\n  overflow: auto;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst SavedButton = styled(RowBetween)`\n  padding-bottom: ${({ open }) => open && '20px'};\n  border-bottom: ${({ theme, open }) => open && '1px solid' + theme.bg3};\n  margin-bottom: ${({ open }) => open && '1.25rem'};\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ScrollableDiv = styled(AutoColumn)`\n  overflow: auto;\n  padding-bottom: 60px;\n`\n\nconst StyledIcon = styled.div`\n  color: ${({ theme }) => theme.text2};\n`\n\nfunction PinnedData({ history, open, setSavedOpen }) {\n  const [savedPairs, , removePair] = useSavedPairs()\n  const [savedTokens, , removeToken] = useSavedTokens()\n\n  return !open ? (\n    <RightColumn open={open} onClick={() => setSavedOpen(true)}>\n      <SavedButton open={open}>\n        <StyledIcon>\n          <Bookmark size={20} />\n        </StyledIcon>\n      </SavedButton>\n    </RightColumn>\n  ) : (\n    <RightColumn gap=\"1rem\" open={open}>\n      <SavedButton onClick={() => setSavedOpen(false)} open={open}>\n        <RowFixed>\n          <StyledIcon>\n            <Bookmark size={16} />\n          </StyledIcon>\n          <TYPE.main ml={'4px'}>Saved</TYPE.main>\n        </RowFixed>\n        <StyledIcon>\n          <ChevronRight />\n        </StyledIcon>\n      </SavedButton>\n      <AccountSearch small={true} />\n      <AutoColumn gap=\"40px\" style={{ marginTop: '2rem' }}>\n        <AutoColumn gap={'12px'}>\n          <TYPE.main>Pinned Pairs</TYPE.main>\n          {Object.keys(savedPairs).filter((key) => {\n            return !!savedPairs[key]\n          }).length > 0 ? (\n            Object.keys(savedPairs)\n              .filter((address) => {\n                return !!savedPairs[address]\n              })\n              .map((address) => {\n                const pair = savedPairs[address]\n                return (\n                  <RowBetween key={pair.address}>\n                    <ButtonFaded onClick={() => history.push('/pair/' + address)}>\n                      <RowFixed>\n                        <TYPE.header>\n                          <FormattedName\n                            text={pair.token0Symbol + '/' + pair.token1Symbol}\n                            maxCharacters={12}\n                            fontSize={'12px'}\n                          />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removePair(pair.address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned pairs will appear here.</TYPE.light>\n          )}\n        </AutoColumn>\n        <ScrollableDiv gap={'12px'}>\n          <TYPE.main>Pinned Tokens</TYPE.main>\n          {Object.keys(savedTokens).filter((key) => {\n            return !!savedTokens[key]\n          }).length > 0 ? (\n            Object.keys(savedTokens)\n              .filter((address) => {\n                return !!savedTokens[address]\n              })\n              .map((address) => {\n                const token = savedTokens[address]\n                return (\n                  <RowBetween key={address}>\n                    <ButtonFaded onClick={() => history.push('/token/' + address)}>\n                      <RowFixed>\n                        <TokenLogo address={address} size={'14px'} />\n                        <TYPE.header ml={'6px'}>\n                          <FormattedName text={token.symbol} maxCharacters={12} fontSize={'12px'} />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removeToken(address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned tokens will appear here.</TYPE.light>\n          )}\n        </ScrollableDiv>\n      </AutoColumn>\n    </RightColumn>\n  )\n}\n\nexport default withRouter(PinnedData)\n","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgXataBrand = function SvgXataBrand(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 463,\n    height: 133,\n    viewBox: \"0 0 463 133\",\n    fill: \"#515151\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.7104 133L51.0426 82.445L28.3253 133H0L34.8839 65.6559L0.570309 2.25106H29.0857L52.4684 52.1495L75.0906 2.25106H103.036L68.437 68.0007L103.986 133H74.7104Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.579 114.054H180.911H157.243L150.209 133H123.595L179.675 0H181.576L237.847 133H211.993L204.579 114.054ZM204.579 114.054L183.668 60.2158L180.436 49.7109L177.394 60.2158L157.243 114.054H180.911H204.579Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M336.173 23.4485H305.567V133H281.043V23.4485H250.437V2.25106H336.173V23.4485Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.732 114.054H382.396L375.363 133H348.748L404.829 0H406.73L463 133H437.146L429.732 114.054ZM429.732 114.054L408.821 60.2158L405.589 49.7109L402.547 60.2158L382.396 114.054H429.732Z\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgXataBrand, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/xata-brand.b5870747.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { Flex } from 'rebass'\nimport Link from '../Link'\nimport { RowFixed } from '../Row'\nimport Logo from '../../assets/xata-logo.png'\nimport { ReactComponent as XataBrand } from '../../assets/xata-brand.svg'\n\nimport { BasicLink } from '../Link'\nimport { useMedia } from 'react-use'\n\nconst TitleWrapper = styled.div`\n  text-decoration: none;\n  z-index: 10;\n  width: 100%;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst UniIcon = styled(Link)`\n  transition: transform 0.3s ease;\n  :hover {\n    transform: rotate(-5deg);\n  }\n`\n\nconst Option = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\n  color: ${({ theme }) => theme.white};\n  display: flex;\n  margin-left: 12px;\n  :hover {\n    opacity: 1;\n  }\n`\n\nexport default function Title() {\n  const history = useHistory()\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  return (\n    <TitleWrapper>\n      <Flex alignItems=\"center\" style={{ justifyContent: 'space-between' }}>\n        <RowFixed onClick={() => history.push('/')}>\n          <UniIcon id=\"link\">\n            <img width={'24px'} src={Logo} alt=\"logo\" />\n          </UniIcon>\n          {!below1080 ? (\n            <XataBrand width={'undefined'} height={20} fill=\"#fff\" style={{ marginLeft: '12px' }} />\n          ) : (\n            <XataBrand width={'undefined'} height={18} fill=\"#fff\" style={{ marginLeft: '12px' }} />\n          )}\n        </RowFixed>\n        {below1080 && (\n          <RowFixed style={{ alignItems: 'flex-end' }}>\n            <BasicLink to=\"/home\">\n              <Option activeText={history.location.pathname === '/home' ?? undefined}>Overview</Option>\n            </BasicLink>\n            <BasicLink to=\"/tokens\">\n              <Option\n                activeText={\n                  (history.location.pathname.split('/')[1] === 'tokens' ||\n                    history.location.pathname.split('/')[1] === 'token') ??\n                  undefined\n                }\n              >\n                Tokens\n              </Option>\n            </BasicLink>\n            <BasicLink to=\"/pairs\">\n              <Option\n                activeText={\n                  (history.location.pathname.split('/')[1] === 'pairs' ||\n                    history.location.pathname.split('/')[1] === 'pair') ??\n                  undefined\n                }\n              >\n                Pairs\n              </Option>\n            </BasicLink>\n\n            <BasicLink to=\"/accounts\">\n              <Option\n                activeText={\n                  (history.location.pathname.split('/')[1] === 'accounts' ||\n                    history.location.pathname.split('/')[1] === 'account') ??\n                  undefined\n                }\n              >\n                Accounts\n              </Option>\n            </BasicLink>\n          </RowFixed>\n        )}\n      </Flex>\n    </TitleWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Sun, Moon } from 'react-feather'\n\nconst IconWrapper = styled.div<{ isActive?: boolean }>`\n  opacity: ${({ isActive }) => (isActive ? 0.8 : 0.4)};\n\n  :hover {\n    opacity: 1;\n  }\n`\n\nconst StyledToggle = styled.div`\n  display: flex;\n  position: relative;\n  width: fit-content;\n  cursor: pointer;\n  text-decoration: none;\n  margin-top: 1rem;\n  color: white;\n\n  :hover {\n    text-decoration: none;\n  }\n`\n\nexport interface ToggleProps {\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ isActive, toggle }: ToggleProps) {\n  return (\n    <StyledToggle onClick={toggle}>\n      <span>\n        <IconWrapper isActive={!isActive}>\n          <Sun size={20} />\n        </IconWrapper>\n      </span>\n      <span style={{ padding: '0 .5rem' }}>{' / '}</span>\n      <span>\n        <IconWrapper isActive={isActive}>\n          <Moon size={20} />\n        </IconWrapper>\n      </span>\n    </StyledToggle>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { AutoColumn } from '../Column'\nimport Title from '../Title'\nimport { BasicLink } from '../Link'\nimport { useMedia } from 'react-use'\nimport { transparentize } from 'polished'\nimport { TYPE } from '../../Theme'\nimport { withRouter } from 'react-router-dom'\nimport { TrendingUp, List, PieChart, Disc } from 'react-feather'\nimport { useSessionStart } from '../../contexts/Application'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport Toggle from '../Toggle'\n\nconst Wrapper = styled.div`\n  height: ${({ isMobile }) => (isMobile ? 'initial' : '100vh')};\n  background-color: ${({ theme }) => transparentize(0.4, theme.bg1)};\n  color: ${({ theme }) => theme.text1};\n  padding: 0.5rem 0.5rem 0.5rem 0.75rem;\n  position: sticky;\n  top: 0px;\n  z-index: 9999;\n  box-sizing: border-box;\n  /* background-color: #1b1c22; */\n  background: linear-gradient(193.68deg, #1b1c22 0.68%, #000000 100.48%);\n  color: ${({ theme }) => theme.bg2};\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    position: relative;\n  }\n\n  @media screen and (max-width: 600px) {\n    padding: 1rem;\n  }\n`\n\nconst Option = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\n  color: ${({ theme }) => theme.white};\n  display: flex;\n  :hover {\n    opacity: 1;\n  }\n`\n\nconst DesktopWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n`\n\nconst MobileWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Polling = styled.div`\n  position: relative;\n  display: flex;\n  left: 0;\n  bottom: 0;\n  color: white;\n  opacity: 0.4;\n  transition: opacity 0.25s ease;\n  :hover {\n    opacity: 1;\n  }\n`\nconst PollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-right: 0.5rem;\n  margin-top: 3px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nfunction SideNav({ history }) {\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  const below1180 = useMedia('(max-width: 1180px)')\n\n  const seconds = useSessionStart()\n\n  const [isDark, toggleDarkMode] = useDarkModeManager()\n\n  return (\n    <Wrapper isMobile={below1080}>\n      {!below1080 ? (\n        <DesktopWrapper>\n          <AutoColumn gap=\"1rem\" style={{ marginLeft: '.75rem', marginTop: '1.5rem' }}>\n            <Title />\n            {!below1080 && (\n              <AutoColumn gap=\"1.25rem\" style={{ marginTop: '1rem' }}>\n                <BasicLink to=\"/home\">\n                  <Option activeText={history.location.pathname === '/home' ?? undefined}>\n                    <TrendingUp size={20} style={{ marginRight: '.75rem' }} />\n                    Overview\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/tokens\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'tokens' ||\n                        history.location.pathname.split('/')[1] === 'token') ??\n                      undefined\n                    }\n                  >\n                    <Disc size={20} style={{ marginRight: '.75rem' }} />\n                    Tokens\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/pairs\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'pairs' ||\n                        history.location.pathname.split('/')[1] === 'pair') ??\n                      undefined\n                    }\n                  >\n                    <PieChart size={20} style={{ marginRight: '.75rem' }} />\n                    Pairs\n                  </Option>\n                </BasicLink>\n\n                <BasicLink to=\"/accounts\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'accounts' ||\n                        history.location.pathname.split('/')[1] === 'account') ??\n                      undefined\n                    }\n                  >\n                    <List size={20} style={{ marginRight: '.75rem' }} />\n                    Accounts\n                  </Option>\n                </BasicLink>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <AutoColumn gap=\"0.5rem\" style={{ marginLeft: '.75rem', marginBottom: '4rem' }}>\n            <Toggle isActive={isDark} toggle={toggleDarkMode} />\n            {!below1180 && (\n              <Polling>\n                <PollingDot />\n                <a href=\"/\" style={{ color: 'white' }}>\n                  <TYPE.small color={'white'}>\n                    Updated {!!seconds ? seconds + 's' : '-'} ago <br />\n                  </TYPE.small>\n                </a>\n              </Polling>\n            )}\n          </AutoColumn>\n        </DesktopWrapper>\n      ) : (\n        <MobileWrapper>\n          <Title />\n        </MobileWrapper>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default withRouter(SideNav)\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum } from '../../utils'\nimport { TYPE } from '../../Theme'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { RowFixed } from '../Row'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 10px 1.5fr 1fr 1fr;\n  grid-template-areas: 'number name pair value';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 10px 1.5fr 1fr 1fr;\n    grid-template-areas: 'number name pair value';\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: 'name pair value';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nfunction LPList({ lps, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below800 = useMedia('(max-width: 800px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [lps])\n\n  useEffect(() => {\n    if (lps) {\n      let extraPages = 1\n      if (Object.keys(lps).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(lps).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, lps])\n\n  const ListItem = ({ lp, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n        {!below600 && (\n          <DataText area=\"number\" fontWeight=\"500\">\n            {index}\n          </DataText>\n        )}\n        <DataText area=\"name\" fontWeight=\"500\" justifyContent=\"flex-start\">\n          <CustomLink style={{ marginLeft: below600 ? 0 : '1rem', whiteSpace: 'nowrap' }} to={'/account/' + lp.user.id}>\n            {below800 ? lp.user.id.slice(0, 4) + '...' + lp.user.id.slice(38, 42) : lp.user.id}\n          </CustomLink>\n        </DataText>\n\n        {/* {!below1080 && (\n          <DataText area=\"type\" justifyContent=\"flex-end\">\n            {lp.type}\n          </DataText>\n        )} */}\n\n        <DataText>\n          <CustomLink area=\"pair\" to={'/pair/' + lp.pairAddress}>\n            <RowFixed>\n              {!below600 && <DoubleTokenLogo a0={lp.token0} a1={lp.token1} size={16} margin={true} />}\n              {lp.pairName}\n            </RowFixed>\n          </CustomLink>\n        </DataText>\n        <DataText area=\"value\">{formattedNum(lp.usd, true)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  const lpList =\n    lps &&\n    lps.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((lp, index) => {\n      return (\n        <div key={index}>\n          <ListItem key={index} index={(page - 1) * 10 + index + 1} lp={lp} />\n          <Divider />\n        </div>\n      )\n    })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} disbaleLinks={disbaleLinks} style={{ height: 'fit-content', padding: ' 0 0 1rem 0' }}>\n        {!below600 && (\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"name\">Account</TYPE.main>\n        </Flex>\n        {/* {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <TYPE.main area=\"type\">Type</TYPE.main>\n          </Flex>\n        )} */}\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"pair\">Pair</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"value\">Value</TYPE.main>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!lpList ? <LocalLoader /> : lpList}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(LPList)\n","import React, { useEffect } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { TYPE } from '../Theme'\nimport { PageWrapper, FullWrapper } from '../components'\nimport Panel from '../components/Panel'\nimport LPList from '../components/LPList'\nimport styled from 'styled-components'\nimport AccountSearch from '../components/AccountSearch'\nimport { useTopLps } from '../contexts/GlobalData'\nimport LocalLoader from '../components/LocalLoader'\nimport { RowBetween } from '../components/Row'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\n\nconst AccountWrapper = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nfunction AccountLookup() {\n  // scroll to top\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const topLps = useTopLps()\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Wallet analytics</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <AccountWrapper>\n          <AccountSearch />\n        </AccountWrapper>\n        <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n          Top Liquidity Positions\n        </TYPE.main>\n        <Panel>{topLps && topLps.length > 0 ? <LPList lps={topLps} maxItems={200} /> : <LocalLoader />}</Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(AccountLookup)\n","import { useEffect } from 'react'\nimport ReactGA from 'react-ga'\n\n// fires a GA pageview every time the route changes\nexport default function GoogleAnalyticsReporter({ location: { pathname, search } }) {\n  useEffect(() => {\n    ReactGA.pageview(`${pathname}${search}`)\n  }, [pathname, search])\n  return null\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ApolloProvider } from 'react-apollo'\nimport { getClient } from './apollo/client'\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom'\nimport GlobalPage from './pages/GlobalPage'\nimport TokenPage from './pages/TokenPage'\nimport PairPage from './pages/PairPage'\nimport { useGlobalData, useGlobalChartData } from './contexts/GlobalData'\nimport { isAddress } from './utils'\nimport AccountPage from './pages/AccountPage'\nimport AllTokensPage from './pages/AllTokensPage'\nimport AllPairsPage from './pages/AllPairsPage'\nimport PinnedData from './components/PinnedData'\n\nimport SideNav from './components/SideNav'\nimport AccountLookup from './pages/AccountLookup'\nimport LocalLoader from './components/LocalLoader'\nimport { useLatestBlocks, useNetwork } from './contexts/Application'\nimport GoogleAnalyticsReporter from './components/analytics/GoogleAnalyticsReporter'\nimport { PAIR_BLACKLIST, TOKEN_BLACKLIST } from './constants'\nimport { chainConfig } from './chainConfig'\n\nconst AppWrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\nconst ContentWrapper = styled.div`\n  display: grid;\n  grid-template-columns: ${({ open }) => (open ? '220px 1fr 200px' : '220px 1fr 64px')};\n  @media screen and (max-width: 1400px) {\n    grid-template-columns: 220px 1fr;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 1fr;\n    max-width: 100vw;\n    overflow: hidden;\n    grid-gap: 0;\n  }\n`\n\nconst Right = styled.div`\n  position: fixed;\n  right: 0;\n  bottom: 0rem;\n  z-index: 99;\n  width: ${({ open }) => (open ? '220px' : '64px')};\n  height: ${({ open }) => (open ? 'fit-content' : '64px')};\n  overflow: auto;\n  background-color: ${({ theme }) => theme.bg1};\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`\n\nconst Center = styled.div`\n  height: 100%;\n  z-index: 9999;\n  transition: width 0.25s ease;\n  background-color: ${({ theme }) => theme.onlyLight};\n`\n\nconst WarningWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst WarningBanner = styled.div`\n  background-color: #ff6871;\n  padding: 1.5rem;\n  color: white;\n  width: 100%;\n  text-align: center;\n  font-weight: 500;\n`\n\n/**\n * Wrap the component with the header and sidebar pinned tab\n */\nconst LayoutWrapper = ({ children, savedOpen, setSavedOpen }) => {\n  return (\n    <>\n      <ContentWrapper open={savedOpen}>\n        <SideNav />\n        <Center id=\"center\">{children}</Center>\n        <Right open={savedOpen}>\n          <PinnedData open={savedOpen} setSavedOpen={setSavedOpen} />\n        </Right>\n      </ContentWrapper>\n    </>\n  )\n}\n\nconst BLOCK_DIFFERENCE_THRESHOLD = 30\n\nfunction App() {\n  const [network] = useNetwork()\n  const [savedOpen, setSavedOpen] = useState(false)\n\n  const globalData = useGlobalData()\n  const [dailyData, weeklyData] = useGlobalChartData()\n  const globalChartData = [dailyData, weeklyData]\n  const [latestBlock, headBlock, latestMEVBlock, headMEVBlock] = useLatestBlocks()\n\n  // show warning\n  const isNonMEVChartSynced = headBlock && latestBlock ? headBlock - latestBlock < BLOCK_DIFFERENCE_THRESHOLD : false\n  const isMEVChartSynced =\n    headMEVBlock && latestMEVBlock ? headMEVBlock - latestMEVBlock < BLOCK_DIFFERENCE_THRESHOLD : false\n  const showWarning = !isNonMEVChartSynced || !isMEVChartSynced\n\n  const { client } = getClient(network)\n  const { blockchainName } = chainConfig[network]\n\n  return (\n    <ApolloProvider client={client}>\n      <AppWrapper>\n        {showWarning && (\n          <WarningWrapper>\n            <WarningBanner>\n              {`Warning: `}\n              {!isMEVChartSynced &&\n                network === 'BINANCE_SMART_CHAIN' &&\n                `Data for MEV chart has only synced to ${blockchainName} block ${latestMEVBlock} (out of ${headMEVBlock}).`}\n              <br />\n              {!isNonMEVChartSynced &&\n                `Data for Volume and Liquidity chart has only synced to ${blockchainName} block ${latestBlock} (out of ${headBlock}).`}\n            </WarningBanner>\n          </WarningWrapper>\n        )}\n        {globalData &&\n        Object.keys(globalData).length > 0 &&\n        globalChartData &&\n        Object.keys(globalChartData).length > 0 ? (\n          <HashRouter>\n            <Route component={GoogleAnalyticsReporter} />\n            <Switch>\n              <Route\n                exacts\n                strict\n                path=\"/token/:tokenAddress\"\n                render={({ match }) => {\n                  if (\n                    isAddress(match.params.tokenAddress.toLowerCase()) &&\n                    !Object.keys(TOKEN_BLACKLIST).includes(match.params.tokenAddress.toLowerCase())\n                  ) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <TokenPage address={match.params.tokenAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n              <Route\n                exacts\n                strict\n                path=\"/pair/:pairAddress\"\n                render={({ match }) => {\n                  if (\n                    isAddress(match.params.pairAddress.toLowerCase()) &&\n                    !Object.keys(PAIR_BLACKLIST).includes(match.params.pairAddress.toLowerCase())\n                  ) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <PairPage pairAddress={match.params.pairAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n              <Route\n                exacts\n                strict\n                path=\"/account/:accountAddress\"\n                render={({ match }) => {\n                  if (isAddress(match.params.accountAddress.toLowerCase())) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <AccountPage account={match.params.accountAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n\n              <Route path=\"/home\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <GlobalPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/tokens\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AllTokensPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/pairs\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AllPairsPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/accounts\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AccountLookup />\n                </LayoutWrapper>\n              </Route>\n\n              <Redirect to=\"/home\" />\n            </Switch>\n          </HashRouter>\n        ) : (\n          <LocalLoader fill=\"true\" />\n        )}\n      </AppWrapper>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ThemeProvider, { GlobalStyle } from './Theme'\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\nimport GlobalDataContextProvider from './contexts/GlobalData'\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\nimport ApplicationContextProvider from './contexts/Application'\nimport UserContextProvider from './contexts/User'\nimport App from './App'\n\nfunction ContextProviders({ children }) {\n  return (\n    <LocalStorageContextProvider>\n      <ApplicationContextProvider>\n        <TokenDataContextProvider>\n          <GlobalDataContextProvider>\n            <PairDataContextProvider>\n              <UserContextProvider>{children}</UserContextProvider>\n            </PairDataContextProvider>\n          </GlobalDataContextProvider>\n        </TokenDataContextProvider>\n      </ApplicationContextProvider>\n    </LocalStorageContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <LocalStorageContextUpdater />\n      <PairDataContextUpdater />\n      <TokenDataContextUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <ContextProviders>\n    <Updaters />\n    <ThemeProvider>\n      <>\n        <GlobalStyle />\n        <App />\n      </>\n    </ThemeProvider>\n  </ContextProviders>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}